// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: t/test-full.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "t/test-full.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace foo {

namespace {

const ::google::protobuf::Descriptor* SubMess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubMess_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubMess_SubSubMess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubMess_SubSubMess_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldNo15_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldNo15_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldNo16_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldNo16_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldNo2047_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldNo2047_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldNo2048_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldNo2048_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldNo262143_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldNo262143_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldNo262144_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldNo262144_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldNo33554431_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldNo33554431_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldNo33554432_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldNo33554432_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMess_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessPacked_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessPacked_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessOptional_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessOptional_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessOneof_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessOneof_reflection_ = NULL;
struct TestMessOneofOneofInstance {
  ::google::protobuf::int32 test_int32_;
  ::google::protobuf::int32 test_sint32_;
  ::google::protobuf::int32 test_sfixed32_;
  ::google::protobuf::int64 test_int64_;
  ::google::protobuf::int64 test_sint64_;
  ::google::protobuf::int64 test_sfixed64_;
  ::google::protobuf::uint32 test_uint32_;
  ::google::protobuf::uint32 test_fixed32_;
  ::google::protobuf::uint64 test_uint64_;
  ::google::protobuf::uint64 test_fixed64_;
  float test_float_;
  double test_double_;
  bool test_boolean_;
  int test_enum_small_;
  int test_enum_;
  const ::std::string* test_string_;
  const ::std::string* test_bytes_;
  const ::foo::SubMess* test_message_;
}* TestMessOneof_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredInt32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredInt32_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredSInt32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredSInt32_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredSFixed32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredSFixed32_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredInt64_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredInt64_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredSInt64_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredSInt64_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredSFixed64_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredSFixed64_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredUInt32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredUInt32_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredFixed32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredFixed32_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredUInt64_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredUInt64_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredFixed64_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredFixed64_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredFloat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredFloat_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredDouble_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredDouble_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredBool_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredBool_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredEnum_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredEnum_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredEnumSmall_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredEnumSmall_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredString_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredString_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredBytes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredBytes_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessRequiredMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessRequiredMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* EmptyMess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmptyMess_reflection_ = NULL;
const ::google::protobuf::Descriptor* DefaultRequiredValues_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DefaultRequiredValues_reflection_ = NULL;
const ::google::protobuf::Descriptor* DefaultOptionalValues_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DefaultOptionalValues_reflection_ = NULL;
const ::google::protobuf::Descriptor* LowerCase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LowerCase_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LowerCase_CaseEnum_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AllocValues_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllocValues_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestRequiredFieldsBitmap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestRequiredFieldsBitmap_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestFieldFlags_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestFieldFlags_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessageCheck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageCheck_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessageCheck_SubMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageCheck_SubMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessSubMess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessSubMess_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TestEnumSmall_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TestEnum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TestEnumDupValues_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_t_2ftest_2dfull_2eproto() {
  protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "t/test-full.proto");
  GOOGLE_CHECK(file != NULL);
  SubMess_descriptor_ = file->message_type(0);
  static const int SubMess_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess, test_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess, val1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess, val2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess, rep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess, sub1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess, sub2_),
  };
  SubMess_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubMess_descriptor_,
      SubMess::default_instance_,
      SubMess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubMess));
  SubMess_SubSubMess_descriptor_ = SubMess_descriptor_->nested_type(0);
  static const int SubMess_SubSubMess_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess_SubSubMess, val1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess_SubSubMess, rep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess_SubSubMess, bytes1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess_SubSubMess, str1_),
  };
  SubMess_SubSubMess_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubMess_SubSubMess_descriptor_,
      SubMess_SubSubMess::default_instance_,
      SubMess_SubSubMess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess_SubSubMess, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubMess_SubSubMess, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubMess_SubSubMess));
  TestFieldNo15_descriptor_ = file->message_type(1);
  static const int TestFieldNo15_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo15, test_),
  };
  TestFieldNo15_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldNo15_descriptor_,
      TestFieldNo15::default_instance_,
      TestFieldNo15_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo15, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo15, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldNo15));
  TestFieldNo16_descriptor_ = file->message_type(2);
  static const int TestFieldNo16_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo16, test_),
  };
  TestFieldNo16_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldNo16_descriptor_,
      TestFieldNo16::default_instance_,
      TestFieldNo16_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo16, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo16, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldNo16));
  TestFieldNo2047_descriptor_ = file->message_type(3);
  static const int TestFieldNo2047_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo2047, test_),
  };
  TestFieldNo2047_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldNo2047_descriptor_,
      TestFieldNo2047::default_instance_,
      TestFieldNo2047_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo2047, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo2047, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldNo2047));
  TestFieldNo2048_descriptor_ = file->message_type(4);
  static const int TestFieldNo2048_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo2048, test_),
  };
  TestFieldNo2048_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldNo2048_descriptor_,
      TestFieldNo2048::default_instance_,
      TestFieldNo2048_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo2048, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo2048, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldNo2048));
  TestFieldNo262143_descriptor_ = file->message_type(5);
  static const int TestFieldNo262143_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo262143, test_),
  };
  TestFieldNo262143_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldNo262143_descriptor_,
      TestFieldNo262143::default_instance_,
      TestFieldNo262143_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo262143, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo262143, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldNo262143));
  TestFieldNo262144_descriptor_ = file->message_type(6);
  static const int TestFieldNo262144_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo262144, test_),
  };
  TestFieldNo262144_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldNo262144_descriptor_,
      TestFieldNo262144::default_instance_,
      TestFieldNo262144_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo262144, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo262144, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldNo262144));
  TestFieldNo33554431_descriptor_ = file->message_type(7);
  static const int TestFieldNo33554431_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo33554431, test_),
  };
  TestFieldNo33554431_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldNo33554431_descriptor_,
      TestFieldNo33554431::default_instance_,
      TestFieldNo33554431_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo33554431, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo33554431, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldNo33554431));
  TestFieldNo33554432_descriptor_ = file->message_type(8);
  static const int TestFieldNo33554432_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo33554432, test_),
  };
  TestFieldNo33554432_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldNo33554432_descriptor_,
      TestFieldNo33554432::default_instance_,
      TestFieldNo33554432_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo33554432, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldNo33554432, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldNo33554432));
  TestMess_descriptor_ = file->message_type(9);
  static const int TestMess_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_boolean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_enum_small_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, test_message_),
  };
  TestMess_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMess_descriptor_,
      TestMess::default_instance_,
      TestMess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMess, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMess));
  TestMessPacked_descriptor_ = file->message_type(10);
  static const int TestMessPacked_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_boolean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_enum_small_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, test_enum_),
  };
  TestMessPacked_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessPacked_descriptor_,
      TestMessPacked::default_instance_,
      TestMessPacked_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessPacked, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessPacked));
  TestMessOptional_descriptor_ = file->message_type(11);
  static const int TestMessOptional_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_boolean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_enum_small_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_enum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, test_message_),
  };
  TestMessOptional_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessOptional_descriptor_,
      TestMessOptional::default_instance_,
      TestMessOptional_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOptional, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessOptional));
  TestMessOneof_descriptor_ = file->message_type(12);
  static const int TestMessOneof_offsets_[20] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_int32_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_sint32_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_sfixed32_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_int64_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_sint64_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_sfixed64_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_uint32_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_fixed32_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_uint64_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_fixed64_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_float_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_double_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_boolean_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_enum_small_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_enum_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_string_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_bytes_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TestMessOneof_default_oneof_instance_, test_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOneof, opt_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOneof, test_oneof_),
  };
  TestMessOneof_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessOneof_descriptor_,
      TestMessOneof::default_instance_,
      TestMessOneof_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOneof, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOneof, _unknown_fields_),
      -1,
      TestMessOneof_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessOneof, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessOneof));
  TestMessRequiredInt32_descriptor_ = file->message_type(13);
  static const int TestMessRequiredInt32_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredInt32, test_),
  };
  TestMessRequiredInt32_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredInt32_descriptor_,
      TestMessRequiredInt32::default_instance_,
      TestMessRequiredInt32_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredInt32, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredInt32, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredInt32));
  TestMessRequiredSInt32_descriptor_ = file->message_type(14);
  static const int TestMessRequiredSInt32_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSInt32, test_),
  };
  TestMessRequiredSInt32_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredSInt32_descriptor_,
      TestMessRequiredSInt32::default_instance_,
      TestMessRequiredSInt32_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSInt32, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSInt32, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredSInt32));
  TestMessRequiredSFixed32_descriptor_ = file->message_type(15);
  static const int TestMessRequiredSFixed32_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSFixed32, test_),
  };
  TestMessRequiredSFixed32_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredSFixed32_descriptor_,
      TestMessRequiredSFixed32::default_instance_,
      TestMessRequiredSFixed32_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSFixed32, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSFixed32, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredSFixed32));
  TestMessRequiredInt64_descriptor_ = file->message_type(16);
  static const int TestMessRequiredInt64_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredInt64, test_),
  };
  TestMessRequiredInt64_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredInt64_descriptor_,
      TestMessRequiredInt64::default_instance_,
      TestMessRequiredInt64_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredInt64, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredInt64, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredInt64));
  TestMessRequiredSInt64_descriptor_ = file->message_type(17);
  static const int TestMessRequiredSInt64_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSInt64, test_),
  };
  TestMessRequiredSInt64_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredSInt64_descriptor_,
      TestMessRequiredSInt64::default_instance_,
      TestMessRequiredSInt64_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSInt64, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSInt64, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredSInt64));
  TestMessRequiredSFixed64_descriptor_ = file->message_type(18);
  static const int TestMessRequiredSFixed64_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSFixed64, test_),
  };
  TestMessRequiredSFixed64_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredSFixed64_descriptor_,
      TestMessRequiredSFixed64::default_instance_,
      TestMessRequiredSFixed64_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSFixed64, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredSFixed64, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredSFixed64));
  TestMessRequiredUInt32_descriptor_ = file->message_type(19);
  static const int TestMessRequiredUInt32_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredUInt32, test_),
  };
  TestMessRequiredUInt32_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredUInt32_descriptor_,
      TestMessRequiredUInt32::default_instance_,
      TestMessRequiredUInt32_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredUInt32, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredUInt32, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredUInt32));
  TestMessRequiredFixed32_descriptor_ = file->message_type(20);
  static const int TestMessRequiredFixed32_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredFixed32, test_),
  };
  TestMessRequiredFixed32_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredFixed32_descriptor_,
      TestMessRequiredFixed32::default_instance_,
      TestMessRequiredFixed32_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredFixed32, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredFixed32, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredFixed32));
  TestMessRequiredUInt64_descriptor_ = file->message_type(21);
  static const int TestMessRequiredUInt64_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredUInt64, test_),
  };
  TestMessRequiredUInt64_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredUInt64_descriptor_,
      TestMessRequiredUInt64::default_instance_,
      TestMessRequiredUInt64_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredUInt64, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredUInt64, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredUInt64));
  TestMessRequiredFixed64_descriptor_ = file->message_type(22);
  static const int TestMessRequiredFixed64_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredFixed64, test_),
  };
  TestMessRequiredFixed64_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredFixed64_descriptor_,
      TestMessRequiredFixed64::default_instance_,
      TestMessRequiredFixed64_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredFixed64, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredFixed64, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredFixed64));
  TestMessRequiredFloat_descriptor_ = file->message_type(23);
  static const int TestMessRequiredFloat_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredFloat, test_),
  };
  TestMessRequiredFloat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredFloat_descriptor_,
      TestMessRequiredFloat::default_instance_,
      TestMessRequiredFloat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredFloat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredFloat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredFloat));
  TestMessRequiredDouble_descriptor_ = file->message_type(24);
  static const int TestMessRequiredDouble_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredDouble, test_),
  };
  TestMessRequiredDouble_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredDouble_descriptor_,
      TestMessRequiredDouble::default_instance_,
      TestMessRequiredDouble_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredDouble, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredDouble, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredDouble));
  TestMessRequiredBool_descriptor_ = file->message_type(25);
  static const int TestMessRequiredBool_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredBool, test_),
  };
  TestMessRequiredBool_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredBool_descriptor_,
      TestMessRequiredBool::default_instance_,
      TestMessRequiredBool_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredBool, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredBool, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredBool));
  TestMessRequiredEnum_descriptor_ = file->message_type(26);
  static const int TestMessRequiredEnum_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredEnum, test_),
  };
  TestMessRequiredEnum_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredEnum_descriptor_,
      TestMessRequiredEnum::default_instance_,
      TestMessRequiredEnum_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredEnum, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredEnum, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredEnum));
  TestMessRequiredEnumSmall_descriptor_ = file->message_type(27);
  static const int TestMessRequiredEnumSmall_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredEnumSmall, test_),
  };
  TestMessRequiredEnumSmall_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredEnumSmall_descriptor_,
      TestMessRequiredEnumSmall::default_instance_,
      TestMessRequiredEnumSmall_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredEnumSmall, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredEnumSmall, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredEnumSmall));
  TestMessRequiredString_descriptor_ = file->message_type(28);
  static const int TestMessRequiredString_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredString, test_),
  };
  TestMessRequiredString_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredString_descriptor_,
      TestMessRequiredString::default_instance_,
      TestMessRequiredString_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredString, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredString, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredString));
  TestMessRequiredBytes_descriptor_ = file->message_type(29);
  static const int TestMessRequiredBytes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredBytes, test_),
  };
  TestMessRequiredBytes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredBytes_descriptor_,
      TestMessRequiredBytes::default_instance_,
      TestMessRequiredBytes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredBytes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredBytes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredBytes));
  TestMessRequiredMessage_descriptor_ = file->message_type(30);
  static const int TestMessRequiredMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredMessage, test_),
  };
  TestMessRequiredMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessRequiredMessage_descriptor_,
      TestMessRequiredMessage::default_instance_,
      TestMessRequiredMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessRequiredMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessRequiredMessage));
  EmptyMess_descriptor_ = file->message_type(31);
  static const int EmptyMess_offsets_[1] = {
  };
  EmptyMess_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EmptyMess_descriptor_,
      EmptyMess::default_instance_,
      EmptyMess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyMess, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyMess, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EmptyMess));
  DefaultRequiredValues_descriptor_ = file->message_type(32);
  static const int DefaultRequiredValues_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, v_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, v_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, v_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, v_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, v_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, v_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, v_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, v_bytes_),
  };
  DefaultRequiredValues_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DefaultRequiredValues_descriptor_,
      DefaultRequiredValues::default_instance_,
      DefaultRequiredValues_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultRequiredValues, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DefaultRequiredValues));
  DefaultOptionalValues_descriptor_ = file->message_type(33);
  static const int DefaultOptionalValues_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, v_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, v_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, v_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, v_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, v_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, v_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, v_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, v_bytes_),
  };
  DefaultOptionalValues_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DefaultOptionalValues_descriptor_,
      DefaultOptionalValues::default_instance_,
      DefaultOptionalValues_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultOptionalValues, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DefaultOptionalValues));
  LowerCase_descriptor_ = file->message_type(34);
  static const int LowerCase_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowerCase, value_),
  };
  LowerCase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LowerCase_descriptor_,
      LowerCase::default_instance_,
      LowerCase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowerCase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowerCase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LowerCase));
  LowerCase_CaseEnum_descriptor_ = LowerCase_descriptor_->enum_type(0);
  AllocValues_descriptor_ = file->message_type(35);
  static const int AllocValues_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocValues, o_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocValues, r_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocValues, a_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocValues, a_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocValues, a_mess_),
  };
  AllocValues_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllocValues_descriptor_,
      AllocValues::default_instance_,
      AllocValues_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocValues, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocValues, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllocValues));
  TestRequiredFieldsBitmap_descriptor_ = file->message_type(36);
  static const int TestRequiredFieldsBitmap_offsets_[129] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field15_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field16_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field17_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field18_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field19_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field20_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field21_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field22_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field23_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field24_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field25_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field26_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field27_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field28_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field29_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field30_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field31_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field33_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field34_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field35_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field36_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field37_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field38_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field39_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field40_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field41_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field42_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field43_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field44_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field45_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field46_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field47_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field48_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field49_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field50_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field51_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field52_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field53_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field54_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field55_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field56_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field57_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field58_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field59_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field60_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field61_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field62_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field63_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field65_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field66_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field67_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field68_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field69_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field70_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field71_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field72_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field73_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field74_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field75_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field76_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field77_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field78_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field79_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field80_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field81_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field82_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field83_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field84_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field85_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field86_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field87_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field88_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field89_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field90_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field91_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field92_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field93_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field94_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field95_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field96_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field97_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field98_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field99_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field100_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field101_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field102_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field103_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field104_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field105_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field106_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field107_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field108_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field109_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field110_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field111_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field112_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field113_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field114_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field115_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field116_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field117_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field118_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field119_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field120_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field121_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field122_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field123_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field124_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field125_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field126_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field127_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field128_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, field129_),
  };
  TestRequiredFieldsBitmap_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestRequiredFieldsBitmap_descriptor_,
      TestRequiredFieldsBitmap::default_instance_,
      TestRequiredFieldsBitmap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestRequiredFieldsBitmap, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestRequiredFieldsBitmap));
  TestFieldFlags_descriptor_ = file->message_type(37);
  static const int TestFieldFlags_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldFlags, no_flags1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldFlags, no_flags2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldFlags, no_flags3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldFlags, packed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldFlags, packed_deprecated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldFlags, deprecated_),
  };
  TestFieldFlags_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestFieldFlags_descriptor_,
      TestFieldFlags::default_instance_,
      TestFieldFlags_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldFlags, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestFieldFlags, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestFieldFlags));
  TestMessageCheck_descriptor_ = file->message_type(38);
  static const int TestMessageCheck_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, required_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, repeated_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, optional_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, required_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, repeated_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, optional_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, required_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, repeated_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, optional_bytes_),
  };
  TestMessageCheck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageCheck_descriptor_,
      TestMessageCheck::default_instance_,
      TestMessageCheck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessageCheck));
  TestMessageCheck_SubMessage_descriptor_ = TestMessageCheck_descriptor_->nested_type(0);
  static const int TestMessageCheck_SubMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck_SubMessage, str_),
  };
  TestMessageCheck_SubMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageCheck_SubMessage_descriptor_,
      TestMessageCheck_SubMessage::default_instance_,
      TestMessageCheck_SubMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck_SubMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageCheck_SubMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessageCheck_SubMessage));
  TestMessSubMess_descriptor_ = file->message_type(39);
  static const int TestMessSubMess_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessSubMess, rep_mess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessSubMess, opt_mess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessSubMess, oneof_mess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessSubMess, req_mess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessSubMess, def_mess_),
  };
  TestMessSubMess_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessSubMess_descriptor_,
      TestMessSubMess::default_instance_,
      TestMessSubMess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessSubMess, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessSubMess, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TestMessSubMess));
  TestEnumSmall_descriptor_ = file->enum_type(0);
  TestEnum_descriptor_ = file->enum_type(1);
  TestEnumDupValues_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_t_2ftest_2dfull_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubMess_descriptor_, &SubMess::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubMess_SubSubMess_descriptor_, &SubMess_SubSubMess::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldNo15_descriptor_, &TestFieldNo15::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldNo16_descriptor_, &TestFieldNo16::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldNo2047_descriptor_, &TestFieldNo2047::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldNo2048_descriptor_, &TestFieldNo2048::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldNo262143_descriptor_, &TestFieldNo262143::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldNo262144_descriptor_, &TestFieldNo262144::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldNo33554431_descriptor_, &TestFieldNo33554431::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldNo33554432_descriptor_, &TestFieldNo33554432::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMess_descriptor_, &TestMess::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessPacked_descriptor_, &TestMessPacked::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessOptional_descriptor_, &TestMessOptional::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessOneof_descriptor_, &TestMessOneof::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredInt32_descriptor_, &TestMessRequiredInt32::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredSInt32_descriptor_, &TestMessRequiredSInt32::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredSFixed32_descriptor_, &TestMessRequiredSFixed32::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredInt64_descriptor_, &TestMessRequiredInt64::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredSInt64_descriptor_, &TestMessRequiredSInt64::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredSFixed64_descriptor_, &TestMessRequiredSFixed64::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredUInt32_descriptor_, &TestMessRequiredUInt32::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredFixed32_descriptor_, &TestMessRequiredFixed32::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredUInt64_descriptor_, &TestMessRequiredUInt64::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredFixed64_descriptor_, &TestMessRequiredFixed64::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredFloat_descriptor_, &TestMessRequiredFloat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredDouble_descriptor_, &TestMessRequiredDouble::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredBool_descriptor_, &TestMessRequiredBool::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredEnum_descriptor_, &TestMessRequiredEnum::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredEnumSmall_descriptor_, &TestMessRequiredEnumSmall::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredString_descriptor_, &TestMessRequiredString::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredBytes_descriptor_, &TestMessRequiredBytes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessRequiredMessage_descriptor_, &TestMessRequiredMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EmptyMess_descriptor_, &EmptyMess::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DefaultRequiredValues_descriptor_, &DefaultRequiredValues::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DefaultOptionalValues_descriptor_, &DefaultOptionalValues::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LowerCase_descriptor_, &LowerCase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllocValues_descriptor_, &AllocValues::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestRequiredFieldsBitmap_descriptor_, &TestRequiredFieldsBitmap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestFieldFlags_descriptor_, &TestFieldFlags::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageCheck_descriptor_, &TestMessageCheck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageCheck_SubMessage_descriptor_, &TestMessageCheck_SubMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessSubMess_descriptor_, &TestMessSubMess::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_t_2ftest_2dfull_2eproto() {
  delete SubMess::default_instance_;
  delete SubMess_reflection_;
  delete SubMess_SubSubMess::default_instance_;
  delete SubMess_SubSubMess_reflection_;
  delete SubMess_SubSubMess::_default_bytes1_;
  delete SubMess_SubSubMess::_default_str1_;
  delete TestFieldNo15::default_instance_;
  delete TestFieldNo15_reflection_;
  delete TestFieldNo16::default_instance_;
  delete TestFieldNo16_reflection_;
  delete TestFieldNo2047::default_instance_;
  delete TestFieldNo2047_reflection_;
  delete TestFieldNo2048::default_instance_;
  delete TestFieldNo2048_reflection_;
  delete TestFieldNo262143::default_instance_;
  delete TestFieldNo262143_reflection_;
  delete TestFieldNo262144::default_instance_;
  delete TestFieldNo262144_reflection_;
  delete TestFieldNo33554431::default_instance_;
  delete TestFieldNo33554431_reflection_;
  delete TestFieldNo33554432::default_instance_;
  delete TestFieldNo33554432_reflection_;
  delete TestMess::default_instance_;
  delete TestMess_reflection_;
  delete TestMessPacked::default_instance_;
  delete TestMessPacked_reflection_;
  delete TestMessOptional::default_instance_;
  delete TestMessOptional_reflection_;
  delete TestMessOneof::default_instance_;
  delete TestMessOneof_default_oneof_instance_;
  delete TestMessOneof_reflection_;
  delete TestMessRequiredInt32::default_instance_;
  delete TestMessRequiredInt32_reflection_;
  delete TestMessRequiredSInt32::default_instance_;
  delete TestMessRequiredSInt32_reflection_;
  delete TestMessRequiredSFixed32::default_instance_;
  delete TestMessRequiredSFixed32_reflection_;
  delete TestMessRequiredInt64::default_instance_;
  delete TestMessRequiredInt64_reflection_;
  delete TestMessRequiredSInt64::default_instance_;
  delete TestMessRequiredSInt64_reflection_;
  delete TestMessRequiredSFixed64::default_instance_;
  delete TestMessRequiredSFixed64_reflection_;
  delete TestMessRequiredUInt32::default_instance_;
  delete TestMessRequiredUInt32_reflection_;
  delete TestMessRequiredFixed32::default_instance_;
  delete TestMessRequiredFixed32_reflection_;
  delete TestMessRequiredUInt64::default_instance_;
  delete TestMessRequiredUInt64_reflection_;
  delete TestMessRequiredFixed64::default_instance_;
  delete TestMessRequiredFixed64_reflection_;
  delete TestMessRequiredFloat::default_instance_;
  delete TestMessRequiredFloat_reflection_;
  delete TestMessRequiredDouble::default_instance_;
  delete TestMessRequiredDouble_reflection_;
  delete TestMessRequiredBool::default_instance_;
  delete TestMessRequiredBool_reflection_;
  delete TestMessRequiredEnum::default_instance_;
  delete TestMessRequiredEnum_reflection_;
  delete TestMessRequiredEnumSmall::default_instance_;
  delete TestMessRequiredEnumSmall_reflection_;
  delete TestMessRequiredString::default_instance_;
  delete TestMessRequiredString_reflection_;
  delete TestMessRequiredBytes::default_instance_;
  delete TestMessRequiredBytes_reflection_;
  delete TestMessRequiredMessage::default_instance_;
  delete TestMessRequiredMessage_reflection_;
  delete EmptyMess::default_instance_;
  delete EmptyMess_reflection_;
  delete DefaultRequiredValues::default_instance_;
  delete DefaultRequiredValues_reflection_;
  delete DefaultRequiredValues::_default_v_string_;
  delete DefaultRequiredValues::_default_v_bytes_;
  delete DefaultOptionalValues::default_instance_;
  delete DefaultOptionalValues_reflection_;
  delete DefaultOptionalValues::_default_v_string_;
  delete DefaultOptionalValues::_default_v_bytes_;
  delete LowerCase::default_instance_;
  delete LowerCase_reflection_;
  delete AllocValues::default_instance_;
  delete AllocValues_reflection_;
  delete TestRequiredFieldsBitmap::default_instance_;
  delete TestRequiredFieldsBitmap_reflection_;
  delete TestFieldFlags::default_instance_;
  delete TestFieldFlags_reflection_;
  delete TestMessageCheck::default_instance_;
  delete TestMessageCheck_reflection_;
  delete TestMessageCheck_SubMessage::default_instance_;
  delete TestMessageCheck_SubMessage_reflection_;
  delete TestMessSubMess::default_instance_;
  delete TestMessSubMess_reflection_;
}

void protobuf_AddDesc_t_2ftest_2dfull_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021t/test-full.proto\022\003foo\"\365\001\n\007SubMess\022\014\n\004"
    "test\030\004 \002(\005\022\014\n\004val1\030\006 \001(\005\022\014\n\004val2\030\007 \001(\005\022\013"
    "\n\003rep\030\010 \003(\005\022%\n\004sub1\030\t \001(\0132\027.foo.SubMess."
    "SubSubMess\022%\n\004sub2\030\n \001(\0132\027.foo.SubMess.S"
    "ubSubMess\032e\n\nSubSubMess\022\021\n\004val1\030\001 \001(\005:\0031"
    "00\022\013\n\003rep\030\004 \003(\005\022\033\n\006bytes1\030\002 \001(\014:\013a \\000 "
    "char\022\032\n\004str1\030\003 \001(\t:\014hello world\n\"\035\n\rTest"
    "FieldNo15\022\014\n\004test\030\017 \002(\t\"\035\n\rTestFieldNo16"
    "\022\014\n\004test\030\020 \002(\t\" \n\017TestFieldNo2047\022\r\n\004tes"
    "t\030\377\017 \002(\t\" \n\017TestFieldNo2048\022\r\n\004test\030\200\020 \002"
    "(\t\"#\n\021TestFieldNo262143\022\016\n\004test\030\377\377\017 \002(\t\""
    "#\n\021TestFieldNo262144\022\016\n\004test\030\200\200\020 \002(\t\"&\n\023"
    "TestFieldNo33554431\022\017\n\004test\030\377\377\377\017 \002(\t\"&\n\023"
    "TestFieldNo33554432\022\017\n\004test\030\200\200\200\020 \002(\t\"\273\003\n"
    "\010TestMess\022\022\n\ntest_int32\030\001 \003(\005\022\023\n\013test_si"
    "nt32\030\002 \003(\021\022\025\n\rtest_sfixed32\030\003 \003(\017\022\022\n\ntes"
    "t_int64\030\004 \003(\003\022\023\n\013test_sint64\030\005 \003(\022\022\025\n\rte"
    "st_sfixed64\030\006 \003(\020\022\023\n\013test_uint32\030\007 \003(\r\022\024"
    "\n\014test_fixed32\030\010 \003(\007\022\023\n\013test_uint64\030\t \003("
    "\004\022\024\n\014test_fixed64\030\n \003(\006\022\022\n\ntest_float\030\013 "
    "\003(\002\022\023\n\013test_double\030\014 \003(\001\022\024\n\014test_boolean"
    "\030\r \003(\010\022+\n\017test_enum_small\030\016 \003(\0162\022.foo.Te"
    "stEnumSmall\022 \n\ttest_enum\030\017 \003(\0162\r.foo.Tes"
    "tEnum\022\023\n\013test_string\030\020 \003(\t\022\022\n\ntest_bytes"
    "\030\021 \003(\014\022\"\n\014test_message\030\022 \003(\0132\014.foo.SubMe"
    "ss\"\260\003\n\016TestMessPacked\022\026\n\ntest_int32\030\001 \003("
    "\005B\002\020\001\022\027\n\013test_sint32\030\002 \003(\021B\002\020\001\022\031\n\rtest_s"
    "fixed32\030\003 \003(\017B\002\020\001\022\026\n\ntest_int64\030\004 \003(\003B\002\020"
    "\001\022\027\n\013test_sint64\030\005 \003(\022B\002\020\001\022\031\n\rtest_sfixe"
    "d64\030\006 \003(\020B\002\020\001\022\027\n\013test_uint32\030\007 \003(\rB\002\020\001\022\030"
    "\n\014test_fixed32\030\010 \003(\007B\002\020\001\022\027\n\013test_uint64\030"
    "\t \003(\004B\002\020\001\022\030\n\014test_fixed64\030\n \003(\006B\002\020\001\022\026\n\nt"
    "est_float\030\013 \003(\002B\002\020\001\022\027\n\013test_double\030\014 \003(\001"
    "B\002\020\001\022\030\n\014test_boolean\030\r \003(\010B\002\020\001\022/\n\017test_e"
    "num_small\030\016 \003(\0162\022.foo.TestEnumSmallB\002\020\001\022"
    "$\n\ttest_enum\030\017 \003(\0162\r.foo.TestEnumB\002\020\001\"\303\003"
    "\n\020TestMessOptional\022\022\n\ntest_int32\030\001 \001(\005\022\023"
    "\n\013test_sint32\030\002 \001(\021\022\025\n\rtest_sfixed32\030\003 \001"
    "(\017\022\022\n\ntest_int64\030\004 \001(\003\022\023\n\013test_sint64\030\005 "
    "\001(\022\022\025\n\rtest_sfixed64\030\006 \001(\020\022\023\n\013test_uint3"
    "2\030\007 \001(\r\022\024\n\014test_fixed32\030\010 \001(\007\022\023\n\013test_ui"
    "nt64\030\t \001(\004\022\024\n\014test_fixed64\030\n \001(\006\022\022\n\ntest"
    "_float\030\013 \001(\002\022\023\n\013test_double\030\014 \001(\001\022\024\n\014tes"
    "t_boolean\030\r \001(\010\022+\n\017test_enum_small\030\016 \001(\016"
    "2\022.foo.TestEnumSmall\022 \n\ttest_enum\030\017 \001(\0162"
    "\r.foo.TestEnum\022\023\n\013test_string\030\020 \001(\t\022\022\n\nt"
    "est_bytes\030\021 \001(\014\022\"\n\014test_message\030\022 \001(\0132\014."
    "foo.SubMess\"\203\004\n\rTestMessOneof\022\024\n\ntest_in"
    "t32\030\001 \001(\005H\000\022\025\n\013test_sint32\030\002 \001(\021H\000\022\027\n\rte"
    "st_sfixed32\030\003 \001(\017H\000\022\024\n\ntest_int64\030\004 \001(\003H"
    "\000\022\025\n\013test_sint64\030\005 \001(\022H\000\022\027\n\rtest_sfixed6"
    "4\030\006 \001(\020H\000\022\025\n\013test_uint32\030\007 \001(\rH\000\022\026\n\014test"
    "_fixed32\030\010 \001(\007H\000\022\025\n\013test_uint64\030\t \001(\004H\000\022"
    "\026\n\014test_fixed64\030\n \001(\006H\000\022\024\n\ntest_float\030\013 "
    "\001(\002H\000\022\025\n\013test_double\030\014 \001(\001H\000\022\026\n\014test_boo"
    "lean\030\r \001(\010H\000\022-\n\017test_enum_small\030\016 \001(\0162\022."
    "foo.TestEnumSmallH\000\022\"\n\ttest_enum\030\017 \001(\0162\r"
    ".foo.TestEnumH\000\022\025\n\013test_string\030\020 \001(\tH\000\022\024"
    "\n\ntest_bytes\030\021 \001(\014H\000\022$\n\014test_message\030\022 \001"
    "(\0132\014.foo.SubMessH\000\022\017\n\007opt_int\030\023 \001(\005B\014\n\nt"
    "est_oneof\"%\n\025TestMessRequiredInt32\022\014\n\004te"
    "st\030* \002(\005\"&\n\026TestMessRequiredSInt32\022\014\n\004te"
    "st\030+ \002(\021\"(\n\030TestMessRequiredSFixed32\022\014\n\004"
    "test\030d \002(\017\"%\n\025TestMessRequiredInt64\022\014\n\004t"
    "est\030\001 \002(\003\"&\n\026TestMessRequiredSInt64\022\014\n\004t"
    "est\030\013 \002(\022\"(\n\030TestMessRequiredSFixed64\022\014\n"
    "\004test\030\014 \002(\020\"&\n\026TestMessRequiredUInt32\022\014\n"
    "\004test\030\001 \002(\r\"\'\n\027TestMessRequiredFixed32\022\014"
    "\n\004test\030\001 \002(\007\"&\n\026TestMessRequiredUInt64\022\014"
    "\n\004test\030\001 \002(\004\"\'\n\027TestMessRequiredFixed64\022"
    "\014\n\004test\030\001 \002(\006\"%\n\025TestMessRequiredFloat\022\014"
    "\n\004test\030\001 \002(\002\"&\n\026TestMessRequiredDouble\022\014"
    "\n\004test\030\001 \002(\001\"$\n\024TestMessRequiredBool\022\014\n\004"
    "test\030\001 \002(\010\"3\n\024TestMessRequiredEnum\022\033\n\004te"
    "st\030\001 \002(\0162\r.foo.TestEnum\"=\n\031TestMessRequi"
    "redEnumSmall\022 \n\004test\030\001 \002(\0162\022.foo.TestEnu"
    "mSmall\"&\n\026TestMessRequiredString\022\014\n\004test"
    "\030\001 \002(\t\"%\n\025TestMessRequiredBytes\022\014\n\004test\030"
    "\001 \002(\014\"5\n\027TestMessRequiredMessage\022\032\n\004test"
    "\030\001 \002(\0132\014.foo.SubMess\"\013\n\tEmptyMess\"\342\001\n\025De"
    "faultRequiredValues\022\024\n\007v_int32\030\001 \002(\005:\003-4"
    "2\022\025\n\010v_uint32\030\002 \002(\r:\003666\022\027\n\007v_int64\030\003 \002("
    "\005:\006100000\022\030\n\010v_uint64\030\004 \002(\r:\006100001\022\024\n\007v"
    "_float\030\005 \002(\002:\0032.5\022\025\n\010v_double\030\006 \002(\001:\0034.5"
    "\022\031\n\010v_string\030\007 \002(\t:\007hi mom\n\022!\n\007v_bytes\030\010"
    " \002(\014:\020a \\000 character\"\342\001\n\025DefaultOption"
    "alValues\022\024\n\007v_int32\030\001 \001(\005:\003-42\022\025\n\010v_uint"
    "32\030\002 \001(\r:\003666\022\027\n\007v_int64\030\003 \001(\005:\006100000\022\030"
    "\n\010v_uint64\030\004 \001(\r:\006100001\022\024\n\007v_float\030\005 \001("
    "\002:\0032.5\022\025\n\010v_double\030\006 \001(\001:\0034.5\022\031\n\010v_strin"
    "g\030\007 \001(\t:\007hi mom\n\022!\n\007v_bytes\030\010 \001(\014:\020a \\00"
    "0 character\"\\\n\tLowerCase\022-\n\005value\030\001 \001(\0162"
    "\027.foo.LowerCase.CaseEnum:\005lower\" \n\010CaseE"
    "num\022\t\n\005UPPER\020\001\022\t\n\005lower\020\002\"\177\n\013AllocValues"
    "\022\017\n\007o_bytes\030\001 \001(\014\022\020\n\010r_string\030\002 \003(\t\022\020\n\010a"
    "_string\030\003 \002(\t\022\017\n\007a_bytes\030\004 \002(\014\022*\n\006a_mess"
    "\030\005 \002(\0132\032.foo.DefaultRequiredValues\"\302\021\n\030T"
    "estRequiredFieldsBitmap\022\016\n\006field1\030\001 \002(\t\022"
    "\016\n\006field2\030\002 \001(\t\022\016\n\006field3\030\003 \001(\t\022\016\n\006field"
    "4\030\004 \001(\t\022\016\n\006field5\030\005 \001(\t\022\016\n\006field6\030\006 \001(\t\022"
    "\016\n\006field7\030\007 \001(\t\022\016\n\006field8\030\010 \001(\t\022\016\n\006field"
    "9\030\t \001(\t\022\017\n\007field10\030\n \001(\t\022\017\n\007field11\030\013 \001("
    "\t\022\017\n\007field12\030\014 \001(\t\022\017\n\007field13\030\r \001(\t\022\017\n\007f"
    "ield14\030\016 \001(\t\022\017\n\007field15\030\017 \001(\t\022\017\n\007field16"
    "\030\020 \001(\t\022\017\n\007field17\030\021 \001(\t\022\017\n\007field18\030\022 \001(\t"
    "\022\017\n\007field19\030\023 \001(\t\022\017\n\007field20\030\024 \001(\t\022\017\n\007fi"
    "eld21\030\025 \001(\t\022\017\n\007field22\030\026 \001(\t\022\017\n\007field23\030"
    "\027 \001(\t\022\017\n\007field24\030\030 \001(\t\022\017\n\007field25\030\031 \001(\t\022"
    "\017\n\007field26\030\032 \001(\t\022\017\n\007field27\030\033 \001(\t\022\017\n\007fie"
    "ld28\030\034 \001(\t\022\017\n\007field29\030\035 \001(\t\022\017\n\007field30\030\036"
    " \001(\t\022\017\n\007field31\030\037 \001(\t\022\017\n\007field32\030  \001(\t\022\017"
    "\n\007field33\030! \001(\t\022\017\n\007field34\030\" \001(\t\022\017\n\007fiel"
    "d35\030# \001(\t\022\017\n\007field36\030$ \001(\t\022\017\n\007field37\030% "
    "\001(\t\022\017\n\007field38\030& \001(\t\022\017\n\007field39\030\' \001(\t\022\017\n"
    "\007field40\030( \001(\t\022\017\n\007field41\030) \001(\t\022\017\n\007field"
    "42\030* \001(\t\022\017\n\007field43\030+ \001(\t\022\017\n\007field44\030, \001"
    "(\t\022\017\n\007field45\030- \001(\t\022\017\n\007field46\030. \001(\t\022\017\n\007"
    "field47\030/ \001(\t\022\017\n\007field48\0300 \001(\t\022\017\n\007field4"
    "9\0301 \001(\t\022\017\n\007field50\0302 \001(\t\022\017\n\007field51\0303 \001("
    "\t\022\017\n\007field52\0304 \001(\t\022\017\n\007field53\0305 \001(\t\022\017\n\007f"
    "ield54\0306 \001(\t\022\017\n\007field55\0307 \001(\t\022\017\n\007field56"
    "\0308 \001(\t\022\017\n\007field57\0309 \001(\t\022\017\n\007field58\030: \001(\t"
    "\022\017\n\007field59\030; \001(\t\022\017\n\007field60\030< \001(\t\022\017\n\007fi"
    "eld61\030= \001(\t\022\017\n\007field62\030> \001(\t\022\017\n\007field63\030"
    "\? \001(\t\022\017\n\007field64\030@ \001(\t\022\017\n\007field65\030A \001(\t\022"
    "\017\n\007field66\030B \001(\t\022\017\n\007field67\030C \001(\t\022\017\n\007fie"
    "ld68\030D \001(\t\022\017\n\007field69\030E \001(\t\022\017\n\007field70\030F"
    " \001(\t\022\017\n\007field71\030G \001(\t\022\017\n\007field72\030H \001(\t\022\017"
    "\n\007field73\030I \001(\t\022\017\n\007field74\030J \001(\t\022\017\n\007fiel"
    "d75\030K \001(\t\022\017\n\007field76\030L \001(\t\022\017\n\007field77\030M "
    "\001(\t\022\017\n\007field78\030N \001(\t\022\017\n\007field79\030O \001(\t\022\017\n"
    "\007field80\030P \001(\t\022\017\n\007field81\030Q \001(\t\022\017\n\007field"
    "82\030R \001(\t\022\017\n\007field83\030S \001(\t\022\017\n\007field84\030T \001"
    "(\t\022\017\n\007field85\030U \001(\t\022\017\n\007field86\030V \001(\t\022\017\n\007"
    "field87\030W \001(\t\022\017\n\007field88\030X \001(\t\022\017\n\007field8"
    "9\030Y \001(\t\022\017\n\007field90\030Z \001(\t\022\017\n\007field91\030[ \001("
    "\t\022\017\n\007field92\030\\ \001(\t\022\017\n\007field93\030] \001(\t\022\017\n\007f"
    "ield94\030^ \001(\t\022\017\n\007field95\030_ \001(\t\022\017\n\007field96"
    "\030` \001(\t\022\017\n\007field97\030a \001(\t\022\017\n\007field98\030b \001(\t"
    "\022\017\n\007field99\030c \001(\t\022\020\n\010field100\030d \001(\t\022\020\n\010f"
    "ield101\030e \001(\t\022\020\n\010field102\030f \001(\t\022\020\n\010field"
    "103\030g \001(\t\022\020\n\010field104\030h \001(\t\022\020\n\010field105\030"
    "i \001(\t\022\020\n\010field106\030j \001(\t\022\020\n\010field107\030k \001("
    "\t\022\020\n\010field108\030l \001(\t\022\020\n\010field109\030m \001(\t\022\020\n"
    "\010field110\030n \001(\t\022\020\n\010field111\030o \001(\t\022\020\n\010fie"
    "ld112\030p \001(\t\022\020\n\010field113\030q \001(\t\022\020\n\010field11"
    "4\030r \001(\t\022\020\n\010field115\030s \001(\t\022\020\n\010field116\030t "
    "\001(\t\022\020\n\010field117\030u \001(\t\022\020\n\010field118\030v \001(\t\022"
    "\020\n\010field119\030w \001(\t\022\020\n\010field120\030x \001(\t\022\020\n\010f"
    "ield121\030y \001(\t\022\020\n\010field122\030z \001(\t\022\020\n\010field"
    "123\030{ \001(\t\022\020\n\010field124\030| \001(\t\022\020\n\010field125\030"
    "} \001(\t\022\020\n\010field126\030~ \001(\t\022\020\n\010field127\030\177 \001("
    "\t\022\021\n\010field128\030\200\001 \001(\t\022\021\n\010field129\030\201\001 \002(\t\""
    "\226\001\n\016TestFieldFlags\022\021\n\tno_flags1\030\001 \001(\005\022\021\n"
    "\tno_flags2\030\002 \002(\005\022\021\n\tno_flags3\030\003 \003(\005\022\022\n\006p"
    "acked\030\004 \003(\005B\002\020\001\022\037\n\021packed_deprecated\030\005 \003"
    "(\005B\004\020\001\030\001\022\026\n\ndeprecated\030\006 \003(\005B\002\030\001\"\350\002\n\020Tes"
    "tMessageCheck\0226\n\014required_msg\030\001 \002(\0132 .fo"
    "o.TestMessageCheck.SubMessage\0226\n\014repeate"
    "d_msg\030\002 \003(\0132 .foo.TestMessageCheck.SubMe"
    "ssage\0226\n\014optional_msg\030\003 \001(\0132 .foo.TestMe"
    "ssageCheck.SubMessage\022\027\n\017required_string"
    "\030\004 \002(\t\022\027\n\017repeated_string\030\005 \003(\t\022\027\n\017optio"
    "nal_string\030\006 \001(\t\022\026\n\016required_bytes\030\007 \002(\014"
    "\022\026\n\016repeated_bytes\030\010 \003(\014\022\026\n\016optional_byt"
    "es\030\t \001(\014\032\031\n\nSubMessage\022\013\n\003str\030\001 \002(\t\"\321\001\n\017"
    "TestMessSubMess\022\037\n\010rep_mess\030\001 \002(\0132\r.foo."
    "TestMess\022\'\n\010opt_mess\030\002 \002(\0132\025.foo.TestMes"
    "sOptional\022&\n\noneof_mess\030\003 \002(\0132\022.foo.Test"
    "MessOneof\022\036\n\010req_mess\030\004 \002(\0132\014.foo.SubMes"
    "s\022,\n\010def_mess\030\005 \002(\0132\032.foo.DefaultOptiona"
    "lValues*C\n\rTestEnumSmall\022\026\n\tNEG_VALUE\020\377\377"
    "\377\377\377\377\377\377\377\001\022\t\n\005VALUE\020\000\022\017\n\013OTHER_VALUE\020\001*\357\001\n"
    "\010TestEnum\022\033\n\016VALUENEG123456\020\300\273\370\377\377\377\377\377\377\001\022\026"
    "\n\tVALUENEG1\020\377\377\377\377\377\377\377\377\377\001\022\n\n\006VALUE0\020\000\022\n\n\006VA"
    "LUE1\020\001\022\014\n\010VALUE127\020\177\022\r\n\010VALUE128\020\200\001\022\017\n\nV"
    "ALUE16383\020\377\177\022\020\n\nVALUE16384\020\200\200\001\022\022\n\014VALUE2"
    "097151\020\377\377\177\022\023\n\014VALUE2097152\020\200\200\200\001\022\025\n\016VALUE"
    "268435455\020\377\377\377\177\022\026\n\016VALUE268435456\020\200\200\200\200\001*\206"
    "\001\n\021TestEnumDupValues\022\013\n\007VALUE_A\020*\022\013\n\007VAL"
    "UE_B\020*\022\013\n\007VALUE_C\020*\022\014\n\007VALUE_D\020\232\005\022\014\n\007VAL"
    "UE_E\020\232\005\022\014\n\007VALUE_F\020\350\007\022\r\n\010VALUE_AA\020\350\007\022\r\n\010"
    "VALUE_BB\020\351\007\032\002\020\001", 7295);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "t/test-full.proto", &protobuf_RegisterTypes);
  SubMess::default_instance_ = new SubMess();
  SubMess_SubSubMess::_default_bytes1_ =
      new ::std::string("a \000 char", 8);
  SubMess_SubSubMess::_default_str1_ =
      new ::std::string("hello world\n", 12);
  SubMess_SubSubMess::default_instance_ = new SubMess_SubSubMess();
  TestFieldNo15::default_instance_ = new TestFieldNo15();
  TestFieldNo16::default_instance_ = new TestFieldNo16();
  TestFieldNo2047::default_instance_ = new TestFieldNo2047();
  TestFieldNo2048::default_instance_ = new TestFieldNo2048();
  TestFieldNo262143::default_instance_ = new TestFieldNo262143();
  TestFieldNo262144::default_instance_ = new TestFieldNo262144();
  TestFieldNo33554431::default_instance_ = new TestFieldNo33554431();
  TestFieldNo33554432::default_instance_ = new TestFieldNo33554432();
  TestMess::default_instance_ = new TestMess();
  TestMessPacked::default_instance_ = new TestMessPacked();
  TestMessOptional::default_instance_ = new TestMessOptional();
  TestMessOneof::default_instance_ = new TestMessOneof();
  TestMessOneof_default_oneof_instance_ = new TestMessOneofOneofInstance;
  TestMessRequiredInt32::default_instance_ = new TestMessRequiredInt32();
  TestMessRequiredSInt32::default_instance_ = new TestMessRequiredSInt32();
  TestMessRequiredSFixed32::default_instance_ = new TestMessRequiredSFixed32();
  TestMessRequiredInt64::default_instance_ = new TestMessRequiredInt64();
  TestMessRequiredSInt64::default_instance_ = new TestMessRequiredSInt64();
  TestMessRequiredSFixed64::default_instance_ = new TestMessRequiredSFixed64();
  TestMessRequiredUInt32::default_instance_ = new TestMessRequiredUInt32();
  TestMessRequiredFixed32::default_instance_ = new TestMessRequiredFixed32();
  TestMessRequiredUInt64::default_instance_ = new TestMessRequiredUInt64();
  TestMessRequiredFixed64::default_instance_ = new TestMessRequiredFixed64();
  TestMessRequiredFloat::default_instance_ = new TestMessRequiredFloat();
  TestMessRequiredDouble::default_instance_ = new TestMessRequiredDouble();
  TestMessRequiredBool::default_instance_ = new TestMessRequiredBool();
  TestMessRequiredEnum::default_instance_ = new TestMessRequiredEnum();
  TestMessRequiredEnumSmall::default_instance_ = new TestMessRequiredEnumSmall();
  TestMessRequiredString::default_instance_ = new TestMessRequiredString();
  TestMessRequiredBytes::default_instance_ = new TestMessRequiredBytes();
  TestMessRequiredMessage::default_instance_ = new TestMessRequiredMessage();
  EmptyMess::default_instance_ = new EmptyMess();
  DefaultRequiredValues::_default_v_string_ =
      new ::std::string("hi mom\n", 7);
  DefaultRequiredValues::_default_v_bytes_ =
      new ::std::string("a \000 character", 13);
  DefaultRequiredValues::default_instance_ = new DefaultRequiredValues();
  DefaultOptionalValues::_default_v_string_ =
      new ::std::string("hi mom\n", 7);
  DefaultOptionalValues::_default_v_bytes_ =
      new ::std::string("a \000 character", 13);
  DefaultOptionalValues::default_instance_ = new DefaultOptionalValues();
  LowerCase::default_instance_ = new LowerCase();
  AllocValues::default_instance_ = new AllocValues();
  TestRequiredFieldsBitmap::default_instance_ = new TestRequiredFieldsBitmap();
  TestFieldFlags::default_instance_ = new TestFieldFlags();
  TestMessageCheck::default_instance_ = new TestMessageCheck();
  TestMessageCheck_SubMessage::default_instance_ = new TestMessageCheck_SubMessage();
  TestMessSubMess::default_instance_ = new TestMessSubMess();
  SubMess::default_instance_->InitAsDefaultInstance();
  SubMess_SubSubMess::default_instance_->InitAsDefaultInstance();
  TestFieldNo15::default_instance_->InitAsDefaultInstance();
  TestFieldNo16::default_instance_->InitAsDefaultInstance();
  TestFieldNo2047::default_instance_->InitAsDefaultInstance();
  TestFieldNo2048::default_instance_->InitAsDefaultInstance();
  TestFieldNo262143::default_instance_->InitAsDefaultInstance();
  TestFieldNo262144::default_instance_->InitAsDefaultInstance();
  TestFieldNo33554431::default_instance_->InitAsDefaultInstance();
  TestFieldNo33554432::default_instance_->InitAsDefaultInstance();
  TestMess::default_instance_->InitAsDefaultInstance();
  TestMessPacked::default_instance_->InitAsDefaultInstance();
  TestMessOptional::default_instance_->InitAsDefaultInstance();
  TestMessOneof::default_instance_->InitAsDefaultInstance();
  TestMessRequiredInt32::default_instance_->InitAsDefaultInstance();
  TestMessRequiredSInt32::default_instance_->InitAsDefaultInstance();
  TestMessRequiredSFixed32::default_instance_->InitAsDefaultInstance();
  TestMessRequiredInt64::default_instance_->InitAsDefaultInstance();
  TestMessRequiredSInt64::default_instance_->InitAsDefaultInstance();
  TestMessRequiredSFixed64::default_instance_->InitAsDefaultInstance();
  TestMessRequiredUInt32::default_instance_->InitAsDefaultInstance();
  TestMessRequiredFixed32::default_instance_->InitAsDefaultInstance();
  TestMessRequiredUInt64::default_instance_->InitAsDefaultInstance();
  TestMessRequiredFixed64::default_instance_->InitAsDefaultInstance();
  TestMessRequiredFloat::default_instance_->InitAsDefaultInstance();
  TestMessRequiredDouble::default_instance_->InitAsDefaultInstance();
  TestMessRequiredBool::default_instance_->InitAsDefaultInstance();
  TestMessRequiredEnum::default_instance_->InitAsDefaultInstance();
  TestMessRequiredEnumSmall::default_instance_->InitAsDefaultInstance();
  TestMessRequiredString::default_instance_->InitAsDefaultInstance();
  TestMessRequiredBytes::default_instance_->InitAsDefaultInstance();
  TestMessRequiredMessage::default_instance_->InitAsDefaultInstance();
  EmptyMess::default_instance_->InitAsDefaultInstance();
  DefaultRequiredValues::default_instance_->InitAsDefaultInstance();
  DefaultOptionalValues::default_instance_->InitAsDefaultInstance();
  LowerCase::default_instance_->InitAsDefaultInstance();
  AllocValues::default_instance_->InitAsDefaultInstance();
  TestRequiredFieldsBitmap::default_instance_->InitAsDefaultInstance();
  TestFieldFlags::default_instance_->InitAsDefaultInstance();
  TestMessageCheck::default_instance_->InitAsDefaultInstance();
  TestMessageCheck_SubMessage::default_instance_->InitAsDefaultInstance();
  TestMessSubMess::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_t_2ftest_2dfull_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_t_2ftest_2dfull_2eproto {
  StaticDescriptorInitializer_t_2ftest_2dfull_2eproto() {
    protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  }
} static_descriptor_initializer_t_2ftest_2dfull_2eproto_;
const ::google::protobuf::EnumDescriptor* TestEnumSmall_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEnumSmall_descriptor_;
}
bool TestEnumSmall_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TestEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEnum_descriptor_;
}
bool TestEnum_IsValid(int value) {
  switch(value) {
    case -123456:
    case -1:
    case 0:
    case 1:
    case 127:
    case 128:
    case 16383:
    case 16384:
    case 2097151:
    case 2097152:
    case 268435455:
    case 268435456:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TestEnumDupValues_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestEnumDupValues_descriptor_;
}
bool TestEnumDupValues_IsValid(int value) {
  switch(value) {
    case 42:
    case 666:
    case 1000:
    case 1001:
      return true;
    default:
      return false;
  }
}


// ===================================================================

::std::string* SubMess_SubSubMess::_default_bytes1_ = NULL;
::std::string* SubMess_SubSubMess::_default_str1_ = NULL;
#ifndef _MSC_VER
const int SubMess_SubSubMess::kVal1FieldNumber;
const int SubMess_SubSubMess::kRepFieldNumber;
const int SubMess_SubSubMess::kBytes1FieldNumber;
const int SubMess_SubSubMess::kStr1FieldNumber;
#endif  // !_MSC_VER

SubMess_SubSubMess::SubMess_SubSubMess()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.SubMess.SubSubMess)
}

void SubMess_SubSubMess::InitAsDefaultInstance() {
}

SubMess_SubSubMess::SubMess_SubSubMess(const SubMess_SubSubMess& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.SubMess.SubSubMess)
}

void SubMess_SubSubMess::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  val1_ = 100;
  bytes1_ = const_cast< ::std::string*>(_default_bytes1_);
  str1_ = const_cast< ::std::string*>(_default_str1_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubMess_SubSubMess::~SubMess_SubSubMess() {
  // @@protoc_insertion_point(destructor:foo.SubMess.SubSubMess)
  SharedDtor();
}

void SubMess_SubSubMess::SharedDtor() {
  if (bytes1_ != _default_bytes1_) {
    delete bytes1_;
  }
  if (str1_ != _default_str1_) {
    delete str1_;
  }
  if (this != default_instance_) {
  }
}

void SubMess_SubSubMess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubMess_SubSubMess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubMess_SubSubMess_descriptor_;
}

const SubMess_SubSubMess& SubMess_SubSubMess::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

SubMess_SubSubMess* SubMess_SubSubMess::default_instance_ = NULL;

SubMess_SubSubMess* SubMess_SubSubMess::New() const {
  return new SubMess_SubSubMess;
}

void SubMess_SubSubMess::Clear() {
  if (_has_bits_[0 / 32] & 13) {
    val1_ = 100;
    if (has_bytes1()) {
      if (bytes1_ != _default_bytes1_) {
        bytes1_->assign(*_default_bytes1_);
      }
    }
    if (has_str1()) {
      if (str1_ != _default_str1_) {
        str1_->assign(*_default_str1_);
      }
    }
  }
  rep_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SubMess_SubSubMess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.SubMess.SubSubMess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 val1 = 1 [default = 100];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val1_)));
          set_has_val1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bytes1;
        break;
      }

      // optional bytes bytes1 = 2 [default = "a \000 char"];
      case 2: {
        if (tag == 18) {
         parse_bytes1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_str1;
        break;
      }

      // optional string str1 = 3 [default = "hello world\n"];
      case 3: {
        if (tag == 26) {
         parse_str1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str1().data(), this->str1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "str1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_rep;
        break;
      }

      // repeated int32 rep = 4;
      case 4: {
        if (tag == 32) {
         parse_rep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_rep())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rep())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_rep;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.SubMess.SubSubMess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.SubMess.SubSubMess)
  return false;
#undef DO_
}

void SubMess_SubSubMess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.SubMess.SubSubMess)
  // optional int32 val1 = 1 [default = 100];
  if (has_val1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->val1(), output);
  }

  // optional bytes bytes1 = 2 [default = "a \000 char"];
  if (has_bytes1()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->bytes1(), output);
  }

  // optional string str1 = 3 [default = "hello world\n"];
  if (has_str1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str1().data(), this->str1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->str1(), output);
  }

  // repeated int32 rep = 4;
  for (int i = 0; i < this->rep_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->rep(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.SubMess.SubSubMess)
}

::google::protobuf::uint8* SubMess_SubSubMess::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.SubMess.SubSubMess)
  // optional int32 val1 = 1 [default = 100];
  if (has_val1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->val1(), target);
  }

  // optional bytes bytes1 = 2 [default = "a \000 char"];
  if (has_bytes1()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->bytes1(), target);
  }

  // optional string str1 = 3 [default = "hello world\n"];
  if (has_str1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str1().data(), this->str1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->str1(), target);
  }

  // repeated int32 rep = 4;
  for (int i = 0; i < this->rep_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->rep(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.SubMess.SubSubMess)
  return target;
}

int SubMess_SubSubMess::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 val1 = 1 [default = 100];
    if (has_val1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val1());
    }

    // optional bytes bytes1 = 2 [default = "a \000 char"];
    if (has_bytes1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes1());
    }

    // optional string str1 = 3 [default = "hello world\n"];
    if (has_str1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str1());
    }

  }
  // repeated int32 rep = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->rep_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->rep(i));
    }
    total_size += 1 * this->rep_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubMess_SubSubMess::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SubMess_SubSubMess* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SubMess_SubSubMess*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubMess_SubSubMess::MergeFrom(const SubMess_SubSubMess& from) {
  GOOGLE_CHECK_NE(&from, this);
  rep_.MergeFrom(from.rep_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_val1()) {
      set_val1(from.val1());
    }
    if (from.has_bytes1()) {
      set_bytes1(from.bytes1());
    }
    if (from.has_str1()) {
      set_str1(from.str1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SubMess_SubSubMess::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubMess_SubSubMess::CopyFrom(const SubMess_SubSubMess& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubMess_SubSubMess::IsInitialized() const {

  return true;
}

void SubMess_SubSubMess::Swap(SubMess_SubSubMess* other) {
  if (other != this) {
    std::swap(val1_, other->val1_);
    rep_.Swap(&other->rep_);
    std::swap(bytes1_, other->bytes1_);
    std::swap(str1_, other->str1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SubMess_SubSubMess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubMess_SubSubMess_descriptor_;
  metadata.reflection = SubMess_SubSubMess_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int SubMess::kTestFieldNumber;
const int SubMess::kVal1FieldNumber;
const int SubMess::kVal2FieldNumber;
const int SubMess::kRepFieldNumber;
const int SubMess::kSub1FieldNumber;
const int SubMess::kSub2FieldNumber;
#endif  // !_MSC_VER

SubMess::SubMess()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.SubMess)
}

void SubMess::InitAsDefaultInstance() {
  sub1_ = const_cast< ::foo::SubMess_SubSubMess*>(&::foo::SubMess_SubSubMess::default_instance());
  sub2_ = const_cast< ::foo::SubMess_SubSubMess*>(&::foo::SubMess_SubSubMess::default_instance());
}

SubMess::SubMess(const SubMess& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.SubMess)
}

void SubMess::SharedCtor() {
  _cached_size_ = 0;
  test_ = 0;
  val1_ = 0;
  val2_ = 0;
  sub1_ = NULL;
  sub2_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubMess::~SubMess() {
  // @@protoc_insertion_point(destructor:foo.SubMess)
  SharedDtor();
}

void SubMess::SharedDtor() {
  if (this != default_instance_) {
    delete sub1_;
    delete sub2_;
  }
}

void SubMess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubMess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubMess_descriptor_;
}

const SubMess& SubMess::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

SubMess* SubMess::default_instance_ = NULL;

SubMess* SubMess::New() const {
  return new SubMess;
}

void SubMess::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SubMess*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 55) {
    ZR_(test_, val1_);
    val2_ = 0;
    if (has_sub1()) {
      if (sub1_ != NULL) sub1_->::foo::SubMess_SubSubMess::Clear();
    }
    if (has_sub2()) {
      if (sub2_ != NULL) sub2_->::foo::SubMess_SubSubMess::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  rep_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SubMess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.SubMess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 test = 4;
      case 4: {
        if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_val1;
        break;
      }

      // optional int32 val1 = 6;
      case 6: {
        if (tag == 48) {
         parse_val1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val1_)));
          set_has_val1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_val2;
        break;
      }

      // optional int32 val2 = 7;
      case 7: {
        if (tag == 56) {
         parse_val2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val2_)));
          set_has_val2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_rep;
        break;
      }

      // repeated int32 rep = 8;
      case 8: {
        if (tag == 64) {
         parse_rep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_rep())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rep())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_rep;
        if (input->ExpectTag(74)) goto parse_sub1;
        break;
      }

      // optional .foo.SubMess.SubSubMess sub1 = 9;
      case 9: {
        if (tag == 74) {
         parse_sub1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sub1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_sub2;
        break;
      }

      // optional .foo.SubMess.SubSubMess sub2 = 10;
      case 10: {
        if (tag == 82) {
         parse_sub2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sub2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.SubMess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.SubMess)
  return false;
#undef DO_
}

void SubMess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.SubMess)
  // required int32 test = 4;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->test(), output);
  }

  // optional int32 val1 = 6;
  if (has_val1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->val1(), output);
  }

  // optional int32 val2 = 7;
  if (has_val2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->val2(), output);
  }

  // repeated int32 rep = 8;
  for (int i = 0; i < this->rep_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->rep(i), output);
  }

  // optional .foo.SubMess.SubSubMess sub1 = 9;
  if (has_sub1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->sub1(), output);
  }

  // optional .foo.SubMess.SubSubMess sub2 = 10;
  if (has_sub2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->sub2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.SubMess)
}

::google::protobuf::uint8* SubMess::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.SubMess)
  // required int32 test = 4;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->test(), target);
  }

  // optional int32 val1 = 6;
  if (has_val1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->val1(), target);
  }

  // optional int32 val2 = 7;
  if (has_val2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->val2(), target);
  }

  // repeated int32 rep = 8;
  for (int i = 0; i < this->rep_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->rep(i), target);
  }

  // optional .foo.SubMess.SubSubMess sub1 = 9;
  if (has_sub1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->sub1(), target);
  }

  // optional .foo.SubMess.SubSubMess sub2 = 10;
  if (has_sub2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->sub2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.SubMess)
  return target;
}

int SubMess::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 test = 4;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->test());
    }

    // optional int32 val1 = 6;
    if (has_val1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val1());
    }

    // optional int32 val2 = 7;
    if (has_val2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val2());
    }

    // optional .foo.SubMess.SubSubMess sub1 = 9;
    if (has_sub1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub1());
    }

    // optional .foo.SubMess.SubSubMess sub2 = 10;
    if (has_sub2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub2());
    }

  }
  // repeated int32 rep = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->rep_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->rep(i));
    }
    total_size += 1 * this->rep_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubMess::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SubMess* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SubMess*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubMess::MergeFrom(const SubMess& from) {
  GOOGLE_CHECK_NE(&from, this);
  rep_.MergeFrom(from.rep_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
    if (from.has_val1()) {
      set_val1(from.val1());
    }
    if (from.has_val2()) {
      set_val2(from.val2());
    }
    if (from.has_sub1()) {
      mutable_sub1()->::foo::SubMess_SubSubMess::MergeFrom(from.sub1());
    }
    if (from.has_sub2()) {
      mutable_sub2()->::foo::SubMess_SubSubMess::MergeFrom(from.sub2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SubMess::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubMess::CopyFrom(const SubMess& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubMess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SubMess::Swap(SubMess* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(val1_, other->val1_);
    std::swap(val2_, other->val2_);
    rep_.Swap(&other->rep_);
    std::swap(sub1_, other->sub1_);
    std::swap(sub2_, other->sub2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SubMess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubMess_descriptor_;
  metadata.reflection = SubMess_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldNo15::kTestFieldNumber;
#endif  // !_MSC_VER

TestFieldNo15::TestFieldNo15()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestFieldNo15)
}

void TestFieldNo15::InitAsDefaultInstance() {
}

TestFieldNo15::TestFieldNo15(const TestFieldNo15& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestFieldNo15)
}

void TestFieldNo15::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldNo15::~TestFieldNo15() {
  // @@protoc_insertion_point(destructor:foo.TestFieldNo15)
  SharedDtor();
}

void TestFieldNo15::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestFieldNo15::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldNo15::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldNo15_descriptor_;
}

const TestFieldNo15& TestFieldNo15::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestFieldNo15* TestFieldNo15::default_instance_ = NULL;

TestFieldNo15* TestFieldNo15::New() const {
  return new TestFieldNo15;
}

void TestFieldNo15::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldNo15::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestFieldNo15)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 15;
      case 15: {
        if (tag == 122) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestFieldNo15)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestFieldNo15)
  return false;
#undef DO_
}

void TestFieldNo15::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestFieldNo15)
  // required string test = 15;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestFieldNo15)
}

::google::protobuf::uint8* TestFieldNo15::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestFieldNo15)
  // required string test = 15;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestFieldNo15)
  return target;
}

int TestFieldNo15::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string test = 15;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldNo15::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldNo15* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldNo15*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldNo15::MergeFrom(const TestFieldNo15& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldNo15::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldNo15::CopyFrom(const TestFieldNo15& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldNo15::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestFieldNo15::Swap(TestFieldNo15* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestFieldNo15::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldNo15_descriptor_;
  metadata.reflection = TestFieldNo15_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldNo16::kTestFieldNumber;
#endif  // !_MSC_VER

TestFieldNo16::TestFieldNo16()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestFieldNo16)
}

void TestFieldNo16::InitAsDefaultInstance() {
}

TestFieldNo16::TestFieldNo16(const TestFieldNo16& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestFieldNo16)
}

void TestFieldNo16::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldNo16::~TestFieldNo16() {
  // @@protoc_insertion_point(destructor:foo.TestFieldNo16)
  SharedDtor();
}

void TestFieldNo16::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestFieldNo16::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldNo16::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldNo16_descriptor_;
}

const TestFieldNo16& TestFieldNo16::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestFieldNo16* TestFieldNo16::default_instance_ = NULL;

TestFieldNo16* TestFieldNo16::New() const {
  return new TestFieldNo16;
}

void TestFieldNo16::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldNo16::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestFieldNo16)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 16;
      case 16: {
        if (tag == 130) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestFieldNo16)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestFieldNo16)
  return false;
#undef DO_
}

void TestFieldNo16::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestFieldNo16)
  // required string test = 16;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestFieldNo16)
}

::google::protobuf::uint8* TestFieldNo16::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestFieldNo16)
  // required string test = 16;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestFieldNo16)
  return target;
}

int TestFieldNo16::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string test = 16;
    if (has_test()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldNo16::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldNo16* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldNo16*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldNo16::MergeFrom(const TestFieldNo16& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldNo16::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldNo16::CopyFrom(const TestFieldNo16& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldNo16::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestFieldNo16::Swap(TestFieldNo16* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestFieldNo16::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldNo16_descriptor_;
  metadata.reflection = TestFieldNo16_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldNo2047::kTestFieldNumber;
#endif  // !_MSC_VER

TestFieldNo2047::TestFieldNo2047()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestFieldNo2047)
}

void TestFieldNo2047::InitAsDefaultInstance() {
}

TestFieldNo2047::TestFieldNo2047(const TestFieldNo2047& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestFieldNo2047)
}

void TestFieldNo2047::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldNo2047::~TestFieldNo2047() {
  // @@protoc_insertion_point(destructor:foo.TestFieldNo2047)
  SharedDtor();
}

void TestFieldNo2047::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestFieldNo2047::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldNo2047::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldNo2047_descriptor_;
}

const TestFieldNo2047& TestFieldNo2047::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestFieldNo2047* TestFieldNo2047::default_instance_ = NULL;

TestFieldNo2047* TestFieldNo2047::New() const {
  return new TestFieldNo2047;
}

void TestFieldNo2047::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldNo2047::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestFieldNo2047)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 2047;
      case 2047: {
        if (tag == 16378) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestFieldNo2047)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestFieldNo2047)
  return false;
#undef DO_
}

void TestFieldNo2047::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestFieldNo2047)
  // required string test = 2047;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2047, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestFieldNo2047)
}

::google::protobuf::uint8* TestFieldNo2047::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestFieldNo2047)
  // required string test = 2047;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2047, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestFieldNo2047)
  return target;
}

int TestFieldNo2047::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string test = 2047;
    if (has_test()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldNo2047::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldNo2047* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldNo2047*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldNo2047::MergeFrom(const TestFieldNo2047& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldNo2047::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldNo2047::CopyFrom(const TestFieldNo2047& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldNo2047::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestFieldNo2047::Swap(TestFieldNo2047* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestFieldNo2047::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldNo2047_descriptor_;
  metadata.reflection = TestFieldNo2047_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldNo2048::kTestFieldNumber;
#endif  // !_MSC_VER

TestFieldNo2048::TestFieldNo2048()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestFieldNo2048)
}

void TestFieldNo2048::InitAsDefaultInstance() {
}

TestFieldNo2048::TestFieldNo2048(const TestFieldNo2048& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestFieldNo2048)
}

void TestFieldNo2048::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldNo2048::~TestFieldNo2048() {
  // @@protoc_insertion_point(destructor:foo.TestFieldNo2048)
  SharedDtor();
}

void TestFieldNo2048::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestFieldNo2048::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldNo2048::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldNo2048_descriptor_;
}

const TestFieldNo2048& TestFieldNo2048::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestFieldNo2048* TestFieldNo2048::default_instance_ = NULL;

TestFieldNo2048* TestFieldNo2048::New() const {
  return new TestFieldNo2048;
}

void TestFieldNo2048::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldNo2048::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestFieldNo2048)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16386);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 2048;
      case 2048: {
        if (tag == 16386) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestFieldNo2048)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestFieldNo2048)
  return false;
#undef DO_
}

void TestFieldNo2048::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestFieldNo2048)
  // required string test = 2048;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2048, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestFieldNo2048)
}

::google::protobuf::uint8* TestFieldNo2048::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestFieldNo2048)
  // required string test = 2048;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2048, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestFieldNo2048)
  return target;
}

int TestFieldNo2048::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string test = 2048;
    if (has_test()) {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldNo2048::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldNo2048* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldNo2048*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldNo2048::MergeFrom(const TestFieldNo2048& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldNo2048::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldNo2048::CopyFrom(const TestFieldNo2048& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldNo2048::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestFieldNo2048::Swap(TestFieldNo2048* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestFieldNo2048::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldNo2048_descriptor_;
  metadata.reflection = TestFieldNo2048_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldNo262143::kTestFieldNumber;
#endif  // !_MSC_VER

TestFieldNo262143::TestFieldNo262143()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestFieldNo262143)
}

void TestFieldNo262143::InitAsDefaultInstance() {
}

TestFieldNo262143::TestFieldNo262143(const TestFieldNo262143& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestFieldNo262143)
}

void TestFieldNo262143::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldNo262143::~TestFieldNo262143() {
  // @@protoc_insertion_point(destructor:foo.TestFieldNo262143)
  SharedDtor();
}

void TestFieldNo262143::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestFieldNo262143::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldNo262143::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldNo262143_descriptor_;
}

const TestFieldNo262143& TestFieldNo262143::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestFieldNo262143* TestFieldNo262143::default_instance_ = NULL;

TestFieldNo262143* TestFieldNo262143::New() const {
  return new TestFieldNo262143;
}

void TestFieldNo262143::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldNo262143::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestFieldNo262143)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(2097146);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 262143;
      case 262143: {
        if (tag == 2097146) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestFieldNo262143)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestFieldNo262143)
  return false;
#undef DO_
}

void TestFieldNo262143::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestFieldNo262143)
  // required string test = 262143;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      262143, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestFieldNo262143)
}

::google::protobuf::uint8* TestFieldNo262143::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestFieldNo262143)
  // required string test = 262143;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        262143, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestFieldNo262143)
  return target;
}

int TestFieldNo262143::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string test = 262143;
    if (has_test()) {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldNo262143::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldNo262143* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldNo262143*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldNo262143::MergeFrom(const TestFieldNo262143& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldNo262143::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldNo262143::CopyFrom(const TestFieldNo262143& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldNo262143::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestFieldNo262143::Swap(TestFieldNo262143* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestFieldNo262143::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldNo262143_descriptor_;
  metadata.reflection = TestFieldNo262143_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldNo262144::kTestFieldNumber;
#endif  // !_MSC_VER

TestFieldNo262144::TestFieldNo262144()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestFieldNo262144)
}

void TestFieldNo262144::InitAsDefaultInstance() {
}

TestFieldNo262144::TestFieldNo262144(const TestFieldNo262144& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestFieldNo262144)
}

void TestFieldNo262144::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldNo262144::~TestFieldNo262144() {
  // @@protoc_insertion_point(destructor:foo.TestFieldNo262144)
  SharedDtor();
}

void TestFieldNo262144::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestFieldNo262144::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldNo262144::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldNo262144_descriptor_;
}

const TestFieldNo262144& TestFieldNo262144::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestFieldNo262144* TestFieldNo262144::default_instance_ = NULL;

TestFieldNo262144* TestFieldNo262144::New() const {
  return new TestFieldNo262144;
}

void TestFieldNo262144::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldNo262144::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestFieldNo262144)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(2097154);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 262144;
      case 262144: {
        if (tag == 2097154) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestFieldNo262144)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestFieldNo262144)
  return false;
#undef DO_
}

void TestFieldNo262144::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestFieldNo262144)
  // required string test = 262144;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      262144, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestFieldNo262144)
}

::google::protobuf::uint8* TestFieldNo262144::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestFieldNo262144)
  // required string test = 262144;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        262144, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestFieldNo262144)
  return target;
}

int TestFieldNo262144::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string test = 262144;
    if (has_test()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldNo262144::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldNo262144* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldNo262144*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldNo262144::MergeFrom(const TestFieldNo262144& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldNo262144::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldNo262144::CopyFrom(const TestFieldNo262144& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldNo262144::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestFieldNo262144::Swap(TestFieldNo262144* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestFieldNo262144::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldNo262144_descriptor_;
  metadata.reflection = TestFieldNo262144_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldNo33554431::kTestFieldNumber;
#endif  // !_MSC_VER

TestFieldNo33554431::TestFieldNo33554431()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestFieldNo33554431)
}

void TestFieldNo33554431::InitAsDefaultInstance() {
}

TestFieldNo33554431::TestFieldNo33554431(const TestFieldNo33554431& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestFieldNo33554431)
}

void TestFieldNo33554431::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldNo33554431::~TestFieldNo33554431() {
  // @@protoc_insertion_point(destructor:foo.TestFieldNo33554431)
  SharedDtor();
}

void TestFieldNo33554431::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestFieldNo33554431::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldNo33554431::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldNo33554431_descriptor_;
}

const TestFieldNo33554431& TestFieldNo33554431::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestFieldNo33554431* TestFieldNo33554431::default_instance_ = NULL;

TestFieldNo33554431* TestFieldNo33554431::New() const {
  return new TestFieldNo33554431;
}

void TestFieldNo33554431::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldNo33554431::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestFieldNo33554431)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(268435450);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 33554431;
      case 33554431: {
        if (tag == 268435450) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestFieldNo33554431)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestFieldNo33554431)
  return false;
#undef DO_
}

void TestFieldNo33554431::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestFieldNo33554431)
  // required string test = 33554431;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33554431, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestFieldNo33554431)
}

::google::protobuf::uint8* TestFieldNo33554431::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestFieldNo33554431)
  // required string test = 33554431;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33554431, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestFieldNo33554431)
  return target;
}

int TestFieldNo33554431::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string test = 33554431;
    if (has_test()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldNo33554431::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldNo33554431* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldNo33554431*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldNo33554431::MergeFrom(const TestFieldNo33554431& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldNo33554431::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldNo33554431::CopyFrom(const TestFieldNo33554431& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldNo33554431::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestFieldNo33554431::Swap(TestFieldNo33554431* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestFieldNo33554431::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldNo33554431_descriptor_;
  metadata.reflection = TestFieldNo33554431_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldNo33554432::kTestFieldNumber;
#endif  // !_MSC_VER

TestFieldNo33554432::TestFieldNo33554432()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestFieldNo33554432)
}

void TestFieldNo33554432::InitAsDefaultInstance() {
}

TestFieldNo33554432::TestFieldNo33554432(const TestFieldNo33554432& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestFieldNo33554432)
}

void TestFieldNo33554432::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldNo33554432::~TestFieldNo33554432() {
  // @@protoc_insertion_point(destructor:foo.TestFieldNo33554432)
  SharedDtor();
}

void TestFieldNo33554432::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestFieldNo33554432::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldNo33554432::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldNo33554432_descriptor_;
}

const TestFieldNo33554432& TestFieldNo33554432::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestFieldNo33554432* TestFieldNo33554432::default_instance_ = NULL;

TestFieldNo33554432* TestFieldNo33554432::New() const {
  return new TestFieldNo33554432;
}

void TestFieldNo33554432::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldNo33554432::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestFieldNo33554432)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(268435458);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 33554432;
      case 33554432: {
        if (tag == 268435458) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestFieldNo33554432)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestFieldNo33554432)
  return false;
#undef DO_
}

void TestFieldNo33554432::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestFieldNo33554432)
  // required string test = 33554432;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33554432, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestFieldNo33554432)
}

::google::protobuf::uint8* TestFieldNo33554432::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestFieldNo33554432)
  // required string test = 33554432;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33554432, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestFieldNo33554432)
  return target;
}

int TestFieldNo33554432::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string test = 33554432;
    if (has_test()) {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldNo33554432::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldNo33554432* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldNo33554432*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldNo33554432::MergeFrom(const TestFieldNo33554432& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldNo33554432::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldNo33554432::CopyFrom(const TestFieldNo33554432& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldNo33554432::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestFieldNo33554432::Swap(TestFieldNo33554432* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestFieldNo33554432::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldNo33554432_descriptor_;
  metadata.reflection = TestFieldNo33554432_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMess::kTestInt32FieldNumber;
const int TestMess::kTestSint32FieldNumber;
const int TestMess::kTestSfixed32FieldNumber;
const int TestMess::kTestInt64FieldNumber;
const int TestMess::kTestSint64FieldNumber;
const int TestMess::kTestSfixed64FieldNumber;
const int TestMess::kTestUint32FieldNumber;
const int TestMess::kTestFixed32FieldNumber;
const int TestMess::kTestUint64FieldNumber;
const int TestMess::kTestFixed64FieldNumber;
const int TestMess::kTestFloatFieldNumber;
const int TestMess::kTestDoubleFieldNumber;
const int TestMess::kTestBooleanFieldNumber;
const int TestMess::kTestEnumSmallFieldNumber;
const int TestMess::kTestEnumFieldNumber;
const int TestMess::kTestStringFieldNumber;
const int TestMess::kTestBytesFieldNumber;
const int TestMess::kTestMessageFieldNumber;
#endif  // !_MSC_VER

TestMess::TestMess()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMess)
}

void TestMess::InitAsDefaultInstance() {
}

TestMess::TestMess(const TestMess& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMess)
}

void TestMess::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMess::~TestMess() {
  // @@protoc_insertion_point(destructor:foo.TestMess)
  SharedDtor();
}

void TestMess::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMess_descriptor_;
}

const TestMess& TestMess::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMess* TestMess::default_instance_ = NULL;

TestMess* TestMess::New() const {
  return new TestMess;
}

void TestMess::Clear() {
  test_int32_.Clear();
  test_sint32_.Clear();
  test_sfixed32_.Clear();
  test_int64_.Clear();
  test_sint64_.Clear();
  test_sfixed64_.Clear();
  test_uint32_.Clear();
  test_fixed32_.Clear();
  test_uint64_.Clear();
  test_fixed64_.Clear();
  test_float_.Clear();
  test_double_.Clear();
  test_boolean_.Clear();
  test_enum_small_.Clear();
  test_enum_.Clear();
  test_string_.Clear();
  test_bytes_.Clear();
  test_message_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 test_int32 = 1;
      case 1: {
        if (tag == 8) {
         parse_test_int32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_test_int32())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_test_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_test_int32;
        if (input->ExpectTag(16)) goto parse_test_sint32;
        break;
      }

      // repeated sint32 test_sint32 = 2;
      case 2: {
        if (tag == 16) {
         parse_test_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 16, input, this->mutable_test_sint32())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_test_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_test_sint32;
        if (input->ExpectTag(29)) goto parse_test_sfixed32;
        break;
      }

      // repeated sfixed32 test_sfixed32 = 3;
      case 3: {
        if (tag == 29) {
         parse_test_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 29, input, this->mutable_test_sfixed32())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_test_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_test_sfixed32;
        if (input->ExpectTag(32)) goto parse_test_int64;
        break;
      }

      // repeated int64 test_int64 = 4;
      case 4: {
        if (tag == 32) {
         parse_test_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_test_int64())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_test_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_test_int64;
        if (input->ExpectTag(40)) goto parse_test_sint64;
        break;
      }

      // repeated sint64 test_sint64 = 5;
      case 5: {
        if (tag == 40) {
         parse_test_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 40, input, this->mutable_test_sint64())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_test_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_test_sint64;
        if (input->ExpectTag(49)) goto parse_test_sfixed64;
        break;
      }

      // repeated sfixed64 test_sfixed64 = 6;
      case 6: {
        if (tag == 49) {
         parse_test_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 49, input, this->mutable_test_sfixed64())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_test_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_test_sfixed64;
        if (input->ExpectTag(56)) goto parse_test_uint32;
        break;
      }

      // repeated uint32 test_uint32 = 7;
      case 7: {
        if (tag == 56) {
         parse_test_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_test_uint32())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_test_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_test_uint32;
        if (input->ExpectTag(69)) goto parse_test_fixed32;
        break;
      }

      // repeated fixed32 test_fixed32 = 8;
      case 8: {
        if (tag == 69) {
         parse_test_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 69, input, this->mutable_test_fixed32())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_test_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_test_fixed32;
        if (input->ExpectTag(72)) goto parse_test_uint64;
        break;
      }

      // repeated uint64 test_uint64 = 9;
      case 9: {
        if (tag == 72) {
         parse_test_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 72, input, this->mutable_test_uint64())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_test_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_test_uint64;
        if (input->ExpectTag(81)) goto parse_test_fixed64;
        break;
      }

      // repeated fixed64 test_fixed64 = 10;
      case 10: {
        if (tag == 81) {
         parse_test_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 81, input, this->mutable_test_fixed64())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_test_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_test_fixed64;
        if (input->ExpectTag(93)) goto parse_test_float;
        break;
      }

      // repeated float test_float = 11;
      case 11: {
        if (tag == 93) {
         parse_test_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 93, input, this->mutable_test_float())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_test_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_test_float;
        if (input->ExpectTag(97)) goto parse_test_double;
        break;
      }

      // repeated double test_double = 12;
      case 12: {
        if (tag == 97) {
         parse_test_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 97, input, this->mutable_test_double())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_test_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_test_double;
        if (input->ExpectTag(104)) goto parse_test_boolean;
        break;
      }

      // repeated bool test_boolean = 13;
      case 13: {
        if (tag == 104) {
         parse_test_boolean:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 104, input, this->mutable_test_boolean())));
        } else if (tag == 106) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_test_boolean())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_test_boolean;
        if (input->ExpectTag(112)) goto parse_test_enum_small;
        break;
      }

      // repeated .foo.TestEnumSmall test_enum_small = 14;
      case 14: {
        if (tag == 112) {
         parse_test_enum_small:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnumSmall_IsValid(value)) {
            add_test_enum_small(static_cast< ::foo::TestEnumSmall >(value));
          } else {
            mutable_unknown_fields()->AddVarint(14, value);
          }
        } else if (tag == 114) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::foo::TestEnumSmall_IsValid,
                 this->mutable_test_enum_small())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_test_enum_small;
        if (input->ExpectTag(120)) goto parse_test_enum;
        break;
      }

      // repeated .foo.TestEnum test_enum = 15;
      case 15: {
        if (tag == 120) {
         parse_test_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnum_IsValid(value)) {
            add_test_enum(static_cast< ::foo::TestEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(15, value);
          }
        } else if (tag == 122) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::foo::TestEnum_IsValid,
                 this->mutable_test_enum())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_test_enum;
        if (input->ExpectTag(130)) goto parse_test_string;
        break;
      }

      // repeated string test_string = 16;
      case 16: {
        if (tag == 130) {
         parse_test_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test_string(this->test_string_size() - 1).data(),
            this->test_string(this->test_string_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_test_string;
        if (input->ExpectTag(138)) goto parse_test_bytes;
        break;
      }

      // repeated bytes test_bytes = 17;
      case 17: {
        if (tag == 138) {
         parse_test_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_test_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_test_bytes;
        if (input->ExpectTag(146)) goto parse_test_message;
        break;
      }

      // repeated .foo.SubMess test_message = 18;
      case 18: {
        if (tag == 146) {
         parse_test_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_test_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_test_message;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMess)
  return false;
#undef DO_
}

void TestMess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMess)
  // repeated int32 test_int32 = 1;
  for (int i = 0; i < this->test_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->test_int32(i), output);
  }

  // repeated sint32 test_sint32 = 2;
  for (int i = 0; i < this->test_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      2, this->test_sint32(i), output);
  }

  // repeated sfixed32 test_sfixed32 = 3;
  for (int i = 0; i < this->test_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      3, this->test_sfixed32(i), output);
  }

  // repeated int64 test_int64 = 4;
  for (int i = 0; i < this->test_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->test_int64(i), output);
  }

  // repeated sint64 test_sint64 = 5;
  for (int i = 0; i < this->test_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      5, this->test_sint64(i), output);
  }

  // repeated sfixed64 test_sfixed64 = 6;
  for (int i = 0; i < this->test_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      6, this->test_sfixed64(i), output);
  }

  // repeated uint32 test_uint32 = 7;
  for (int i = 0; i < this->test_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->test_uint32(i), output);
  }

  // repeated fixed32 test_fixed32 = 8;
  for (int i = 0; i < this->test_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      8, this->test_fixed32(i), output);
  }

  // repeated uint64 test_uint64 = 9;
  for (int i = 0; i < this->test_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      9, this->test_uint64(i), output);
  }

  // repeated fixed64 test_fixed64 = 10;
  for (int i = 0; i < this->test_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      10, this->test_fixed64(i), output);
  }

  // repeated float test_float = 11;
  for (int i = 0; i < this->test_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      11, this->test_float(i), output);
  }

  // repeated double test_double = 12;
  for (int i = 0; i < this->test_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      12, this->test_double(i), output);
  }

  // repeated bool test_boolean = 13;
  for (int i = 0; i < this->test_boolean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      13, this->test_boolean(i), output);
  }

  // repeated .foo.TestEnumSmall test_enum_small = 14;
  for (int i = 0; i < this->test_enum_small_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->test_enum_small(i), output);
  }

  // repeated .foo.TestEnum test_enum = 15;
  for (int i = 0; i < this->test_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->test_enum(i), output);
  }

  // repeated string test_string = 16;
  for (int i = 0; i < this->test_string_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->test_string(i).data(), this->test_string(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "test_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->test_string(i), output);
  }

  // repeated bytes test_bytes = 17;
  for (int i = 0; i < this->test_bytes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      17, this->test_bytes(i), output);
  }

  // repeated .foo.SubMess test_message = 18;
  for (int i = 0; i < this->test_message_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->test_message(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMess)
}

::google::protobuf::uint8* TestMess::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMess)
  // repeated int32 test_int32 = 1;
  for (int i = 0; i < this->test_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->test_int32(i), target);
  }

  // repeated sint32 test_sint32 = 2;
  for (int i = 0; i < this->test_sint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32ToArray(2, this->test_sint32(i), target);
  }

  // repeated sfixed32 test_sfixed32 = 3;
  for (int i = 0; i < this->test_sfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32ToArray(3, this->test_sfixed32(i), target);
  }

  // repeated int64 test_int64 = 4;
  for (int i = 0; i < this->test_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->test_int64(i), target);
  }

  // repeated sint64 test_sint64 = 5;
  for (int i = 0; i < this->test_sint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64ToArray(5, this->test_sint64(i), target);
  }

  // repeated sfixed64 test_sfixed64 = 6;
  for (int i = 0; i < this->test_sfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64ToArray(6, this->test_sfixed64(i), target);
  }

  // repeated uint32 test_uint32 = 7;
  for (int i = 0; i < this->test_uint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->test_uint32(i), target);
  }

  // repeated fixed32 test_fixed32 = 8;
  for (int i = 0; i < this->test_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32ToArray(8, this->test_fixed32(i), target);
  }

  // repeated uint64 test_uint64 = 9;
  for (int i = 0; i < this->test_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(9, this->test_uint64(i), target);
  }

  // repeated fixed64 test_fixed64 = 10;
  for (int i = 0; i < this->test_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(10, this->test_fixed64(i), target);
  }

  // repeated float test_float = 11;
  for (int i = 0; i < this->test_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(11, this->test_float(i), target);
  }

  // repeated double test_double = 12;
  for (int i = 0; i < this->test_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(12, this->test_double(i), target);
  }

  // repeated bool test_boolean = 13;
  for (int i = 0; i < this->test_boolean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(13, this->test_boolean(i), target);
  }

  // repeated .foo.TestEnumSmall test_enum_small = 14;
  for (int i = 0; i < this->test_enum_small_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->test_enum_small(i), target);
  }

  // repeated .foo.TestEnum test_enum = 15;
  for (int i = 0; i < this->test_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->test_enum(i), target);
  }

  // repeated string test_string = 16;
  for (int i = 0; i < this->test_string_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test_string(i).data(), this->test_string(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(16, this->test_string(i), target);
  }

  // repeated bytes test_bytes = 17;
  for (int i = 0; i < this->test_bytes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(17, this->test_bytes(i), target);
  }

  // repeated .foo.SubMess test_message = 18;
  for (int i = 0; i < this->test_message_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->test_message(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMess)
  return target;
}

int TestMess::ByteSize() const {
  int total_size = 0;

  // repeated int32 test_int32 = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->test_int32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->test_int32(i));
    }
    total_size += 1 * this->test_int32_size() + data_size;
  }

  // repeated sint32 test_sint32 = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->test_sint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->test_sint32(i));
    }
    total_size += 1 * this->test_sint32_size() + data_size;
  }

  // repeated sfixed32 test_sfixed32 = 3;
  {
    int data_size = 0;
    data_size = 4 * this->test_sfixed32_size();
    total_size += 1 * this->test_sfixed32_size() + data_size;
  }

  // repeated int64 test_int64 = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->test_int64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->test_int64(i));
    }
    total_size += 1 * this->test_int64_size() + data_size;
  }

  // repeated sint64 test_sint64 = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->test_sint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->test_sint64(i));
    }
    total_size += 1 * this->test_sint64_size() + data_size;
  }

  // repeated sfixed64 test_sfixed64 = 6;
  {
    int data_size = 0;
    data_size = 8 * this->test_sfixed64_size();
    total_size += 1 * this->test_sfixed64_size() + data_size;
  }

  // repeated uint32 test_uint32 = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->test_uint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->test_uint32(i));
    }
    total_size += 1 * this->test_uint32_size() + data_size;
  }

  // repeated fixed32 test_fixed32 = 8;
  {
    int data_size = 0;
    data_size = 4 * this->test_fixed32_size();
    total_size += 1 * this->test_fixed32_size() + data_size;
  }

  // repeated uint64 test_uint64 = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->test_uint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->test_uint64(i));
    }
    total_size += 1 * this->test_uint64_size() + data_size;
  }

  // repeated fixed64 test_fixed64 = 10;
  {
    int data_size = 0;
    data_size = 8 * this->test_fixed64_size();
    total_size += 1 * this->test_fixed64_size() + data_size;
  }

  // repeated float test_float = 11;
  {
    int data_size = 0;
    data_size = 4 * this->test_float_size();
    total_size += 1 * this->test_float_size() + data_size;
  }

  // repeated double test_double = 12;
  {
    int data_size = 0;
    data_size = 8 * this->test_double_size();
    total_size += 1 * this->test_double_size() + data_size;
  }

  // repeated bool test_boolean = 13;
  {
    int data_size = 0;
    data_size = 1 * this->test_boolean_size();
    total_size += 1 * this->test_boolean_size() + data_size;
  }

  // repeated .foo.TestEnumSmall test_enum_small = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->test_enum_small_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->test_enum_small(i));
    }
    total_size += 1 * this->test_enum_small_size() + data_size;
  }

  // repeated .foo.TestEnum test_enum = 15;
  {
    int data_size = 0;
    for (int i = 0; i < this->test_enum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->test_enum(i));
    }
    total_size += 1 * this->test_enum_size() + data_size;
  }

  // repeated string test_string = 16;
  total_size += 2 * this->test_string_size();
  for (int i = 0; i < this->test_string_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_string(i));
  }

  // repeated bytes test_bytes = 17;
  total_size += 2 * this->test_bytes_size();
  for (int i = 0; i < this->test_bytes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->test_bytes(i));
  }

  // repeated .foo.SubMess test_message = 18;
  total_size += 2 * this->test_message_size();
  for (int i = 0; i < this->test_message_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->test_message(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMess::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMess* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMess*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMess::MergeFrom(const TestMess& from) {
  GOOGLE_CHECK_NE(&from, this);
  test_int32_.MergeFrom(from.test_int32_);
  test_sint32_.MergeFrom(from.test_sint32_);
  test_sfixed32_.MergeFrom(from.test_sfixed32_);
  test_int64_.MergeFrom(from.test_int64_);
  test_sint64_.MergeFrom(from.test_sint64_);
  test_sfixed64_.MergeFrom(from.test_sfixed64_);
  test_uint32_.MergeFrom(from.test_uint32_);
  test_fixed32_.MergeFrom(from.test_fixed32_);
  test_uint64_.MergeFrom(from.test_uint64_);
  test_fixed64_.MergeFrom(from.test_fixed64_);
  test_float_.MergeFrom(from.test_float_);
  test_double_.MergeFrom(from.test_double_);
  test_boolean_.MergeFrom(from.test_boolean_);
  test_enum_small_.MergeFrom(from.test_enum_small_);
  test_enum_.MergeFrom(from.test_enum_);
  test_string_.MergeFrom(from.test_string_);
  test_bytes_.MergeFrom(from.test_bytes_);
  test_message_.MergeFrom(from.test_message_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMess::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMess::CopyFrom(const TestMess& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMess::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->test_message())) return false;
  return true;
}

void TestMess::Swap(TestMess* other) {
  if (other != this) {
    test_int32_.Swap(&other->test_int32_);
    test_sint32_.Swap(&other->test_sint32_);
    test_sfixed32_.Swap(&other->test_sfixed32_);
    test_int64_.Swap(&other->test_int64_);
    test_sint64_.Swap(&other->test_sint64_);
    test_sfixed64_.Swap(&other->test_sfixed64_);
    test_uint32_.Swap(&other->test_uint32_);
    test_fixed32_.Swap(&other->test_fixed32_);
    test_uint64_.Swap(&other->test_uint64_);
    test_fixed64_.Swap(&other->test_fixed64_);
    test_float_.Swap(&other->test_float_);
    test_double_.Swap(&other->test_double_);
    test_boolean_.Swap(&other->test_boolean_);
    test_enum_small_.Swap(&other->test_enum_small_);
    test_enum_.Swap(&other->test_enum_);
    test_string_.Swap(&other->test_string_);
    test_bytes_.Swap(&other->test_bytes_);
    test_message_.Swap(&other->test_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMess_descriptor_;
  metadata.reflection = TestMess_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessPacked::kTestInt32FieldNumber;
const int TestMessPacked::kTestSint32FieldNumber;
const int TestMessPacked::kTestSfixed32FieldNumber;
const int TestMessPacked::kTestInt64FieldNumber;
const int TestMessPacked::kTestSint64FieldNumber;
const int TestMessPacked::kTestSfixed64FieldNumber;
const int TestMessPacked::kTestUint32FieldNumber;
const int TestMessPacked::kTestFixed32FieldNumber;
const int TestMessPacked::kTestUint64FieldNumber;
const int TestMessPacked::kTestFixed64FieldNumber;
const int TestMessPacked::kTestFloatFieldNumber;
const int TestMessPacked::kTestDoubleFieldNumber;
const int TestMessPacked::kTestBooleanFieldNumber;
const int TestMessPacked::kTestEnumSmallFieldNumber;
const int TestMessPacked::kTestEnumFieldNumber;
#endif  // !_MSC_VER

TestMessPacked::TestMessPacked()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessPacked)
}

void TestMessPacked::InitAsDefaultInstance() {
}

TestMessPacked::TestMessPacked(const TestMessPacked& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessPacked)
}

void TestMessPacked::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessPacked::~TestMessPacked() {
  // @@protoc_insertion_point(destructor:foo.TestMessPacked)
  SharedDtor();
}

void TestMessPacked::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessPacked::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessPacked::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessPacked_descriptor_;
}

const TestMessPacked& TestMessPacked::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessPacked* TestMessPacked::default_instance_ = NULL;

TestMessPacked* TestMessPacked::New() const {
  return new TestMessPacked;
}

void TestMessPacked::Clear() {
  test_int32_.Clear();
  test_sint32_.Clear();
  test_sfixed32_.Clear();
  test_int64_.Clear();
  test_sint64_.Clear();
  test_sfixed64_.Clear();
  test_uint32_.Clear();
  test_fixed32_.Clear();
  test_uint64_.Clear();
  test_fixed64_.Clear();
  test_float_.Clear();
  test_double_.Clear();
  test_boolean_.Clear();
  test_enum_small_.Clear();
  test_enum_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessPacked::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessPacked)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 test_int32 = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_test_int32())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_test_int32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_test_sint32;
        break;
      }

      // repeated sint32 test_sint32 = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_test_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_test_sint32())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18, input, this->mutable_test_sint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_test_sfixed32;
        break;
      }

      // repeated sfixed32 test_sfixed32 = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_test_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_test_sfixed32())));
        } else if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 26, input, this->mutable_test_sfixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_test_int64;
        break;
      }

      // repeated int64 test_int64 = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_test_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_test_int64())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34, input, this->mutable_test_int64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_test_sint64;
        break;
      }

      // repeated sint64 test_sint64 = 5 [packed = true];
      case 5: {
        if (tag == 42) {
         parse_test_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_test_sint64())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 42, input, this->mutable_test_sint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_test_sfixed64;
        break;
      }

      // repeated sfixed64 test_sfixed64 = 6 [packed = true];
      case 6: {
        if (tag == 50) {
         parse_test_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_test_sfixed64())));
        } else if (tag == 49) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 50, input, this->mutable_test_sfixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_test_uint32;
        break;
      }

      // repeated uint32 test_uint32 = 7 [packed = true];
      case 7: {
        if (tag == 58) {
         parse_test_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_test_uint32())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58, input, this->mutable_test_uint32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_test_fixed32;
        break;
      }

      // repeated fixed32 test_fixed32 = 8 [packed = true];
      case 8: {
        if (tag == 66) {
         parse_test_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_test_fixed32())));
        } else if (tag == 69) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 66, input, this->mutable_test_fixed32())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_test_uint64;
        break;
      }

      // repeated uint64 test_uint64 = 9 [packed = true];
      case 9: {
        if (tag == 74) {
         parse_test_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_test_uint64())));
        } else if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 74, input, this->mutable_test_uint64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_test_fixed64;
        break;
      }

      // repeated fixed64 test_fixed64 = 10 [packed = true];
      case 10: {
        if (tag == 82) {
         parse_test_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_test_fixed64())));
        } else if (tag == 81) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 82, input, this->mutable_test_fixed64())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_test_float;
        break;
      }

      // repeated float test_float = 11 [packed = true];
      case 11: {
        if (tag == 90) {
         parse_test_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_test_float())));
        } else if (tag == 93) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 90, input, this->mutable_test_float())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_test_double;
        break;
      }

      // repeated double test_double = 12 [packed = true];
      case 12: {
        if (tag == 98) {
         parse_test_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_test_double())));
        } else if (tag == 97) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 98, input, this->mutable_test_double())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_test_boolean;
        break;
      }

      // repeated bool test_boolean = 13 [packed = true];
      case 13: {
        if (tag == 106) {
         parse_test_boolean:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_test_boolean())));
        } else if (tag == 104) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 106, input, this->mutable_test_boolean())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_test_enum_small;
        break;
      }

      // repeated .foo.TestEnumSmall test_enum_small = 14 [packed = true];
      case 14: {
        if (tag == 114) {
         parse_test_enum_small:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            if (::foo::TestEnumSmall_IsValid(value)) {
              add_test_enum_small(static_cast< ::foo::TestEnumSmall >(value));
            }
          }
          input->PopLimit(limit);
        } else if (tag == 112) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnumSmall_IsValid(value)) {
            add_test_enum_small(static_cast< ::foo::TestEnumSmall >(value));
          } else {
            mutable_unknown_fields()->AddVarint(14, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_test_enum;
        break;
      }

      // repeated .foo.TestEnum test_enum = 15 [packed = true];
      case 15: {
        if (tag == 122) {
         parse_test_enum:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            if (::foo::TestEnum_IsValid(value)) {
              add_test_enum(static_cast< ::foo::TestEnum >(value));
            }
          }
          input->PopLimit(limit);
        } else if (tag == 120) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnum_IsValid(value)) {
            add_test_enum(static_cast< ::foo::TestEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(15, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessPacked)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessPacked)
  return false;
#undef DO_
}

void TestMessPacked::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessPacked)
  // repeated int32 test_int32 = 1 [packed = true];
  if (this->test_int32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_int32_cached_byte_size_);
  }
  for (int i = 0; i < this->test_int32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->test_int32(i), output);
  }

  // repeated sint32 test_sint32 = 2 [packed = true];
  if (this->test_sint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_sint32_cached_byte_size_);
  }
  for (int i = 0; i < this->test_sint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->test_sint32(i), output);
  }

  // repeated sfixed32 test_sfixed32 = 3 [packed = true];
  if (this->test_sfixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_sfixed32_cached_byte_size_);
  }
  for (int i = 0; i < this->test_sfixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32NoTag(
      this->test_sfixed32(i), output);
  }

  // repeated int64 test_int64 = 4 [packed = true];
  if (this->test_int64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_int64_cached_byte_size_);
  }
  for (int i = 0; i < this->test_int64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->test_int64(i), output);
  }

  // repeated sint64 test_sint64 = 5 [packed = true];
  if (this->test_sint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_sint64_cached_byte_size_);
  }
  for (int i = 0; i < this->test_sint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->test_sint64(i), output);
  }

  // repeated sfixed64 test_sfixed64 = 6 [packed = true];
  if (this->test_sfixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_sfixed64_cached_byte_size_);
  }
  for (int i = 0; i < this->test_sfixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64NoTag(
      this->test_sfixed64(i), output);
  }

  // repeated uint32 test_uint32 = 7 [packed = true];
  if (this->test_uint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_uint32_cached_byte_size_);
  }
  for (int i = 0; i < this->test_uint32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->test_uint32(i), output);
  }

  // repeated fixed32 test_fixed32 = 8 [packed = true];
  if (this->test_fixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_fixed32_cached_byte_size_);
  }
  for (int i = 0; i < this->test_fixed32_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32NoTag(
      this->test_fixed32(i), output);
  }

  // repeated uint64 test_uint64 = 9 [packed = true];
  if (this->test_uint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_uint64_cached_byte_size_);
  }
  for (int i = 0; i < this->test_uint64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->test_uint64(i), output);
  }

  // repeated fixed64 test_fixed64 = 10 [packed = true];
  if (this->test_fixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_fixed64_cached_byte_size_);
  }
  for (int i = 0; i < this->test_fixed64_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64NoTag(
      this->test_fixed64(i), output);
  }

  // repeated float test_float = 11 [packed = true];
  if (this->test_float_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_float_cached_byte_size_);
  }
  for (int i = 0; i < this->test_float_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->test_float(i), output);
  }

  // repeated double test_double = 12 [packed = true];
  if (this->test_double_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_double_cached_byte_size_);
  }
  for (int i = 0; i < this->test_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->test_double(i), output);
  }

  // repeated bool test_boolean = 13 [packed = true];
  if (this->test_boolean_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_test_boolean_cached_byte_size_);
  }
  for (int i = 0; i < this->test_boolean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->test_boolean(i), output);
  }

  // repeated .foo.TestEnumSmall test_enum_small = 14 [packed = true];
  if (this->test_enum_small_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_test_enum_small_cached_byte_size_);
  }
  for (int i = 0; i < this->test_enum_small_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->test_enum_small(i), output);
  }

  // repeated .foo.TestEnum test_enum = 15 [packed = true];
  if (this->test_enum_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_test_enum_cached_byte_size_);
  }
  for (int i = 0; i < this->test_enum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->test_enum(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessPacked)
}

::google::protobuf::uint8* TestMessPacked::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessPacked)
  // repeated int32 test_int32 = 1 [packed = true];
  if (this->test_int32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_int32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_int32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->test_int32(i), target);
  }

  // repeated sint32 test_sint32 = 2 [packed = true];
  if (this->test_sint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_sint32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_sint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->test_sint32(i), target);
  }

  // repeated sfixed32 test_sfixed32 = 3 [packed = true];
  if (this->test_sfixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_sfixed32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_sfixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->test_sfixed32(i), target);
  }

  // repeated int64 test_int64 = 4 [packed = true];
  if (this->test_int64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_int64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_int64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->test_int64(i), target);
  }

  // repeated sint64 test_sint64 = 5 [packed = true];
  if (this->test_sint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_sint64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_sint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->test_sint64(i), target);
  }

  // repeated sfixed64 test_sfixed64 = 6 [packed = true];
  if (this->test_sfixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_sfixed64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_sfixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->test_sfixed64(i), target);
  }

  // repeated uint32 test_uint32 = 7 [packed = true];
  if (this->test_uint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_uint32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_uint32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->test_uint32(i), target);
  }

  // repeated fixed32 test_fixed32 = 8 [packed = true];
  if (this->test_fixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_fixed32_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_fixed32_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->test_fixed32(i), target);
  }

  // repeated uint64 test_uint64 = 9 [packed = true];
  if (this->test_uint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_uint64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_uint64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->test_uint64(i), target);
  }

  // repeated fixed64 test_fixed64 = 10 [packed = true];
  if (this->test_fixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_fixed64_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_fixed64_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->test_fixed64(i), target);
  }

  // repeated float test_float = 11 [packed = true];
  if (this->test_float_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_float_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_float_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->test_float(i), target);
  }

  // repeated double test_double = 12 [packed = true];
  if (this->test_double_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_double_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->test_double(i), target);
  }

  // repeated bool test_boolean = 13 [packed = true];
  if (this->test_boolean_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _test_boolean_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_boolean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->test_boolean(i), target);
  }

  // repeated .foo.TestEnumSmall test_enum_small = 14 [packed = true];
  if (this->test_enum_small_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _test_enum_small_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_enum_small_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->test_enum_small(i), target);
  }

  // repeated .foo.TestEnum test_enum = 15 [packed = true];
  if (this->test_enum_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _test_enum_cached_byte_size_, target);
  }
  for (int i = 0; i < this->test_enum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->test_enum(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessPacked)
  return target;
}

int TestMessPacked::ByteSize() const {
  int total_size = 0;

  // repeated int32 test_int32 = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->test_int32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->test_int32(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_int32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 test_sint32 = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->test_sint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->test_sint32(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_sint32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 test_sfixed32 = 3 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->test_sfixed32_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_sfixed32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 test_int64 = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->test_int64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->test_int64(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_int64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 test_sint64 = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->test_sint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->test_sint64(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_sint64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 test_sfixed64 = 6 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->test_sfixed64_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_sfixed64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 test_uint32 = 7 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->test_uint32_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->test_uint32(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_uint32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 test_fixed32 = 8 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->test_fixed32_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_fixed32_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 test_uint64 = 9 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->test_uint64_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->test_uint64(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_uint64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 test_fixed64 = 10 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->test_fixed64_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_fixed64_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float test_float = 11 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->test_float_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_float_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double test_double = 12 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->test_double_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_double_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool test_boolean = 13 [packed = true];
  {
    int data_size = 0;
    data_size = 1 * this->test_boolean_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_boolean_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .foo.TestEnumSmall test_enum_small = 14 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->test_enum_small_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->test_enum_small(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_enum_small_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .foo.TestEnum test_enum = 15 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->test_enum_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->test_enum(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _test_enum_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessPacked::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessPacked* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessPacked*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessPacked::MergeFrom(const TestMessPacked& from) {
  GOOGLE_CHECK_NE(&from, this);
  test_int32_.MergeFrom(from.test_int32_);
  test_sint32_.MergeFrom(from.test_sint32_);
  test_sfixed32_.MergeFrom(from.test_sfixed32_);
  test_int64_.MergeFrom(from.test_int64_);
  test_sint64_.MergeFrom(from.test_sint64_);
  test_sfixed64_.MergeFrom(from.test_sfixed64_);
  test_uint32_.MergeFrom(from.test_uint32_);
  test_fixed32_.MergeFrom(from.test_fixed32_);
  test_uint64_.MergeFrom(from.test_uint64_);
  test_fixed64_.MergeFrom(from.test_fixed64_);
  test_float_.MergeFrom(from.test_float_);
  test_double_.MergeFrom(from.test_double_);
  test_boolean_.MergeFrom(from.test_boolean_);
  test_enum_small_.MergeFrom(from.test_enum_small_);
  test_enum_.MergeFrom(from.test_enum_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessPacked::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessPacked::CopyFrom(const TestMessPacked& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessPacked::IsInitialized() const {

  return true;
}

void TestMessPacked::Swap(TestMessPacked* other) {
  if (other != this) {
    test_int32_.Swap(&other->test_int32_);
    test_sint32_.Swap(&other->test_sint32_);
    test_sfixed32_.Swap(&other->test_sfixed32_);
    test_int64_.Swap(&other->test_int64_);
    test_sint64_.Swap(&other->test_sint64_);
    test_sfixed64_.Swap(&other->test_sfixed64_);
    test_uint32_.Swap(&other->test_uint32_);
    test_fixed32_.Swap(&other->test_fixed32_);
    test_uint64_.Swap(&other->test_uint64_);
    test_fixed64_.Swap(&other->test_fixed64_);
    test_float_.Swap(&other->test_float_);
    test_double_.Swap(&other->test_double_);
    test_boolean_.Swap(&other->test_boolean_);
    test_enum_small_.Swap(&other->test_enum_small_);
    test_enum_.Swap(&other->test_enum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessPacked::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessPacked_descriptor_;
  metadata.reflection = TestMessPacked_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessOptional::kTestInt32FieldNumber;
const int TestMessOptional::kTestSint32FieldNumber;
const int TestMessOptional::kTestSfixed32FieldNumber;
const int TestMessOptional::kTestInt64FieldNumber;
const int TestMessOptional::kTestSint64FieldNumber;
const int TestMessOptional::kTestSfixed64FieldNumber;
const int TestMessOptional::kTestUint32FieldNumber;
const int TestMessOptional::kTestFixed32FieldNumber;
const int TestMessOptional::kTestUint64FieldNumber;
const int TestMessOptional::kTestFixed64FieldNumber;
const int TestMessOptional::kTestFloatFieldNumber;
const int TestMessOptional::kTestDoubleFieldNumber;
const int TestMessOptional::kTestBooleanFieldNumber;
const int TestMessOptional::kTestEnumSmallFieldNumber;
const int TestMessOptional::kTestEnumFieldNumber;
const int TestMessOptional::kTestStringFieldNumber;
const int TestMessOptional::kTestBytesFieldNumber;
const int TestMessOptional::kTestMessageFieldNumber;
#endif  // !_MSC_VER

TestMessOptional::TestMessOptional()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessOptional)
}

void TestMessOptional::InitAsDefaultInstance() {
  test_message_ = const_cast< ::foo::SubMess*>(&::foo::SubMess::default_instance());
}

TestMessOptional::TestMessOptional(const TestMessOptional& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessOptional)
}

void TestMessOptional::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_int32_ = 0;
  test_sint32_ = 0;
  test_sfixed32_ = 0;
  test_int64_ = GOOGLE_LONGLONG(0);
  test_sint64_ = GOOGLE_LONGLONG(0);
  test_sfixed64_ = GOOGLE_LONGLONG(0);
  test_uint32_ = 0u;
  test_fixed32_ = 0u;
  test_uint64_ = GOOGLE_ULONGLONG(0);
  test_fixed64_ = GOOGLE_ULONGLONG(0);
  test_float_ = 0;
  test_double_ = 0;
  test_boolean_ = false;
  test_enum_small_ = -1;
  test_enum_ = -123456;
  test_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessOptional::~TestMessOptional() {
  // @@protoc_insertion_point(destructor:foo.TestMessOptional)
  SharedDtor();
}

void TestMessOptional::SharedDtor() {
  if (test_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_string_;
  }
  if (test_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_bytes_;
  }
  if (this != default_instance_) {
    delete test_message_;
  }
}

void TestMessOptional::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessOptional::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessOptional_descriptor_;
}

const TestMessOptional& TestMessOptional::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessOptional* TestMessOptional::default_instance_ = NULL;

TestMessOptional* TestMessOptional::New() const {
  return new TestMessOptional;
}

void TestMessOptional::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TestMessOptional*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(test_int32_, test_sfixed64_);
    test_fixed32_ = 0u;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(test_float_, test_boolean_);
    test_uint64_ = GOOGLE_ULONGLONG(0);
    test_enum_small_ = -1;
    test_enum_ = -123456;
    if (has_test_string()) {
      if (test_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        test_string_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 196608) {
    if (has_test_bytes()) {
      if (test_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        test_bytes_->clear();
      }
    }
    if (has_test_message()) {
      if (test_message_ != NULL) test_message_->::foo::SubMess::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessOptional::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessOptional)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 test_int32 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_int32_)));
          set_has_test_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_test_sint32;
        break;
      }

      // optional sint32 test_sint32 = 2;
      case 2: {
        if (tag == 16) {
         parse_test_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &test_sint32_)));
          set_has_test_sint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_test_sfixed32;
        break;
      }

      // optional sfixed32 test_sfixed32 = 3;
      case 3: {
        if (tag == 29) {
         parse_test_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &test_sfixed32_)));
          set_has_test_sfixed32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_test_int64;
        break;
      }

      // optional int64 test_int64 = 4;
      case 4: {
        if (tag == 32) {
         parse_test_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &test_int64_)));
          set_has_test_int64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_test_sint64;
        break;
      }

      // optional sint64 test_sint64 = 5;
      case 5: {
        if (tag == 40) {
         parse_test_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &test_sint64_)));
          set_has_test_sint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_test_sfixed64;
        break;
      }

      // optional sfixed64 test_sfixed64 = 6;
      case 6: {
        if (tag == 49) {
         parse_test_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &test_sfixed64_)));
          set_has_test_sfixed64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_test_uint32;
        break;
      }

      // optional uint32 test_uint32 = 7;
      case 7: {
        if (tag == 56) {
         parse_test_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &test_uint32_)));
          set_has_test_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_test_fixed32;
        break;
      }

      // optional fixed32 test_fixed32 = 8;
      case 8: {
        if (tag == 69) {
         parse_test_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &test_fixed32_)));
          set_has_test_fixed32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_test_uint64;
        break;
      }

      // optional uint64 test_uint64 = 9;
      case 9: {
        if (tag == 72) {
         parse_test_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &test_uint64_)));
          set_has_test_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_test_fixed64;
        break;
      }

      // optional fixed64 test_fixed64 = 10;
      case 10: {
        if (tag == 81) {
         parse_test_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &test_fixed64_)));
          set_has_test_fixed64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_test_float;
        break;
      }

      // optional float test_float = 11;
      case 11: {
        if (tag == 93) {
         parse_test_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &test_float_)));
          set_has_test_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_test_double;
        break;
      }

      // optional double test_double = 12;
      case 12: {
        if (tag == 97) {
         parse_test_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &test_double_)));
          set_has_test_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_test_boolean;
        break;
      }

      // optional bool test_boolean = 13;
      case 13: {
        if (tag == 104) {
         parse_test_boolean:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &test_boolean_)));
          set_has_test_boolean();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_test_enum_small;
        break;
      }

      // optional .foo.TestEnumSmall test_enum_small = 14;
      case 14: {
        if (tag == 112) {
         parse_test_enum_small:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnumSmall_IsValid(value)) {
            set_test_enum_small(static_cast< ::foo::TestEnumSmall >(value));
          } else {
            mutable_unknown_fields()->AddVarint(14, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_test_enum;
        break;
      }

      // optional .foo.TestEnum test_enum = 15;
      case 15: {
        if (tag == 120) {
         parse_test_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnum_IsValid(value)) {
            set_test_enum(static_cast< ::foo::TestEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(15, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_test_string;
        break;
      }

      // optional string test_string = 16;
      case 16: {
        if (tag == 130) {
         parse_test_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test_string().data(), this->test_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_test_bytes;
        break;
      }

      // optional bytes test_bytes = 17;
      case 17: {
        if (tag == 138) {
         parse_test_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_test_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_test_message;
        break;
      }

      // optional .foo.SubMess test_message = 18;
      case 18: {
        if (tag == 146) {
         parse_test_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessOptional)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessOptional)
  return false;
#undef DO_
}

void TestMessOptional::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessOptional)
  // optional int32 test_int32 = 1;
  if (has_test_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->test_int32(), output);
  }

  // optional sint32 test_sint32 = 2;
  if (has_test_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->test_sint32(), output);
  }

  // optional sfixed32 test_sfixed32 = 3;
  if (has_test_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(3, this->test_sfixed32(), output);
  }

  // optional int64 test_int64 = 4;
  if (has_test_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->test_int64(), output);
  }

  // optional sint64 test_sint64 = 5;
  if (has_test_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->test_sint64(), output);
  }

  // optional sfixed64 test_sfixed64 = 6;
  if (has_test_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(6, this->test_sfixed64(), output);
  }

  // optional uint32 test_uint32 = 7;
  if (has_test_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->test_uint32(), output);
  }

  // optional fixed32 test_fixed32 = 8;
  if (has_test_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(8, this->test_fixed32(), output);
  }

  // optional uint64 test_uint64 = 9;
  if (has_test_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->test_uint64(), output);
  }

  // optional fixed64 test_fixed64 = 10;
  if (has_test_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->test_fixed64(), output);
  }

  // optional float test_float = 11;
  if (has_test_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->test_float(), output);
  }

  // optional double test_double = 12;
  if (has_test_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->test_double(), output);
  }

  // optional bool test_boolean = 13;
  if (has_test_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->test_boolean(), output);
  }

  // optional .foo.TestEnumSmall test_enum_small = 14;
  if (has_test_enum_small()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->test_enum_small(), output);
  }

  // optional .foo.TestEnum test_enum = 15;
  if (has_test_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->test_enum(), output);
  }

  // optional string test_string = 16;
  if (has_test_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test_string().data(), this->test_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->test_string(), output);
  }

  // optional bytes test_bytes = 17;
  if (has_test_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      17, this->test_bytes(), output);
  }

  // optional .foo.SubMess test_message = 18;
  if (has_test_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->test_message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessOptional)
}

::google::protobuf::uint8* TestMessOptional::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessOptional)
  // optional int32 test_int32 = 1;
  if (has_test_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->test_int32(), target);
  }

  // optional sint32 test_sint32 = 2;
  if (has_test_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->test_sint32(), target);
  }

  // optional sfixed32 test_sfixed32 = 3;
  if (has_test_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(3, this->test_sfixed32(), target);
  }

  // optional int64 test_int64 = 4;
  if (has_test_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->test_int64(), target);
  }

  // optional sint64 test_sint64 = 5;
  if (has_test_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->test_sint64(), target);
  }

  // optional sfixed64 test_sfixed64 = 6;
  if (has_test_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(6, this->test_sfixed64(), target);
  }

  // optional uint32 test_uint32 = 7;
  if (has_test_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->test_uint32(), target);
  }

  // optional fixed32 test_fixed32 = 8;
  if (has_test_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(8, this->test_fixed32(), target);
  }

  // optional uint64 test_uint64 = 9;
  if (has_test_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->test_uint64(), target);
  }

  // optional fixed64 test_fixed64 = 10;
  if (has_test_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->test_fixed64(), target);
  }

  // optional float test_float = 11;
  if (has_test_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->test_float(), target);
  }

  // optional double test_double = 12;
  if (has_test_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->test_double(), target);
  }

  // optional bool test_boolean = 13;
  if (has_test_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->test_boolean(), target);
  }

  // optional .foo.TestEnumSmall test_enum_small = 14;
  if (has_test_enum_small()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->test_enum_small(), target);
  }

  // optional .foo.TestEnum test_enum = 15;
  if (has_test_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->test_enum(), target);
  }

  // optional string test_string = 16;
  if (has_test_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test_string().data(), this->test_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->test_string(), target);
  }

  // optional bytes test_bytes = 17;
  if (has_test_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        17, this->test_bytes(), target);
  }

  // optional .foo.SubMess test_message = 18;
  if (has_test_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->test_message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessOptional)
  return target;
}

int TestMessOptional::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 test_int32 = 1;
    if (has_test_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->test_int32());
    }

    // optional sint32 test_sint32 = 2;
    if (has_test_sint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->test_sint32());
    }

    // optional sfixed32 test_sfixed32 = 3;
    if (has_test_sfixed32()) {
      total_size += 1 + 4;
    }

    // optional int64 test_int64 = 4;
    if (has_test_int64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->test_int64());
    }

    // optional sint64 test_sint64 = 5;
    if (has_test_sint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->test_sint64());
    }

    // optional sfixed64 test_sfixed64 = 6;
    if (has_test_sfixed64()) {
      total_size += 1 + 8;
    }

    // optional uint32 test_uint32 = 7;
    if (has_test_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->test_uint32());
    }

    // optional fixed32 test_fixed32 = 8;
    if (has_test_fixed32()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint64 test_uint64 = 9;
    if (has_test_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->test_uint64());
    }

    // optional fixed64 test_fixed64 = 10;
    if (has_test_fixed64()) {
      total_size += 1 + 8;
    }

    // optional float test_float = 11;
    if (has_test_float()) {
      total_size += 1 + 4;
    }

    // optional double test_double = 12;
    if (has_test_double()) {
      total_size += 1 + 8;
    }

    // optional bool test_boolean = 13;
    if (has_test_boolean()) {
      total_size += 1 + 1;
    }

    // optional .foo.TestEnumSmall test_enum_small = 14;
    if (has_test_enum_small()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->test_enum_small());
    }

    // optional .foo.TestEnum test_enum = 15;
    if (has_test_enum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->test_enum());
    }

    // optional string test_string = 16;
    if (has_test_string()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test_string());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional bytes test_bytes = 17;
    if (has_test_bytes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->test_bytes());
    }

    // optional .foo.SubMess test_message = 18;
    if (has_test_message()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->test_message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessOptional::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessOptional* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessOptional*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessOptional::MergeFrom(const TestMessOptional& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test_int32()) {
      set_test_int32(from.test_int32());
    }
    if (from.has_test_sint32()) {
      set_test_sint32(from.test_sint32());
    }
    if (from.has_test_sfixed32()) {
      set_test_sfixed32(from.test_sfixed32());
    }
    if (from.has_test_int64()) {
      set_test_int64(from.test_int64());
    }
    if (from.has_test_sint64()) {
      set_test_sint64(from.test_sint64());
    }
    if (from.has_test_sfixed64()) {
      set_test_sfixed64(from.test_sfixed64());
    }
    if (from.has_test_uint32()) {
      set_test_uint32(from.test_uint32());
    }
    if (from.has_test_fixed32()) {
      set_test_fixed32(from.test_fixed32());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_test_uint64()) {
      set_test_uint64(from.test_uint64());
    }
    if (from.has_test_fixed64()) {
      set_test_fixed64(from.test_fixed64());
    }
    if (from.has_test_float()) {
      set_test_float(from.test_float());
    }
    if (from.has_test_double()) {
      set_test_double(from.test_double());
    }
    if (from.has_test_boolean()) {
      set_test_boolean(from.test_boolean());
    }
    if (from.has_test_enum_small()) {
      set_test_enum_small(from.test_enum_small());
    }
    if (from.has_test_enum()) {
      set_test_enum(from.test_enum());
    }
    if (from.has_test_string()) {
      set_test_string(from.test_string());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_test_bytes()) {
      set_test_bytes(from.test_bytes());
    }
    if (from.has_test_message()) {
      mutable_test_message()->::foo::SubMess::MergeFrom(from.test_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessOptional::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessOptional::CopyFrom(const TestMessOptional& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessOptional::IsInitialized() const {

  if (has_test_message()) {
    if (!this->test_message().IsInitialized()) return false;
  }
  return true;
}

void TestMessOptional::Swap(TestMessOptional* other) {
  if (other != this) {
    std::swap(test_int32_, other->test_int32_);
    std::swap(test_sint32_, other->test_sint32_);
    std::swap(test_sfixed32_, other->test_sfixed32_);
    std::swap(test_int64_, other->test_int64_);
    std::swap(test_sint64_, other->test_sint64_);
    std::swap(test_sfixed64_, other->test_sfixed64_);
    std::swap(test_uint32_, other->test_uint32_);
    std::swap(test_fixed32_, other->test_fixed32_);
    std::swap(test_uint64_, other->test_uint64_);
    std::swap(test_fixed64_, other->test_fixed64_);
    std::swap(test_float_, other->test_float_);
    std::swap(test_double_, other->test_double_);
    std::swap(test_boolean_, other->test_boolean_);
    std::swap(test_enum_small_, other->test_enum_small_);
    std::swap(test_enum_, other->test_enum_);
    std::swap(test_string_, other->test_string_);
    std::swap(test_bytes_, other->test_bytes_);
    std::swap(test_message_, other->test_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessOptional::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessOptional_descriptor_;
  metadata.reflection = TestMessOptional_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessOneof::kTestInt32FieldNumber;
const int TestMessOneof::kTestSint32FieldNumber;
const int TestMessOneof::kTestSfixed32FieldNumber;
const int TestMessOneof::kTestInt64FieldNumber;
const int TestMessOneof::kTestSint64FieldNumber;
const int TestMessOneof::kTestSfixed64FieldNumber;
const int TestMessOneof::kTestUint32FieldNumber;
const int TestMessOneof::kTestFixed32FieldNumber;
const int TestMessOneof::kTestUint64FieldNumber;
const int TestMessOneof::kTestFixed64FieldNumber;
const int TestMessOneof::kTestFloatFieldNumber;
const int TestMessOneof::kTestDoubleFieldNumber;
const int TestMessOneof::kTestBooleanFieldNumber;
const int TestMessOneof::kTestEnumSmallFieldNumber;
const int TestMessOneof::kTestEnumFieldNumber;
const int TestMessOneof::kTestStringFieldNumber;
const int TestMessOneof::kTestBytesFieldNumber;
const int TestMessOneof::kTestMessageFieldNumber;
const int TestMessOneof::kOptIntFieldNumber;
#endif  // !_MSC_VER

TestMessOneof::TestMessOneof()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessOneof)
}

void TestMessOneof::InitAsDefaultInstance() {
  TestMessOneof_default_oneof_instance_->test_int32_ = 0;
  TestMessOneof_default_oneof_instance_->test_sint32_ = 0;
  TestMessOneof_default_oneof_instance_->test_sfixed32_ = 0;
  TestMessOneof_default_oneof_instance_->test_int64_ = GOOGLE_LONGLONG(0);
  TestMessOneof_default_oneof_instance_->test_sint64_ = GOOGLE_LONGLONG(0);
  TestMessOneof_default_oneof_instance_->test_sfixed64_ = GOOGLE_LONGLONG(0);
  TestMessOneof_default_oneof_instance_->test_uint32_ = 0u;
  TestMessOneof_default_oneof_instance_->test_fixed32_ = 0u;
  TestMessOneof_default_oneof_instance_->test_uint64_ = GOOGLE_ULONGLONG(0);
  TestMessOneof_default_oneof_instance_->test_fixed64_ = GOOGLE_ULONGLONG(0);
  TestMessOneof_default_oneof_instance_->test_float_ = 0;
  TestMessOneof_default_oneof_instance_->test_double_ = 0;
  TestMessOneof_default_oneof_instance_->test_boolean_ = false;
  TestMessOneof_default_oneof_instance_->test_enum_small_ = -1;
  TestMessOneof_default_oneof_instance_->test_enum_ = -123456;
  TestMessOneof_default_oneof_instance_->test_string_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  TestMessOneof_default_oneof_instance_->test_bytes_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  TestMessOneof_default_oneof_instance_->test_message_ = const_cast< ::foo::SubMess*>(&::foo::SubMess::default_instance());
}

TestMessOneof::TestMessOneof(const TestMessOneof& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessOneof)
}

void TestMessOneof::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  opt_int_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_test_oneof();
}

TestMessOneof::~TestMessOneof() {
  // @@protoc_insertion_point(destructor:foo.TestMessOneof)
  SharedDtor();
}

void TestMessOneof::SharedDtor() {
  if (has_test_oneof()) {
    clear_test_oneof();
  }
  if (this != default_instance_) {
  }
}

void TestMessOneof::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessOneof::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessOneof_descriptor_;
}

const TestMessOneof& TestMessOneof::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessOneof* TestMessOneof::default_instance_ = NULL;

TestMessOneof* TestMessOneof::New() const {
  return new TestMessOneof;
}

void TestMessOneof::clear_test_oneof() {
  switch(test_oneof_case()) {
    case kTestInt32: {
      // No need to clear
      break;
    }
    case kTestSint32: {
      // No need to clear
      break;
    }
    case kTestSfixed32: {
      // No need to clear
      break;
    }
    case kTestInt64: {
      // No need to clear
      break;
    }
    case kTestSint64: {
      // No need to clear
      break;
    }
    case kTestSfixed64: {
      // No need to clear
      break;
    }
    case kTestUint32: {
      // No need to clear
      break;
    }
    case kTestFixed32: {
      // No need to clear
      break;
    }
    case kTestUint64: {
      // No need to clear
      break;
    }
    case kTestFixed64: {
      // No need to clear
      break;
    }
    case kTestFloat: {
      // No need to clear
      break;
    }
    case kTestDouble: {
      // No need to clear
      break;
    }
    case kTestBoolean: {
      // No need to clear
      break;
    }
    case kTestEnumSmall: {
      // No need to clear
      break;
    }
    case kTestEnum: {
      // No need to clear
      break;
    }
    case kTestString: {
      delete test_oneof_.test_string_;
      break;
    }
    case kTestBytes: {
      delete test_oneof_.test_bytes_;
      break;
    }
    case kTestMessage: {
      delete test_oneof_.test_message_;
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_ONEOF_NOT_SET;
}


void TestMessOneof::Clear() {
  opt_int_ = 0;
  clear_test_oneof();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessOneof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessOneof)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 test_int32 = 1;
      case 1: {
        if (tag == 8) {
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_oneof_.test_int32_)));
          set_has_test_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_test_sint32;
        break;
      }

      // optional sint32 test_sint32 = 2;
      case 2: {
        if (tag == 16) {
         parse_test_sint32:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &test_oneof_.test_sint32_)));
          set_has_test_sint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_test_sfixed32;
        break;
      }

      // optional sfixed32 test_sfixed32 = 3;
      case 3: {
        if (tag == 29) {
         parse_test_sfixed32:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &test_oneof_.test_sfixed32_)));
          set_has_test_sfixed32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_test_int64;
        break;
      }

      // optional int64 test_int64 = 4;
      case 4: {
        if (tag == 32) {
         parse_test_int64:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &test_oneof_.test_int64_)));
          set_has_test_int64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_test_sint64;
        break;
      }

      // optional sint64 test_sint64 = 5;
      case 5: {
        if (tag == 40) {
         parse_test_sint64:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &test_oneof_.test_sint64_)));
          set_has_test_sint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_test_sfixed64;
        break;
      }

      // optional sfixed64 test_sfixed64 = 6;
      case 6: {
        if (tag == 49) {
         parse_test_sfixed64:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &test_oneof_.test_sfixed64_)));
          set_has_test_sfixed64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_test_uint32;
        break;
      }

      // optional uint32 test_uint32 = 7;
      case 7: {
        if (tag == 56) {
         parse_test_uint32:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &test_oneof_.test_uint32_)));
          set_has_test_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_test_fixed32;
        break;
      }

      // optional fixed32 test_fixed32 = 8;
      case 8: {
        if (tag == 69) {
         parse_test_fixed32:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &test_oneof_.test_fixed32_)));
          set_has_test_fixed32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_test_uint64;
        break;
      }

      // optional uint64 test_uint64 = 9;
      case 9: {
        if (tag == 72) {
         parse_test_uint64:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &test_oneof_.test_uint64_)));
          set_has_test_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_test_fixed64;
        break;
      }

      // optional fixed64 test_fixed64 = 10;
      case 10: {
        if (tag == 81) {
         parse_test_fixed64:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &test_oneof_.test_fixed64_)));
          set_has_test_fixed64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_test_float;
        break;
      }

      // optional float test_float = 11;
      case 11: {
        if (tag == 93) {
         parse_test_float:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &test_oneof_.test_float_)));
          set_has_test_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_test_double;
        break;
      }

      // optional double test_double = 12;
      case 12: {
        if (tag == 97) {
         parse_test_double:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &test_oneof_.test_double_)));
          set_has_test_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_test_boolean;
        break;
      }

      // optional bool test_boolean = 13;
      case 13: {
        if (tag == 104) {
         parse_test_boolean:
          clear_test_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &test_oneof_.test_boolean_)));
          set_has_test_boolean();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_test_enum_small;
        break;
      }

      // optional .foo.TestEnumSmall test_enum_small = 14;
      case 14: {
        if (tag == 112) {
         parse_test_enum_small:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnumSmall_IsValid(value)) {
            set_test_enum_small(static_cast< ::foo::TestEnumSmall >(value));
          } else {
            mutable_unknown_fields()->AddVarint(14, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_test_enum;
        break;
      }

      // optional .foo.TestEnum test_enum = 15;
      case 15: {
        if (tag == 120) {
         parse_test_enum:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnum_IsValid(value)) {
            set_test_enum(static_cast< ::foo::TestEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(15, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_test_string;
        break;
      }

      // optional string test_string = 16;
      case 16: {
        if (tag == 130) {
         parse_test_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test_string().data(), this->test_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_test_bytes;
        break;
      }

      // optional bytes test_bytes = 17;
      case 17: {
        if (tag == 138) {
         parse_test_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_test_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_test_message;
        break;
      }

      // optional .foo.SubMess test_message = 18;
      case 18: {
        if (tag == 146) {
         parse_test_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_opt_int;
        break;
      }

      // optional int32 opt_int = 19;
      case 19: {
        if (tag == 152) {
         parse_opt_int:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_int_)));
          set_has_opt_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessOneof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessOneof)
  return false;
#undef DO_
}

void TestMessOneof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessOneof)
  // optional int32 test_int32 = 1;
  if (has_test_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->test_int32(), output);
  }

  // optional sint32 test_sint32 = 2;
  if (has_test_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->test_sint32(), output);
  }

  // optional sfixed32 test_sfixed32 = 3;
  if (has_test_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(3, this->test_sfixed32(), output);
  }

  // optional int64 test_int64 = 4;
  if (has_test_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->test_int64(), output);
  }

  // optional sint64 test_sint64 = 5;
  if (has_test_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->test_sint64(), output);
  }

  // optional sfixed64 test_sfixed64 = 6;
  if (has_test_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(6, this->test_sfixed64(), output);
  }

  // optional uint32 test_uint32 = 7;
  if (has_test_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->test_uint32(), output);
  }

  // optional fixed32 test_fixed32 = 8;
  if (has_test_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(8, this->test_fixed32(), output);
  }

  // optional uint64 test_uint64 = 9;
  if (has_test_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->test_uint64(), output);
  }

  // optional fixed64 test_fixed64 = 10;
  if (has_test_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->test_fixed64(), output);
  }

  // optional float test_float = 11;
  if (has_test_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->test_float(), output);
  }

  // optional double test_double = 12;
  if (has_test_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->test_double(), output);
  }

  // optional bool test_boolean = 13;
  if (has_test_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->test_boolean(), output);
  }

  // optional .foo.TestEnumSmall test_enum_small = 14;
  if (has_test_enum_small()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->test_enum_small(), output);
  }

  // optional .foo.TestEnum test_enum = 15;
  if (has_test_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->test_enum(), output);
  }

  // optional string test_string = 16;
  if (has_test_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test_string().data(), this->test_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->test_string(), output);
  }

  // optional bytes test_bytes = 17;
  if (has_test_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      17, this->test_bytes(), output);
  }

  // optional .foo.SubMess test_message = 18;
  if (has_test_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->test_message(), output);
  }

  // optional int32 opt_int = 19;
  if (has_opt_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->opt_int(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessOneof)
}

::google::protobuf::uint8* TestMessOneof::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessOneof)
  // optional int32 test_int32 = 1;
  if (has_test_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->test_int32(), target);
  }

  // optional sint32 test_sint32 = 2;
  if (has_test_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->test_sint32(), target);
  }

  // optional sfixed32 test_sfixed32 = 3;
  if (has_test_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(3, this->test_sfixed32(), target);
  }

  // optional int64 test_int64 = 4;
  if (has_test_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->test_int64(), target);
  }

  // optional sint64 test_sint64 = 5;
  if (has_test_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->test_sint64(), target);
  }

  // optional sfixed64 test_sfixed64 = 6;
  if (has_test_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(6, this->test_sfixed64(), target);
  }

  // optional uint32 test_uint32 = 7;
  if (has_test_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->test_uint32(), target);
  }

  // optional fixed32 test_fixed32 = 8;
  if (has_test_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(8, this->test_fixed32(), target);
  }

  // optional uint64 test_uint64 = 9;
  if (has_test_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->test_uint64(), target);
  }

  // optional fixed64 test_fixed64 = 10;
  if (has_test_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->test_fixed64(), target);
  }

  // optional float test_float = 11;
  if (has_test_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->test_float(), target);
  }

  // optional double test_double = 12;
  if (has_test_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->test_double(), target);
  }

  // optional bool test_boolean = 13;
  if (has_test_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->test_boolean(), target);
  }

  // optional .foo.TestEnumSmall test_enum_small = 14;
  if (has_test_enum_small()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->test_enum_small(), target);
  }

  // optional .foo.TestEnum test_enum = 15;
  if (has_test_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->test_enum(), target);
  }

  // optional string test_string = 16;
  if (has_test_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test_string().data(), this->test_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->test_string(), target);
  }

  // optional bytes test_bytes = 17;
  if (has_test_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        17, this->test_bytes(), target);
  }

  // optional .foo.SubMess test_message = 18;
  if (has_test_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->test_message(), target);
  }

  // optional int32 opt_int = 19;
  if (has_opt_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->opt_int(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessOneof)
  return target;
}

int TestMessOneof::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[18 / 32] & (0xffu << (18 % 32))) {
    // optional int32 opt_int = 19;
    if (has_opt_int()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt_int());
    }

  }
  switch (test_oneof_case()) {
    // optional int32 test_int32 = 1;
    case kTestInt32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->test_int32());
      break;
    }
    // optional sint32 test_sint32 = 2;
    case kTestSint32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->test_sint32());
      break;
    }
    // optional sfixed32 test_sfixed32 = 3;
    case kTestSfixed32: {
      total_size += 1 + 4;
      break;
    }
    // optional int64 test_int64 = 4;
    case kTestInt64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->test_int64());
      break;
    }
    // optional sint64 test_sint64 = 5;
    case kTestSint64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->test_sint64());
      break;
    }
    // optional sfixed64 test_sfixed64 = 6;
    case kTestSfixed64: {
      total_size += 1 + 8;
      break;
    }
    // optional uint32 test_uint32 = 7;
    case kTestUint32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->test_uint32());
      break;
    }
    // optional fixed32 test_fixed32 = 8;
    case kTestFixed32: {
      total_size += 1 + 4;
      break;
    }
    // optional uint64 test_uint64 = 9;
    case kTestUint64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->test_uint64());
      break;
    }
    // optional fixed64 test_fixed64 = 10;
    case kTestFixed64: {
      total_size += 1 + 8;
      break;
    }
    // optional float test_float = 11;
    case kTestFloat: {
      total_size += 1 + 4;
      break;
    }
    // optional double test_double = 12;
    case kTestDouble: {
      total_size += 1 + 8;
      break;
    }
    // optional bool test_boolean = 13;
    case kTestBoolean: {
      total_size += 1 + 1;
      break;
    }
    // optional .foo.TestEnumSmall test_enum_small = 14;
    case kTestEnumSmall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->test_enum_small());
      break;
    }
    // optional .foo.TestEnum test_enum = 15;
    case kTestEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->test_enum());
      break;
    }
    // optional string test_string = 16;
    case kTestString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test_string());
      break;
    }
    // optional bytes test_bytes = 17;
    case kTestBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->test_bytes());
      break;
    }
    // optional .foo.SubMess test_message = 18;
    case kTestMessage: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->test_message());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessOneof::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessOneof* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessOneof*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessOneof::MergeFrom(const TestMessOneof& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.test_oneof_case()) {
    case kTestInt32: {
      set_test_int32(from.test_int32());
      break;
    }
    case kTestSint32: {
      set_test_sint32(from.test_sint32());
      break;
    }
    case kTestSfixed32: {
      set_test_sfixed32(from.test_sfixed32());
      break;
    }
    case kTestInt64: {
      set_test_int64(from.test_int64());
      break;
    }
    case kTestSint64: {
      set_test_sint64(from.test_sint64());
      break;
    }
    case kTestSfixed64: {
      set_test_sfixed64(from.test_sfixed64());
      break;
    }
    case kTestUint32: {
      set_test_uint32(from.test_uint32());
      break;
    }
    case kTestFixed32: {
      set_test_fixed32(from.test_fixed32());
      break;
    }
    case kTestUint64: {
      set_test_uint64(from.test_uint64());
      break;
    }
    case kTestFixed64: {
      set_test_fixed64(from.test_fixed64());
      break;
    }
    case kTestFloat: {
      set_test_float(from.test_float());
      break;
    }
    case kTestDouble: {
      set_test_double(from.test_double());
      break;
    }
    case kTestBoolean: {
      set_test_boolean(from.test_boolean());
      break;
    }
    case kTestEnumSmall: {
      set_test_enum_small(from.test_enum_small());
      break;
    }
    case kTestEnum: {
      set_test_enum(from.test_enum());
      break;
    }
    case kTestString: {
      set_test_string(from.test_string());
      break;
    }
    case kTestBytes: {
      set_test_bytes(from.test_bytes());
      break;
    }
    case kTestMessage: {
      mutable_test_message()->::foo::SubMess::MergeFrom(from.test_message());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[18 / 32] & (0xffu << (18 % 32))) {
    if (from.has_opt_int()) {
      set_opt_int(from.opt_int());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessOneof::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessOneof::CopyFrom(const TestMessOneof& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessOneof::IsInitialized() const {

  if (has_test_message()) {
    if (!this->test_message().IsInitialized()) return false;
  }
  return true;
}

void TestMessOneof::Swap(TestMessOneof* other) {
  if (other != this) {
    std::swap(opt_int_, other->opt_int_);
    std::swap(test_oneof_, other->test_oneof_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessOneof::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessOneof_descriptor_;
  metadata.reflection = TestMessOneof_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredInt32::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredInt32::TestMessRequiredInt32()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredInt32)
}

void TestMessRequiredInt32::InitAsDefaultInstance() {
}

TestMessRequiredInt32::TestMessRequiredInt32(const TestMessRequiredInt32& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredInt32)
}

void TestMessRequiredInt32::SharedCtor() {
  _cached_size_ = 0;
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredInt32::~TestMessRequiredInt32() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredInt32)
  SharedDtor();
}

void TestMessRequiredInt32::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredInt32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredInt32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredInt32_descriptor_;
}

const TestMessRequiredInt32& TestMessRequiredInt32::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredInt32* TestMessRequiredInt32::default_instance_ = NULL;

TestMessRequiredInt32* TestMessRequiredInt32::New() const {
  return new TestMessRequiredInt32;
}

void TestMessRequiredInt32::Clear() {
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredInt32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 test = 42;
      case 42: {
        if (tag == 336) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredInt32)
  return false;
#undef DO_
}

void TestMessRequiredInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredInt32)
  // required int32 test = 42;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredInt32)
}

::google::protobuf::uint8* TestMessRequiredInt32::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredInt32)
  // required int32 test = 42;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredInt32)
  return target;
}

int TestMessRequiredInt32::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 test = 42;
    if (has_test()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredInt32::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredInt32* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredInt32*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredInt32::MergeFrom(const TestMessRequiredInt32& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredInt32::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredInt32::CopyFrom(const TestMessRequiredInt32& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredInt32::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredInt32::Swap(TestMessRequiredInt32* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredInt32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredInt32_descriptor_;
  metadata.reflection = TestMessRequiredInt32_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredSInt32::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredSInt32::TestMessRequiredSInt32()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredSInt32)
}

void TestMessRequiredSInt32::InitAsDefaultInstance() {
}

TestMessRequiredSInt32::TestMessRequiredSInt32(const TestMessRequiredSInt32& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredSInt32)
}

void TestMessRequiredSInt32::SharedCtor() {
  _cached_size_ = 0;
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredSInt32::~TestMessRequiredSInt32() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredSInt32)
  SharedDtor();
}

void TestMessRequiredSInt32::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredSInt32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredSInt32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredSInt32_descriptor_;
}

const TestMessRequiredSInt32& TestMessRequiredSInt32::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredSInt32* TestMessRequiredSInt32::default_instance_ = NULL;

TestMessRequiredSInt32* TestMessRequiredSInt32::New() const {
  return new TestMessRequiredSInt32;
}

void TestMessRequiredSInt32::Clear() {
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredSInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredSInt32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 test = 43;
      case 43: {
        if (tag == 344) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredSInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredSInt32)
  return false;
#undef DO_
}

void TestMessRequiredSInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredSInt32)
  // required sint32 test = 43;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(43, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredSInt32)
}

::google::protobuf::uint8* TestMessRequiredSInt32::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredSInt32)
  // required sint32 test = 43;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(43, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredSInt32)
  return target;
}

int TestMessRequiredSInt32::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required sint32 test = 43;
    if (has_test()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredSInt32::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredSInt32* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredSInt32*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredSInt32::MergeFrom(const TestMessRequiredSInt32& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredSInt32::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredSInt32::CopyFrom(const TestMessRequiredSInt32& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredSInt32::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredSInt32::Swap(TestMessRequiredSInt32* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredSInt32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredSInt32_descriptor_;
  metadata.reflection = TestMessRequiredSInt32_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredSFixed32::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredSFixed32::TestMessRequiredSFixed32()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredSFixed32)
}

void TestMessRequiredSFixed32::InitAsDefaultInstance() {
}

TestMessRequiredSFixed32::TestMessRequiredSFixed32(const TestMessRequiredSFixed32& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredSFixed32)
}

void TestMessRequiredSFixed32::SharedCtor() {
  _cached_size_ = 0;
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredSFixed32::~TestMessRequiredSFixed32() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredSFixed32)
  SharedDtor();
}

void TestMessRequiredSFixed32::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredSFixed32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredSFixed32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredSFixed32_descriptor_;
}

const TestMessRequiredSFixed32& TestMessRequiredSFixed32::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredSFixed32* TestMessRequiredSFixed32::default_instance_ = NULL;

TestMessRequiredSFixed32* TestMessRequiredSFixed32::New() const {
  return new TestMessRequiredSFixed32;
}

void TestMessRequiredSFixed32::Clear() {
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredSFixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredSFixed32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sfixed32 test = 100;
      case 100: {
        if (tag == 805) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredSFixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredSFixed32)
  return false;
#undef DO_
}

void TestMessRequiredSFixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredSFixed32)
  // required sfixed32 test = 100;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(100, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredSFixed32)
}

::google::protobuf::uint8* TestMessRequiredSFixed32::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredSFixed32)
  // required sfixed32 test = 100;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(100, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredSFixed32)
  return target;
}

int TestMessRequiredSFixed32::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required sfixed32 test = 100;
    if (has_test()) {
      total_size += 2 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredSFixed32::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredSFixed32* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredSFixed32*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredSFixed32::MergeFrom(const TestMessRequiredSFixed32& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredSFixed32::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredSFixed32::CopyFrom(const TestMessRequiredSFixed32& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredSFixed32::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredSFixed32::Swap(TestMessRequiredSFixed32* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredSFixed32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredSFixed32_descriptor_;
  metadata.reflection = TestMessRequiredSFixed32_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredInt64::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredInt64::TestMessRequiredInt64()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredInt64)
}

void TestMessRequiredInt64::InitAsDefaultInstance() {
}

TestMessRequiredInt64::TestMessRequiredInt64(const TestMessRequiredInt64& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredInt64)
}

void TestMessRequiredInt64::SharedCtor() {
  _cached_size_ = 0;
  test_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredInt64::~TestMessRequiredInt64() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredInt64)
  SharedDtor();
}

void TestMessRequiredInt64::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredInt64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredInt64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredInt64_descriptor_;
}

const TestMessRequiredInt64& TestMessRequiredInt64::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredInt64* TestMessRequiredInt64::default_instance_ = NULL;

TestMessRequiredInt64* TestMessRequiredInt64::New() const {
  return new TestMessRequiredInt64;
}

void TestMessRequiredInt64::Clear() {
  test_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredInt64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 test = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredInt64)
  return false;
#undef DO_
}

void TestMessRequiredInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredInt64)
  // required int64 test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredInt64)
}

::google::protobuf::uint8* TestMessRequiredInt64::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredInt64)
  // required int64 test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredInt64)
  return target;
}

int TestMessRequiredInt64::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 test = 1;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredInt64::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredInt64* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredInt64*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredInt64::MergeFrom(const TestMessRequiredInt64& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredInt64::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredInt64::CopyFrom(const TestMessRequiredInt64& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredInt64::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredInt64::Swap(TestMessRequiredInt64* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredInt64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredInt64_descriptor_;
  metadata.reflection = TestMessRequiredInt64_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredSInt64::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredSInt64::TestMessRequiredSInt64()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredSInt64)
}

void TestMessRequiredSInt64::InitAsDefaultInstance() {
}

TestMessRequiredSInt64::TestMessRequiredSInt64(const TestMessRequiredSInt64& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredSInt64)
}

void TestMessRequiredSInt64::SharedCtor() {
  _cached_size_ = 0;
  test_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredSInt64::~TestMessRequiredSInt64() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredSInt64)
  SharedDtor();
}

void TestMessRequiredSInt64::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredSInt64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredSInt64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredSInt64_descriptor_;
}

const TestMessRequiredSInt64& TestMessRequiredSInt64::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredSInt64* TestMessRequiredSInt64::default_instance_ = NULL;

TestMessRequiredSInt64* TestMessRequiredSInt64::New() const {
  return new TestMessRequiredSInt64;
}

void TestMessRequiredSInt64::Clear() {
  test_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredSInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredSInt64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint64 test = 11;
      case 11: {
        if (tag == 88) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredSInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredSInt64)
  return false;
#undef DO_
}

void TestMessRequiredSInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredSInt64)
  // required sint64 test = 11;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(11, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredSInt64)
}

::google::protobuf::uint8* TestMessRequiredSInt64::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredSInt64)
  // required sint64 test = 11;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(11, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredSInt64)
  return target;
}

int TestMessRequiredSInt64::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required sint64 test = 11;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredSInt64::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredSInt64* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredSInt64*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredSInt64::MergeFrom(const TestMessRequiredSInt64& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredSInt64::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredSInt64::CopyFrom(const TestMessRequiredSInt64& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredSInt64::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredSInt64::Swap(TestMessRequiredSInt64* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredSInt64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredSInt64_descriptor_;
  metadata.reflection = TestMessRequiredSInt64_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredSFixed64::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredSFixed64::TestMessRequiredSFixed64()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredSFixed64)
}

void TestMessRequiredSFixed64::InitAsDefaultInstance() {
}

TestMessRequiredSFixed64::TestMessRequiredSFixed64(const TestMessRequiredSFixed64& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredSFixed64)
}

void TestMessRequiredSFixed64::SharedCtor() {
  _cached_size_ = 0;
  test_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredSFixed64::~TestMessRequiredSFixed64() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredSFixed64)
  SharedDtor();
}

void TestMessRequiredSFixed64::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredSFixed64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredSFixed64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredSFixed64_descriptor_;
}

const TestMessRequiredSFixed64& TestMessRequiredSFixed64::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredSFixed64* TestMessRequiredSFixed64::default_instance_ = NULL;

TestMessRequiredSFixed64* TestMessRequiredSFixed64::New() const {
  return new TestMessRequiredSFixed64;
}

void TestMessRequiredSFixed64::Clear() {
  test_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredSFixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredSFixed64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sfixed64 test = 12;
      case 12: {
        if (tag == 97) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredSFixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredSFixed64)
  return false;
#undef DO_
}

void TestMessRequiredSFixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredSFixed64)
  // required sfixed64 test = 12;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(12, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredSFixed64)
}

::google::protobuf::uint8* TestMessRequiredSFixed64::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredSFixed64)
  // required sfixed64 test = 12;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(12, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredSFixed64)
  return target;
}

int TestMessRequiredSFixed64::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required sfixed64 test = 12;
    if (has_test()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredSFixed64::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredSFixed64* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredSFixed64*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredSFixed64::MergeFrom(const TestMessRequiredSFixed64& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredSFixed64::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredSFixed64::CopyFrom(const TestMessRequiredSFixed64& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredSFixed64::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredSFixed64::Swap(TestMessRequiredSFixed64* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredSFixed64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredSFixed64_descriptor_;
  metadata.reflection = TestMessRequiredSFixed64_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredUInt32::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredUInt32::TestMessRequiredUInt32()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredUInt32)
}

void TestMessRequiredUInt32::InitAsDefaultInstance() {
}

TestMessRequiredUInt32::TestMessRequiredUInt32(const TestMessRequiredUInt32& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredUInt32)
}

void TestMessRequiredUInt32::SharedCtor() {
  _cached_size_ = 0;
  test_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredUInt32::~TestMessRequiredUInt32() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredUInt32)
  SharedDtor();
}

void TestMessRequiredUInt32::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredUInt32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredUInt32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredUInt32_descriptor_;
}

const TestMessRequiredUInt32& TestMessRequiredUInt32::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredUInt32* TestMessRequiredUInt32::default_instance_ = NULL;

TestMessRequiredUInt32* TestMessRequiredUInt32::New() const {
  return new TestMessRequiredUInt32;
}

void TestMessRequiredUInt32::Clear() {
  test_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredUInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredUInt32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 test = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredUInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredUInt32)
  return false;
#undef DO_
}

void TestMessRequiredUInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredUInt32)
  // required uint32 test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredUInt32)
}

::google::protobuf::uint8* TestMessRequiredUInt32::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredUInt32)
  // required uint32 test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredUInt32)
  return target;
}

int TestMessRequiredUInt32::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 test = 1;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredUInt32::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredUInt32* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredUInt32*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredUInt32::MergeFrom(const TestMessRequiredUInt32& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredUInt32::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredUInt32::CopyFrom(const TestMessRequiredUInt32& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredUInt32::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredUInt32::Swap(TestMessRequiredUInt32* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredUInt32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredUInt32_descriptor_;
  metadata.reflection = TestMessRequiredUInt32_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredFixed32::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredFixed32::TestMessRequiredFixed32()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredFixed32)
}

void TestMessRequiredFixed32::InitAsDefaultInstance() {
}

TestMessRequiredFixed32::TestMessRequiredFixed32(const TestMessRequiredFixed32& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredFixed32)
}

void TestMessRequiredFixed32::SharedCtor() {
  _cached_size_ = 0;
  test_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredFixed32::~TestMessRequiredFixed32() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredFixed32)
  SharedDtor();
}

void TestMessRequiredFixed32::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredFixed32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredFixed32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredFixed32_descriptor_;
}

const TestMessRequiredFixed32& TestMessRequiredFixed32::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredFixed32* TestMessRequiredFixed32::default_instance_ = NULL;

TestMessRequiredFixed32* TestMessRequiredFixed32::New() const {
  return new TestMessRequiredFixed32;
}

void TestMessRequiredFixed32::Clear() {
  test_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredFixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredFixed32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 test = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredFixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredFixed32)
  return false;
#undef DO_
}

void TestMessRequiredFixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredFixed32)
  // required fixed32 test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredFixed32)
}

::google::protobuf::uint8* TestMessRequiredFixed32::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredFixed32)
  // required fixed32 test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredFixed32)
  return target;
}

int TestMessRequiredFixed32::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required fixed32 test = 1;
    if (has_test()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredFixed32::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredFixed32* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredFixed32*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredFixed32::MergeFrom(const TestMessRequiredFixed32& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredFixed32::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredFixed32::CopyFrom(const TestMessRequiredFixed32& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredFixed32::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredFixed32::Swap(TestMessRequiredFixed32* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredFixed32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredFixed32_descriptor_;
  metadata.reflection = TestMessRequiredFixed32_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredUInt64::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredUInt64::TestMessRequiredUInt64()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredUInt64)
}

void TestMessRequiredUInt64::InitAsDefaultInstance() {
}

TestMessRequiredUInt64::TestMessRequiredUInt64(const TestMessRequiredUInt64& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredUInt64)
}

void TestMessRequiredUInt64::SharedCtor() {
  _cached_size_ = 0;
  test_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredUInt64::~TestMessRequiredUInt64() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredUInt64)
  SharedDtor();
}

void TestMessRequiredUInt64::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredUInt64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredUInt64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredUInt64_descriptor_;
}

const TestMessRequiredUInt64& TestMessRequiredUInt64::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredUInt64* TestMessRequiredUInt64::default_instance_ = NULL;

TestMessRequiredUInt64* TestMessRequiredUInt64::New() const {
  return new TestMessRequiredUInt64;
}

void TestMessRequiredUInt64::Clear() {
  test_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredUInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredUInt64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 test = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredUInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredUInt64)
  return false;
#undef DO_
}

void TestMessRequiredUInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredUInt64)
  // required uint64 test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredUInt64)
}

::google::protobuf::uint8* TestMessRequiredUInt64::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredUInt64)
  // required uint64 test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredUInt64)
  return target;
}

int TestMessRequiredUInt64::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 test = 1;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredUInt64::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredUInt64* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredUInt64*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredUInt64::MergeFrom(const TestMessRequiredUInt64& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredUInt64::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredUInt64::CopyFrom(const TestMessRequiredUInt64& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredUInt64::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredUInt64::Swap(TestMessRequiredUInt64* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredUInt64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredUInt64_descriptor_;
  metadata.reflection = TestMessRequiredUInt64_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredFixed64::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredFixed64::TestMessRequiredFixed64()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredFixed64)
}

void TestMessRequiredFixed64::InitAsDefaultInstance() {
}

TestMessRequiredFixed64::TestMessRequiredFixed64(const TestMessRequiredFixed64& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredFixed64)
}

void TestMessRequiredFixed64::SharedCtor() {
  _cached_size_ = 0;
  test_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredFixed64::~TestMessRequiredFixed64() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredFixed64)
  SharedDtor();
}

void TestMessRequiredFixed64::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredFixed64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredFixed64::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredFixed64_descriptor_;
}

const TestMessRequiredFixed64& TestMessRequiredFixed64::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredFixed64* TestMessRequiredFixed64::default_instance_ = NULL;

TestMessRequiredFixed64* TestMessRequiredFixed64::New() const {
  return new TestMessRequiredFixed64;
}

void TestMessRequiredFixed64::Clear() {
  test_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredFixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredFixed64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed64 test = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredFixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredFixed64)
  return false;
#undef DO_
}

void TestMessRequiredFixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredFixed64)
  // required fixed64 test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredFixed64)
}

::google::protobuf::uint8* TestMessRequiredFixed64::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredFixed64)
  // required fixed64 test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredFixed64)
  return target;
}

int TestMessRequiredFixed64::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required fixed64 test = 1;
    if (has_test()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredFixed64::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredFixed64* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredFixed64*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredFixed64::MergeFrom(const TestMessRequiredFixed64& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredFixed64::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredFixed64::CopyFrom(const TestMessRequiredFixed64& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredFixed64::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredFixed64::Swap(TestMessRequiredFixed64* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredFixed64::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredFixed64_descriptor_;
  metadata.reflection = TestMessRequiredFixed64_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredFloat::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredFloat::TestMessRequiredFloat()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredFloat)
}

void TestMessRequiredFloat::InitAsDefaultInstance() {
}

TestMessRequiredFloat::TestMessRequiredFloat(const TestMessRequiredFloat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredFloat)
}

void TestMessRequiredFloat::SharedCtor() {
  _cached_size_ = 0;
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredFloat::~TestMessRequiredFloat() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredFloat)
  SharedDtor();
}

void TestMessRequiredFloat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredFloat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredFloat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredFloat_descriptor_;
}

const TestMessRequiredFloat& TestMessRequiredFloat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredFloat* TestMessRequiredFloat::default_instance_ = NULL;

TestMessRequiredFloat* TestMessRequiredFloat::New() const {
  return new TestMessRequiredFloat;
}

void TestMessRequiredFloat::Clear() {
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredFloat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float test = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredFloat)
  return false;
#undef DO_
}

void TestMessRequiredFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredFloat)
  // required float test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredFloat)
}

::google::protobuf::uint8* TestMessRequiredFloat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredFloat)
  // required float test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredFloat)
  return target;
}

int TestMessRequiredFloat::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float test = 1;
    if (has_test()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredFloat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredFloat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredFloat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredFloat::MergeFrom(const TestMessRequiredFloat& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredFloat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredFloat::CopyFrom(const TestMessRequiredFloat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredFloat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredFloat::Swap(TestMessRequiredFloat* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredFloat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredFloat_descriptor_;
  metadata.reflection = TestMessRequiredFloat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredDouble::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredDouble::TestMessRequiredDouble()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredDouble)
}

void TestMessRequiredDouble::InitAsDefaultInstance() {
}

TestMessRequiredDouble::TestMessRequiredDouble(const TestMessRequiredDouble& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredDouble)
}

void TestMessRequiredDouble::SharedCtor() {
  _cached_size_ = 0;
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredDouble::~TestMessRequiredDouble() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredDouble)
  SharedDtor();
}

void TestMessRequiredDouble::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredDouble::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredDouble::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredDouble_descriptor_;
}

const TestMessRequiredDouble& TestMessRequiredDouble::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredDouble* TestMessRequiredDouble::default_instance_ = NULL;

TestMessRequiredDouble* TestMessRequiredDouble::New() const {
  return new TestMessRequiredDouble;
}

void TestMessRequiredDouble::Clear() {
  test_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredDouble)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double test = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredDouble)
  return false;
#undef DO_
}

void TestMessRequiredDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredDouble)
  // required double test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredDouble)
}

::google::protobuf::uint8* TestMessRequiredDouble::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredDouble)
  // required double test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredDouble)
  return target;
}

int TestMessRequiredDouble::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double test = 1;
    if (has_test()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredDouble::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredDouble* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredDouble*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredDouble::MergeFrom(const TestMessRequiredDouble& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredDouble::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredDouble::CopyFrom(const TestMessRequiredDouble& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredDouble::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredDouble::Swap(TestMessRequiredDouble* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredDouble::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredDouble_descriptor_;
  metadata.reflection = TestMessRequiredDouble_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredBool::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredBool::TestMessRequiredBool()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredBool)
}

void TestMessRequiredBool::InitAsDefaultInstance() {
}

TestMessRequiredBool::TestMessRequiredBool(const TestMessRequiredBool& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredBool)
}

void TestMessRequiredBool::SharedCtor() {
  _cached_size_ = 0;
  test_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredBool::~TestMessRequiredBool() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredBool)
  SharedDtor();
}

void TestMessRequiredBool::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredBool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredBool::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredBool_descriptor_;
}

const TestMessRequiredBool& TestMessRequiredBool::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredBool* TestMessRequiredBool::default_instance_ = NULL;

TestMessRequiredBool* TestMessRequiredBool::New() const {
  return new TestMessRequiredBool;
}

void TestMessRequiredBool::Clear() {
  test_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredBool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredBool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool test = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &test_)));
          set_has_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredBool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredBool)
  return false;
#undef DO_
}

void TestMessRequiredBool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredBool)
  // required bool test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredBool)
}

::google::protobuf::uint8* TestMessRequiredBool::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredBool)
  // required bool test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredBool)
  return target;
}

int TestMessRequiredBool::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool test = 1;
    if (has_test()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredBool::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredBool* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredBool*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredBool::MergeFrom(const TestMessRequiredBool& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredBool::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredBool::CopyFrom(const TestMessRequiredBool& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredBool::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredBool::Swap(TestMessRequiredBool* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredBool::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredBool_descriptor_;
  metadata.reflection = TestMessRequiredBool_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredEnum::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredEnum::TestMessRequiredEnum()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredEnum)
}

void TestMessRequiredEnum::InitAsDefaultInstance() {
}

TestMessRequiredEnum::TestMessRequiredEnum(const TestMessRequiredEnum& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredEnum)
}

void TestMessRequiredEnum::SharedCtor() {
  _cached_size_ = 0;
  test_ = -123456;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredEnum::~TestMessRequiredEnum() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredEnum)
  SharedDtor();
}

void TestMessRequiredEnum::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredEnum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredEnum::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredEnum_descriptor_;
}

const TestMessRequiredEnum& TestMessRequiredEnum::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredEnum* TestMessRequiredEnum::default_instance_ = NULL;

TestMessRequiredEnum* TestMessRequiredEnum::New() const {
  return new TestMessRequiredEnum;
}

void TestMessRequiredEnum::Clear() {
  test_ = -123456;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredEnum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredEnum)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .foo.TestEnum test = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnum_IsValid(value)) {
            set_test(static_cast< ::foo::TestEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredEnum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredEnum)
  return false;
#undef DO_
}

void TestMessRequiredEnum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredEnum)
  // required .foo.TestEnum test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredEnum)
}

::google::protobuf::uint8* TestMessRequiredEnum::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredEnum)
  // required .foo.TestEnum test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredEnum)
  return target;
}

int TestMessRequiredEnum::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .foo.TestEnum test = 1;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredEnum::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredEnum* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredEnum*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredEnum::MergeFrom(const TestMessRequiredEnum& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredEnum::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredEnum::CopyFrom(const TestMessRequiredEnum& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredEnum::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredEnum::Swap(TestMessRequiredEnum* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredEnum::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredEnum_descriptor_;
  metadata.reflection = TestMessRequiredEnum_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredEnumSmall::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredEnumSmall::TestMessRequiredEnumSmall()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredEnumSmall)
}

void TestMessRequiredEnumSmall::InitAsDefaultInstance() {
}

TestMessRequiredEnumSmall::TestMessRequiredEnumSmall(const TestMessRequiredEnumSmall& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredEnumSmall)
}

void TestMessRequiredEnumSmall::SharedCtor() {
  _cached_size_ = 0;
  test_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredEnumSmall::~TestMessRequiredEnumSmall() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredEnumSmall)
  SharedDtor();
}

void TestMessRequiredEnumSmall::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestMessRequiredEnumSmall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredEnumSmall::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredEnumSmall_descriptor_;
}

const TestMessRequiredEnumSmall& TestMessRequiredEnumSmall::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredEnumSmall* TestMessRequiredEnumSmall::default_instance_ = NULL;

TestMessRequiredEnumSmall* TestMessRequiredEnumSmall::New() const {
  return new TestMessRequiredEnumSmall;
}

void TestMessRequiredEnumSmall::Clear() {
  test_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredEnumSmall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredEnumSmall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .foo.TestEnumSmall test = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::TestEnumSmall_IsValid(value)) {
            set_test(static_cast< ::foo::TestEnumSmall >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredEnumSmall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredEnumSmall)
  return false;
#undef DO_
}

void TestMessRequiredEnumSmall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredEnumSmall)
  // required .foo.TestEnumSmall test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredEnumSmall)
}

::google::protobuf::uint8* TestMessRequiredEnumSmall::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredEnumSmall)
  // required .foo.TestEnumSmall test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredEnumSmall)
  return target;
}

int TestMessRequiredEnumSmall::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .foo.TestEnumSmall test = 1;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredEnumSmall::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredEnumSmall* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredEnumSmall*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredEnumSmall::MergeFrom(const TestMessRequiredEnumSmall& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredEnumSmall::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredEnumSmall::CopyFrom(const TestMessRequiredEnumSmall& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredEnumSmall::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredEnumSmall::Swap(TestMessRequiredEnumSmall* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredEnumSmall::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredEnumSmall_descriptor_;
  metadata.reflection = TestMessRequiredEnumSmall_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredString::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredString::TestMessRequiredString()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredString)
}

void TestMessRequiredString::InitAsDefaultInstance() {
}

TestMessRequiredString::TestMessRequiredString(const TestMessRequiredString& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredString)
}

void TestMessRequiredString::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredString::~TestMessRequiredString() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredString)
  SharedDtor();
}

void TestMessRequiredString::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestMessRequiredString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredString::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredString_descriptor_;
}

const TestMessRequiredString& TestMessRequiredString::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredString* TestMessRequiredString::default_instance_ = NULL;

TestMessRequiredString* TestMessRequiredString::New() const {
  return new TestMessRequiredString;
}

void TestMessRequiredString::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string test = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->test().data(), this->test().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "test");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredString)
  return false;
#undef DO_
}

void TestMessRequiredString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredString)
  // required string test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredString)
}

::google::protobuf::uint8* TestMessRequiredString::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredString)
  // required string test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->test().data(), this->test().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "test");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredString)
  return target;
}

int TestMessRequiredString::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string test = 1;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredString::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredString* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredString*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredString::MergeFrom(const TestMessRequiredString& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredString::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredString::CopyFrom(const TestMessRequiredString& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredString::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredString::Swap(TestMessRequiredString* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredString::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredString_descriptor_;
  metadata.reflection = TestMessRequiredString_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredBytes::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredBytes::TestMessRequiredBytes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredBytes)
}

void TestMessRequiredBytes::InitAsDefaultInstance() {
}

TestMessRequiredBytes::TestMessRequiredBytes(const TestMessRequiredBytes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredBytes)
}

void TestMessRequiredBytes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredBytes::~TestMessRequiredBytes() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredBytes)
  SharedDtor();
}

void TestMessRequiredBytes::SharedDtor() {
  if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete test_;
  }
  if (this != default_instance_) {
  }
}

void TestMessRequiredBytes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredBytes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredBytes_descriptor_;
}

const TestMessRequiredBytes& TestMessRequiredBytes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredBytes* TestMessRequiredBytes::default_instance_ = NULL;

TestMessRequiredBytes* TestMessRequiredBytes::New() const {
  return new TestMessRequiredBytes;
}

void TestMessRequiredBytes::Clear() {
  if (has_test()) {
    if (test_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      test_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredBytes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes test = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_test()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredBytes)
  return false;
#undef DO_
}

void TestMessRequiredBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredBytes)
  // required bytes test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredBytes)
}

::google::protobuf::uint8* TestMessRequiredBytes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredBytes)
  // required bytes test = 1;
  if (has_test()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredBytes)
  return target;
}

int TestMessRequiredBytes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes test = 1;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredBytes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredBytes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredBytes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredBytes::MergeFrom(const TestMessRequiredBytes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      set_test(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredBytes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredBytes::CopyFrom(const TestMessRequiredBytes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredBytes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessRequiredBytes::Swap(TestMessRequiredBytes* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredBytes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredBytes_descriptor_;
  metadata.reflection = TestMessRequiredBytes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessRequiredMessage::kTestFieldNumber;
#endif  // !_MSC_VER

TestMessRequiredMessage::TestMessRequiredMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessRequiredMessage)
}

void TestMessRequiredMessage::InitAsDefaultInstance() {
  test_ = const_cast< ::foo::SubMess*>(&::foo::SubMess::default_instance());
}

TestMessRequiredMessage::TestMessRequiredMessage(const TestMessRequiredMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessRequiredMessage)
}

void TestMessRequiredMessage::SharedCtor() {
  _cached_size_ = 0;
  test_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessRequiredMessage::~TestMessRequiredMessage() {
  // @@protoc_insertion_point(destructor:foo.TestMessRequiredMessage)
  SharedDtor();
}

void TestMessRequiredMessage::SharedDtor() {
  if (this != default_instance_) {
    delete test_;
  }
}

void TestMessRequiredMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessRequiredMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessRequiredMessage_descriptor_;
}

const TestMessRequiredMessage& TestMessRequiredMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessRequiredMessage* TestMessRequiredMessage::default_instance_ = NULL;

TestMessRequiredMessage* TestMessRequiredMessage::New() const {
  return new TestMessRequiredMessage;
}

void TestMessRequiredMessage::Clear() {
  if (has_test()) {
    if (test_ != NULL) test_->::foo::SubMess::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessRequiredMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessRequiredMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .foo.SubMess test = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessRequiredMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessRequiredMessage)
  return false;
#undef DO_
}

void TestMessRequiredMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessRequiredMessage)
  // required .foo.SubMess test = 1;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->test(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessRequiredMessage)
}

::google::protobuf::uint8* TestMessRequiredMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessRequiredMessage)
  // required .foo.SubMess test = 1;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->test(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessRequiredMessage)
  return target;
}

int TestMessRequiredMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .foo.SubMess test = 1;
    if (has_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->test());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessRequiredMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessRequiredMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessRequiredMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessRequiredMessage::MergeFrom(const TestMessRequiredMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_test()) {
      mutable_test()->::foo::SubMess::MergeFrom(from.test());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessRequiredMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessRequiredMessage::CopyFrom(const TestMessRequiredMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessRequiredMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_test()) {
    if (!this->test().IsInitialized()) return false;
  }
  return true;
}

void TestMessRequiredMessage::Swap(TestMessRequiredMessage* other) {
  if (other != this) {
    std::swap(test_, other->test_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessRequiredMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessRequiredMessage_descriptor_;
  metadata.reflection = TestMessRequiredMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

EmptyMess::EmptyMess()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.EmptyMess)
}

void EmptyMess::InitAsDefaultInstance() {
}

EmptyMess::EmptyMess(const EmptyMess& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.EmptyMess)
}

void EmptyMess::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EmptyMess::~EmptyMess() {
  // @@protoc_insertion_point(destructor:foo.EmptyMess)
  SharedDtor();
}

void EmptyMess::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EmptyMess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyMess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmptyMess_descriptor_;
}

const EmptyMess& EmptyMess::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

EmptyMess* EmptyMess::default_instance_ = NULL;

EmptyMess* EmptyMess::New() const {
  return new EmptyMess;
}

void EmptyMess::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EmptyMess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.EmptyMess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:foo.EmptyMess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.EmptyMess)
  return false;
#undef DO_
}

void EmptyMess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.EmptyMess)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.EmptyMess)
}

::google::protobuf::uint8* EmptyMess::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.EmptyMess)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.EmptyMess)
  return target;
}

int EmptyMess::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyMess::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EmptyMess* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EmptyMess*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EmptyMess::MergeFrom(const EmptyMess& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EmptyMess::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyMess::CopyFrom(const EmptyMess& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyMess::IsInitialized() const {

  return true;
}

void EmptyMess::Swap(EmptyMess* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EmptyMess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmptyMess_descriptor_;
  metadata.reflection = EmptyMess_reflection_;
  return metadata;
}


// ===================================================================

::std::string* DefaultRequiredValues::_default_v_string_ = NULL;
::std::string* DefaultRequiredValues::_default_v_bytes_ = NULL;
#ifndef _MSC_VER
const int DefaultRequiredValues::kVInt32FieldNumber;
const int DefaultRequiredValues::kVUint32FieldNumber;
const int DefaultRequiredValues::kVInt64FieldNumber;
const int DefaultRequiredValues::kVUint64FieldNumber;
const int DefaultRequiredValues::kVFloatFieldNumber;
const int DefaultRequiredValues::kVDoubleFieldNumber;
const int DefaultRequiredValues::kVStringFieldNumber;
const int DefaultRequiredValues::kVBytesFieldNumber;
#endif  // !_MSC_VER

DefaultRequiredValues::DefaultRequiredValues()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.DefaultRequiredValues)
}

void DefaultRequiredValues::InitAsDefaultInstance() {
}

DefaultRequiredValues::DefaultRequiredValues(const DefaultRequiredValues& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.DefaultRequiredValues)
}

void DefaultRequiredValues::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  v_int32_ = -42;
  v_uint32_ = 666u;
  v_int64_ = 100000;
  v_uint64_ = 100001u;
  v_float_ = 2.5f;
  v_double_ = 4.5;
  v_string_ = const_cast< ::std::string*>(_default_v_string_);
  v_bytes_ = const_cast< ::std::string*>(_default_v_bytes_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DefaultRequiredValues::~DefaultRequiredValues() {
  // @@protoc_insertion_point(destructor:foo.DefaultRequiredValues)
  SharedDtor();
}

void DefaultRequiredValues::SharedDtor() {
  if (v_string_ != _default_v_string_) {
    delete v_string_;
  }
  if (v_bytes_ != _default_v_bytes_) {
    delete v_bytes_;
  }
  if (this != default_instance_) {
  }
}

void DefaultRequiredValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DefaultRequiredValues::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DefaultRequiredValues_descriptor_;
}

const DefaultRequiredValues& DefaultRequiredValues::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

DefaultRequiredValues* DefaultRequiredValues::default_instance_ = NULL;

DefaultRequiredValues* DefaultRequiredValues::New() const {
  return new DefaultRequiredValues;
}

void DefaultRequiredValues::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    v_int32_ = -42;
    v_uint32_ = 666u;
    v_int64_ = 100000;
    v_uint64_ = 100001u;
    v_float_ = 2.5f;
    v_double_ = 4.5;
    if (has_v_string()) {
      if (v_string_ != _default_v_string_) {
        v_string_->assign(*_default_v_string_);
      }
    }
    if (has_v_bytes()) {
      if (v_bytes_ != _default_v_bytes_) {
        v_bytes_->assign(*_default_v_bytes_);
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DefaultRequiredValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.DefaultRequiredValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 v_int32 = 1 [default = -42];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &v_int32_)));
          set_has_v_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_v_uint32;
        break;
      }

      // required uint32 v_uint32 = 2 [default = 666];
      case 2: {
        if (tag == 16) {
         parse_v_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v_uint32_)));
          set_has_v_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_v_int64;
        break;
      }

      // required int32 v_int64 = 3 [default = 100000];
      case 3: {
        if (tag == 24) {
         parse_v_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &v_int64_)));
          set_has_v_int64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_v_uint64;
        break;
      }

      // required uint32 v_uint64 = 4 [default = 100001];
      case 4: {
        if (tag == 32) {
         parse_v_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v_uint64_)));
          set_has_v_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_v_float;
        break;
      }

      // required float v_float = 5 [default = 2.5];
      case 5: {
        if (tag == 45) {
         parse_v_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_float_)));
          set_has_v_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_v_double;
        break;
      }

      // required double v_double = 6 [default = 4.5];
      case 6: {
        if (tag == 49) {
         parse_v_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_double_)));
          set_has_v_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_v_string;
        break;
      }

      // required string v_string = 7 [default = "hi mom\n"];
      case 7: {
        if (tag == 58) {
         parse_v_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_v_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->v_string().data(), this->v_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "v_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_v_bytes;
        break;
      }

      // required bytes v_bytes = 8 [default = "a \000 character"];
      case 8: {
        if (tag == 66) {
         parse_v_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_v_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.DefaultRequiredValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.DefaultRequiredValues)
  return false;
#undef DO_
}

void DefaultRequiredValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.DefaultRequiredValues)
  // required int32 v_int32 = 1 [default = -42];
  if (has_v_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->v_int32(), output);
  }

  // required uint32 v_uint32 = 2 [default = 666];
  if (has_v_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->v_uint32(), output);
  }

  // required int32 v_int64 = 3 [default = 100000];
  if (has_v_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->v_int64(), output);
  }

  // required uint32 v_uint64 = 4 [default = 100001];
  if (has_v_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->v_uint64(), output);
  }

  // required float v_float = 5 [default = 2.5];
  if (has_v_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->v_float(), output);
  }

  // required double v_double = 6 [default = 4.5];
  if (has_v_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->v_double(), output);
  }

  // required string v_string = 7 [default = "hi mom\n"];
  if (has_v_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->v_string().data(), this->v_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "v_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->v_string(), output);
  }

  // required bytes v_bytes = 8 [default = "a \000 character"];
  if (has_v_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->v_bytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.DefaultRequiredValues)
}

::google::protobuf::uint8* DefaultRequiredValues::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.DefaultRequiredValues)
  // required int32 v_int32 = 1 [default = -42];
  if (has_v_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->v_int32(), target);
  }

  // required uint32 v_uint32 = 2 [default = 666];
  if (has_v_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->v_uint32(), target);
  }

  // required int32 v_int64 = 3 [default = 100000];
  if (has_v_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->v_int64(), target);
  }

  // required uint32 v_uint64 = 4 [default = 100001];
  if (has_v_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->v_uint64(), target);
  }

  // required float v_float = 5 [default = 2.5];
  if (has_v_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->v_float(), target);
  }

  // required double v_double = 6 [default = 4.5];
  if (has_v_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->v_double(), target);
  }

  // required string v_string = 7 [default = "hi mom\n"];
  if (has_v_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->v_string().data(), this->v_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "v_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->v_string(), target);
  }

  // required bytes v_bytes = 8 [default = "a \000 character"];
  if (has_v_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->v_bytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.DefaultRequiredValues)
  return target;
}

int DefaultRequiredValues::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 v_int32 = 1 [default = -42];
    if (has_v_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->v_int32());
    }

    // required uint32 v_uint32 = 2 [default = 666];
    if (has_v_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v_uint32());
    }

    // required int32 v_int64 = 3 [default = 100000];
    if (has_v_int64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->v_int64());
    }

    // required uint32 v_uint64 = 4 [default = 100001];
    if (has_v_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v_uint64());
    }

    // required float v_float = 5 [default = 2.5];
    if (has_v_float()) {
      total_size += 1 + 4;
    }

    // required double v_double = 6 [default = 4.5];
    if (has_v_double()) {
      total_size += 1 + 8;
    }

    // required string v_string = 7 [default = "hi mom\n"];
    if (has_v_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->v_string());
    }

    // required bytes v_bytes = 8 [default = "a \000 character"];
    if (has_v_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->v_bytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DefaultRequiredValues::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DefaultRequiredValues* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DefaultRequiredValues*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DefaultRequiredValues::MergeFrom(const DefaultRequiredValues& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v_int32()) {
      set_v_int32(from.v_int32());
    }
    if (from.has_v_uint32()) {
      set_v_uint32(from.v_uint32());
    }
    if (from.has_v_int64()) {
      set_v_int64(from.v_int64());
    }
    if (from.has_v_uint64()) {
      set_v_uint64(from.v_uint64());
    }
    if (from.has_v_float()) {
      set_v_float(from.v_float());
    }
    if (from.has_v_double()) {
      set_v_double(from.v_double());
    }
    if (from.has_v_string()) {
      set_v_string(from.v_string());
    }
    if (from.has_v_bytes()) {
      set_v_bytes(from.v_bytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DefaultRequiredValues::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefaultRequiredValues::CopyFrom(const DefaultRequiredValues& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultRequiredValues::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void DefaultRequiredValues::Swap(DefaultRequiredValues* other) {
  if (other != this) {
    std::swap(v_int32_, other->v_int32_);
    std::swap(v_uint32_, other->v_uint32_);
    std::swap(v_int64_, other->v_int64_);
    std::swap(v_uint64_, other->v_uint64_);
    std::swap(v_float_, other->v_float_);
    std::swap(v_double_, other->v_double_);
    std::swap(v_string_, other->v_string_);
    std::swap(v_bytes_, other->v_bytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DefaultRequiredValues::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DefaultRequiredValues_descriptor_;
  metadata.reflection = DefaultRequiredValues_reflection_;
  return metadata;
}


// ===================================================================

::std::string* DefaultOptionalValues::_default_v_string_ = NULL;
::std::string* DefaultOptionalValues::_default_v_bytes_ = NULL;
#ifndef _MSC_VER
const int DefaultOptionalValues::kVInt32FieldNumber;
const int DefaultOptionalValues::kVUint32FieldNumber;
const int DefaultOptionalValues::kVInt64FieldNumber;
const int DefaultOptionalValues::kVUint64FieldNumber;
const int DefaultOptionalValues::kVFloatFieldNumber;
const int DefaultOptionalValues::kVDoubleFieldNumber;
const int DefaultOptionalValues::kVStringFieldNumber;
const int DefaultOptionalValues::kVBytesFieldNumber;
#endif  // !_MSC_VER

DefaultOptionalValues::DefaultOptionalValues()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.DefaultOptionalValues)
}

void DefaultOptionalValues::InitAsDefaultInstance() {
}

DefaultOptionalValues::DefaultOptionalValues(const DefaultOptionalValues& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.DefaultOptionalValues)
}

void DefaultOptionalValues::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  v_int32_ = -42;
  v_uint32_ = 666u;
  v_int64_ = 100000;
  v_uint64_ = 100001u;
  v_float_ = 2.5f;
  v_double_ = 4.5;
  v_string_ = const_cast< ::std::string*>(_default_v_string_);
  v_bytes_ = const_cast< ::std::string*>(_default_v_bytes_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DefaultOptionalValues::~DefaultOptionalValues() {
  // @@protoc_insertion_point(destructor:foo.DefaultOptionalValues)
  SharedDtor();
}

void DefaultOptionalValues::SharedDtor() {
  if (v_string_ != _default_v_string_) {
    delete v_string_;
  }
  if (v_bytes_ != _default_v_bytes_) {
    delete v_bytes_;
  }
  if (this != default_instance_) {
  }
}

void DefaultOptionalValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DefaultOptionalValues::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DefaultOptionalValues_descriptor_;
}

const DefaultOptionalValues& DefaultOptionalValues::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

DefaultOptionalValues* DefaultOptionalValues::default_instance_ = NULL;

DefaultOptionalValues* DefaultOptionalValues::New() const {
  return new DefaultOptionalValues;
}

void DefaultOptionalValues::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    v_int32_ = -42;
    v_uint32_ = 666u;
    v_int64_ = 100000;
    v_uint64_ = 100001u;
    v_float_ = 2.5f;
    v_double_ = 4.5;
    if (has_v_string()) {
      if (v_string_ != _default_v_string_) {
        v_string_->assign(*_default_v_string_);
      }
    }
    if (has_v_bytes()) {
      if (v_bytes_ != _default_v_bytes_) {
        v_bytes_->assign(*_default_v_bytes_);
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DefaultOptionalValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.DefaultOptionalValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 v_int32 = 1 [default = -42];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &v_int32_)));
          set_has_v_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_v_uint32;
        break;
      }

      // optional uint32 v_uint32 = 2 [default = 666];
      case 2: {
        if (tag == 16) {
         parse_v_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v_uint32_)));
          set_has_v_uint32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_v_int64;
        break;
      }

      // optional int32 v_int64 = 3 [default = 100000];
      case 3: {
        if (tag == 24) {
         parse_v_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &v_int64_)));
          set_has_v_int64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_v_uint64;
        break;
      }

      // optional uint32 v_uint64 = 4 [default = 100001];
      case 4: {
        if (tag == 32) {
         parse_v_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v_uint64_)));
          set_has_v_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_v_float;
        break;
      }

      // optional float v_float = 5 [default = 2.5];
      case 5: {
        if (tag == 45) {
         parse_v_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_float_)));
          set_has_v_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_v_double;
        break;
      }

      // optional double v_double = 6 [default = 4.5];
      case 6: {
        if (tag == 49) {
         parse_v_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_double_)));
          set_has_v_double();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_v_string;
        break;
      }

      // optional string v_string = 7 [default = "hi mom\n"];
      case 7: {
        if (tag == 58) {
         parse_v_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_v_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->v_string().data(), this->v_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "v_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_v_bytes;
        break;
      }

      // optional bytes v_bytes = 8 [default = "a \000 character"];
      case 8: {
        if (tag == 66) {
         parse_v_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_v_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.DefaultOptionalValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.DefaultOptionalValues)
  return false;
#undef DO_
}

void DefaultOptionalValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.DefaultOptionalValues)
  // optional int32 v_int32 = 1 [default = -42];
  if (has_v_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->v_int32(), output);
  }

  // optional uint32 v_uint32 = 2 [default = 666];
  if (has_v_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->v_uint32(), output);
  }

  // optional int32 v_int64 = 3 [default = 100000];
  if (has_v_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->v_int64(), output);
  }

  // optional uint32 v_uint64 = 4 [default = 100001];
  if (has_v_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->v_uint64(), output);
  }

  // optional float v_float = 5 [default = 2.5];
  if (has_v_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->v_float(), output);
  }

  // optional double v_double = 6 [default = 4.5];
  if (has_v_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->v_double(), output);
  }

  // optional string v_string = 7 [default = "hi mom\n"];
  if (has_v_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->v_string().data(), this->v_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "v_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->v_string(), output);
  }

  // optional bytes v_bytes = 8 [default = "a \000 character"];
  if (has_v_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->v_bytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.DefaultOptionalValues)
}

::google::protobuf::uint8* DefaultOptionalValues::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.DefaultOptionalValues)
  // optional int32 v_int32 = 1 [default = -42];
  if (has_v_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->v_int32(), target);
  }

  // optional uint32 v_uint32 = 2 [default = 666];
  if (has_v_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->v_uint32(), target);
  }

  // optional int32 v_int64 = 3 [default = 100000];
  if (has_v_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->v_int64(), target);
  }

  // optional uint32 v_uint64 = 4 [default = 100001];
  if (has_v_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->v_uint64(), target);
  }

  // optional float v_float = 5 [default = 2.5];
  if (has_v_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->v_float(), target);
  }

  // optional double v_double = 6 [default = 4.5];
  if (has_v_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->v_double(), target);
  }

  // optional string v_string = 7 [default = "hi mom\n"];
  if (has_v_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->v_string().data(), this->v_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "v_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->v_string(), target);
  }

  // optional bytes v_bytes = 8 [default = "a \000 character"];
  if (has_v_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->v_bytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.DefaultOptionalValues)
  return target;
}

int DefaultOptionalValues::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 v_int32 = 1 [default = -42];
    if (has_v_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->v_int32());
    }

    // optional uint32 v_uint32 = 2 [default = 666];
    if (has_v_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v_uint32());
    }

    // optional int32 v_int64 = 3 [default = 100000];
    if (has_v_int64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->v_int64());
    }

    // optional uint32 v_uint64 = 4 [default = 100001];
    if (has_v_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v_uint64());
    }

    // optional float v_float = 5 [default = 2.5];
    if (has_v_float()) {
      total_size += 1 + 4;
    }

    // optional double v_double = 6 [default = 4.5];
    if (has_v_double()) {
      total_size += 1 + 8;
    }

    // optional string v_string = 7 [default = "hi mom\n"];
    if (has_v_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->v_string());
    }

    // optional bytes v_bytes = 8 [default = "a \000 character"];
    if (has_v_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->v_bytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DefaultOptionalValues::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DefaultOptionalValues* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DefaultOptionalValues*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DefaultOptionalValues::MergeFrom(const DefaultOptionalValues& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_v_int32()) {
      set_v_int32(from.v_int32());
    }
    if (from.has_v_uint32()) {
      set_v_uint32(from.v_uint32());
    }
    if (from.has_v_int64()) {
      set_v_int64(from.v_int64());
    }
    if (from.has_v_uint64()) {
      set_v_uint64(from.v_uint64());
    }
    if (from.has_v_float()) {
      set_v_float(from.v_float());
    }
    if (from.has_v_double()) {
      set_v_double(from.v_double());
    }
    if (from.has_v_string()) {
      set_v_string(from.v_string());
    }
    if (from.has_v_bytes()) {
      set_v_bytes(from.v_bytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DefaultOptionalValues::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefaultOptionalValues::CopyFrom(const DefaultOptionalValues& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultOptionalValues::IsInitialized() const {

  return true;
}

void DefaultOptionalValues::Swap(DefaultOptionalValues* other) {
  if (other != this) {
    std::swap(v_int32_, other->v_int32_);
    std::swap(v_uint32_, other->v_uint32_);
    std::swap(v_int64_, other->v_int64_);
    std::swap(v_uint64_, other->v_uint64_);
    std::swap(v_float_, other->v_float_);
    std::swap(v_double_, other->v_double_);
    std::swap(v_string_, other->v_string_);
    std::swap(v_bytes_, other->v_bytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DefaultOptionalValues::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DefaultOptionalValues_descriptor_;
  metadata.reflection = DefaultOptionalValues_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* LowerCase_CaseEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LowerCase_CaseEnum_descriptor_;
}
bool LowerCase_CaseEnum_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const LowerCase_CaseEnum LowerCase::UPPER;
const LowerCase_CaseEnum LowerCase::lower;
const LowerCase_CaseEnum LowerCase::CaseEnum_MIN;
const LowerCase_CaseEnum LowerCase::CaseEnum_MAX;
const int LowerCase::CaseEnum_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int LowerCase::kValueFieldNumber;
#endif  // !_MSC_VER

LowerCase::LowerCase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.LowerCase)
}

void LowerCase::InitAsDefaultInstance() {
}

LowerCase::LowerCase(const LowerCase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.LowerCase)
}

void LowerCase::SharedCtor() {
  _cached_size_ = 0;
  value_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LowerCase::~LowerCase() {
  // @@protoc_insertion_point(destructor:foo.LowerCase)
  SharedDtor();
}

void LowerCase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LowerCase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LowerCase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LowerCase_descriptor_;
}

const LowerCase& LowerCase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

LowerCase* LowerCase::default_instance_ = NULL;

LowerCase* LowerCase::New() const {
  return new LowerCase;
}

void LowerCase::Clear() {
  value_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LowerCase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.LowerCase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .foo.LowerCase.CaseEnum value = 1 [default = lower];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::foo::LowerCase_CaseEnum_IsValid(value)) {
            set_value(static_cast< ::foo::LowerCase_CaseEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.LowerCase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.LowerCase)
  return false;
#undef DO_
}

void LowerCase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.LowerCase)
  // optional .foo.LowerCase.CaseEnum value = 1 [default = lower];
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.LowerCase)
}

::google::protobuf::uint8* LowerCase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.LowerCase)
  // optional .foo.LowerCase.CaseEnum value = 1 [default = lower];
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.LowerCase)
  return target;
}

int LowerCase::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .foo.LowerCase.CaseEnum value = 1 [default = lower];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LowerCase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LowerCase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LowerCase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LowerCase::MergeFrom(const LowerCase& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LowerCase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LowerCase::CopyFrom(const LowerCase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LowerCase::IsInitialized() const {

  return true;
}

void LowerCase::Swap(LowerCase* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LowerCase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LowerCase_descriptor_;
  metadata.reflection = LowerCase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AllocValues::kOBytesFieldNumber;
const int AllocValues::kRStringFieldNumber;
const int AllocValues::kAStringFieldNumber;
const int AllocValues::kABytesFieldNumber;
const int AllocValues::kAMessFieldNumber;
#endif  // !_MSC_VER

AllocValues::AllocValues()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.AllocValues)
}

void AllocValues::InitAsDefaultInstance() {
  a_mess_ = const_cast< ::foo::DefaultRequiredValues*>(&::foo::DefaultRequiredValues::default_instance());
}

AllocValues::AllocValues(const AllocValues& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.AllocValues)
}

void AllocValues::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  o_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_mess_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllocValues::~AllocValues() {
  // @@protoc_insertion_point(destructor:foo.AllocValues)
  SharedDtor();
}

void AllocValues::SharedDtor() {
  if (o_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete o_bytes_;
  }
  if (a_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete a_string_;
  }
  if (a_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete a_bytes_;
  }
  if (this != default_instance_) {
    delete a_mess_;
  }
}

void AllocValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocValues::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllocValues_descriptor_;
}

const AllocValues& AllocValues::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

AllocValues* AllocValues::default_instance_ = NULL;

AllocValues* AllocValues::New() const {
  return new AllocValues;
}

void AllocValues::Clear() {
  if (_has_bits_[0 / 32] & 29) {
    if (has_o_bytes()) {
      if (o_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        o_bytes_->clear();
      }
    }
    if (has_a_string()) {
      if (a_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        a_string_->clear();
      }
    }
    if (has_a_bytes()) {
      if (a_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        a_bytes_->clear();
      }
    }
    if (has_a_mess()) {
      if (a_mess_ != NULL) a_mess_->::foo::DefaultRequiredValues::Clear();
    }
  }
  r_string_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllocValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.AllocValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes o_bytes = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_o_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_r_string;
        break;
      }

      // repeated string r_string = 2;
      case 2: {
        if (tag == 18) {
         parse_r_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_r_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->r_string(this->r_string_size() - 1).data(),
            this->r_string(this->r_string_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "r_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_r_string;
        if (input->ExpectTag(26)) goto parse_a_string;
        break;
      }

      // required string a_string = 3;
      case 3: {
        if (tag == 26) {
         parse_a_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a_string().data(), this->a_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "a_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_a_bytes;
        break;
      }

      // required bytes a_bytes = 4;
      case 4: {
        if (tag == 34) {
         parse_a_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_a_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_a_mess;
        break;
      }

      // required .foo.DefaultRequiredValues a_mess = 5;
      case 5: {
        if (tag == 42) {
         parse_a_mess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_a_mess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.AllocValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.AllocValues)
  return false;
#undef DO_
}

void AllocValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.AllocValues)
  // optional bytes o_bytes = 1;
  if (has_o_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->o_bytes(), output);
  }

  // repeated string r_string = 2;
  for (int i = 0; i < this->r_string_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->r_string(i).data(), this->r_string(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "r_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->r_string(i), output);
  }

  // required string a_string = 3;
  if (has_a_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a_string().data(), this->a_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "a_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->a_string(), output);
  }

  // required bytes a_bytes = 4;
  if (has_a_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->a_bytes(), output);
  }

  // required .foo.DefaultRequiredValues a_mess = 5;
  if (has_a_mess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->a_mess(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.AllocValues)
}

::google::protobuf::uint8* AllocValues::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.AllocValues)
  // optional bytes o_bytes = 1;
  if (has_o_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->o_bytes(), target);
  }

  // repeated string r_string = 2;
  for (int i = 0; i < this->r_string_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->r_string(i).data(), this->r_string(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "r_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->r_string(i), target);
  }

  // required string a_string = 3;
  if (has_a_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a_string().data(), this->a_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "a_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->a_string(), target);
  }

  // required bytes a_bytes = 4;
  if (has_a_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->a_bytes(), target);
  }

  // required .foo.DefaultRequiredValues a_mess = 5;
  if (has_a_mess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->a_mess(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.AllocValues)
  return target;
}

int AllocValues::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes o_bytes = 1;
    if (has_o_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->o_bytes());
    }

    // required string a_string = 3;
    if (has_a_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->a_string());
    }

    // required bytes a_bytes = 4;
    if (has_a_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->a_bytes());
    }

    // required .foo.DefaultRequiredValues a_mess = 5;
    if (has_a_mess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->a_mess());
    }

  }
  // repeated string r_string = 2;
  total_size += 1 * this->r_string_size();
  for (int i = 0; i < this->r_string_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->r_string(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocValues::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllocValues* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllocValues*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllocValues::MergeFrom(const AllocValues& from) {
  GOOGLE_CHECK_NE(&from, this);
  r_string_.MergeFrom(from.r_string_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_o_bytes()) {
      set_o_bytes(from.o_bytes());
    }
    if (from.has_a_string()) {
      set_a_string(from.a_string());
    }
    if (from.has_a_bytes()) {
      set_a_bytes(from.a_bytes());
    }
    if (from.has_a_mess()) {
      mutable_a_mess()->::foo::DefaultRequiredValues::MergeFrom(from.a_mess());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllocValues::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocValues::CopyFrom(const AllocValues& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocValues::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;

  if (has_a_mess()) {
    if (!this->a_mess().IsInitialized()) return false;
  }
  return true;
}

void AllocValues::Swap(AllocValues* other) {
  if (other != this) {
    std::swap(o_bytes_, other->o_bytes_);
    r_string_.Swap(&other->r_string_);
    std::swap(a_string_, other->a_string_);
    std::swap(a_bytes_, other->a_bytes_);
    std::swap(a_mess_, other->a_mess_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllocValues::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllocValues_descriptor_;
  metadata.reflection = AllocValues_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestRequiredFieldsBitmap::kField1FieldNumber;
const int TestRequiredFieldsBitmap::kField2FieldNumber;
const int TestRequiredFieldsBitmap::kField3FieldNumber;
const int TestRequiredFieldsBitmap::kField4FieldNumber;
const int TestRequiredFieldsBitmap::kField5FieldNumber;
const int TestRequiredFieldsBitmap::kField6FieldNumber;
const int TestRequiredFieldsBitmap::kField7FieldNumber;
const int TestRequiredFieldsBitmap::kField8FieldNumber;
const int TestRequiredFieldsBitmap::kField9FieldNumber;
const int TestRequiredFieldsBitmap::kField10FieldNumber;
const int TestRequiredFieldsBitmap::kField11FieldNumber;
const int TestRequiredFieldsBitmap::kField12FieldNumber;
const int TestRequiredFieldsBitmap::kField13FieldNumber;
const int TestRequiredFieldsBitmap::kField14FieldNumber;
const int TestRequiredFieldsBitmap::kField15FieldNumber;
const int TestRequiredFieldsBitmap::kField16FieldNumber;
const int TestRequiredFieldsBitmap::kField17FieldNumber;
const int TestRequiredFieldsBitmap::kField18FieldNumber;
const int TestRequiredFieldsBitmap::kField19FieldNumber;
const int TestRequiredFieldsBitmap::kField20FieldNumber;
const int TestRequiredFieldsBitmap::kField21FieldNumber;
const int TestRequiredFieldsBitmap::kField22FieldNumber;
const int TestRequiredFieldsBitmap::kField23FieldNumber;
const int TestRequiredFieldsBitmap::kField24FieldNumber;
const int TestRequiredFieldsBitmap::kField25FieldNumber;
const int TestRequiredFieldsBitmap::kField26FieldNumber;
const int TestRequiredFieldsBitmap::kField27FieldNumber;
const int TestRequiredFieldsBitmap::kField28FieldNumber;
const int TestRequiredFieldsBitmap::kField29FieldNumber;
const int TestRequiredFieldsBitmap::kField30FieldNumber;
const int TestRequiredFieldsBitmap::kField31FieldNumber;
const int TestRequiredFieldsBitmap::kField32FieldNumber;
const int TestRequiredFieldsBitmap::kField33FieldNumber;
const int TestRequiredFieldsBitmap::kField34FieldNumber;
const int TestRequiredFieldsBitmap::kField35FieldNumber;
const int TestRequiredFieldsBitmap::kField36FieldNumber;
const int TestRequiredFieldsBitmap::kField37FieldNumber;
const int TestRequiredFieldsBitmap::kField38FieldNumber;
const int TestRequiredFieldsBitmap::kField39FieldNumber;
const int TestRequiredFieldsBitmap::kField40FieldNumber;
const int TestRequiredFieldsBitmap::kField41FieldNumber;
const int TestRequiredFieldsBitmap::kField42FieldNumber;
const int TestRequiredFieldsBitmap::kField43FieldNumber;
const int TestRequiredFieldsBitmap::kField44FieldNumber;
const int TestRequiredFieldsBitmap::kField45FieldNumber;
const int TestRequiredFieldsBitmap::kField46FieldNumber;
const int TestRequiredFieldsBitmap::kField47FieldNumber;
const int TestRequiredFieldsBitmap::kField48FieldNumber;
const int TestRequiredFieldsBitmap::kField49FieldNumber;
const int TestRequiredFieldsBitmap::kField50FieldNumber;
const int TestRequiredFieldsBitmap::kField51FieldNumber;
const int TestRequiredFieldsBitmap::kField52FieldNumber;
const int TestRequiredFieldsBitmap::kField53FieldNumber;
const int TestRequiredFieldsBitmap::kField54FieldNumber;
const int TestRequiredFieldsBitmap::kField55FieldNumber;
const int TestRequiredFieldsBitmap::kField56FieldNumber;
const int TestRequiredFieldsBitmap::kField57FieldNumber;
const int TestRequiredFieldsBitmap::kField58FieldNumber;
const int TestRequiredFieldsBitmap::kField59FieldNumber;
const int TestRequiredFieldsBitmap::kField60FieldNumber;
const int TestRequiredFieldsBitmap::kField61FieldNumber;
const int TestRequiredFieldsBitmap::kField62FieldNumber;
const int TestRequiredFieldsBitmap::kField63FieldNumber;
const int TestRequiredFieldsBitmap::kField64FieldNumber;
const int TestRequiredFieldsBitmap::kField65FieldNumber;
const int TestRequiredFieldsBitmap::kField66FieldNumber;
const int TestRequiredFieldsBitmap::kField67FieldNumber;
const int TestRequiredFieldsBitmap::kField68FieldNumber;
const int TestRequiredFieldsBitmap::kField69FieldNumber;
const int TestRequiredFieldsBitmap::kField70FieldNumber;
const int TestRequiredFieldsBitmap::kField71FieldNumber;
const int TestRequiredFieldsBitmap::kField72FieldNumber;
const int TestRequiredFieldsBitmap::kField73FieldNumber;
const int TestRequiredFieldsBitmap::kField74FieldNumber;
const int TestRequiredFieldsBitmap::kField75FieldNumber;
const int TestRequiredFieldsBitmap::kField76FieldNumber;
const int TestRequiredFieldsBitmap::kField77FieldNumber;
const int TestRequiredFieldsBitmap::kField78FieldNumber;
const int TestRequiredFieldsBitmap::kField79FieldNumber;
const int TestRequiredFieldsBitmap::kField80FieldNumber;
const int TestRequiredFieldsBitmap::kField81FieldNumber;
const int TestRequiredFieldsBitmap::kField82FieldNumber;
const int TestRequiredFieldsBitmap::kField83FieldNumber;
const int TestRequiredFieldsBitmap::kField84FieldNumber;
const int TestRequiredFieldsBitmap::kField85FieldNumber;
const int TestRequiredFieldsBitmap::kField86FieldNumber;
const int TestRequiredFieldsBitmap::kField87FieldNumber;
const int TestRequiredFieldsBitmap::kField88FieldNumber;
const int TestRequiredFieldsBitmap::kField89FieldNumber;
const int TestRequiredFieldsBitmap::kField90FieldNumber;
const int TestRequiredFieldsBitmap::kField91FieldNumber;
const int TestRequiredFieldsBitmap::kField92FieldNumber;
const int TestRequiredFieldsBitmap::kField93FieldNumber;
const int TestRequiredFieldsBitmap::kField94FieldNumber;
const int TestRequiredFieldsBitmap::kField95FieldNumber;
const int TestRequiredFieldsBitmap::kField96FieldNumber;
const int TestRequiredFieldsBitmap::kField97FieldNumber;
const int TestRequiredFieldsBitmap::kField98FieldNumber;
const int TestRequiredFieldsBitmap::kField99FieldNumber;
const int TestRequiredFieldsBitmap::kField100FieldNumber;
const int TestRequiredFieldsBitmap::kField101FieldNumber;
const int TestRequiredFieldsBitmap::kField102FieldNumber;
const int TestRequiredFieldsBitmap::kField103FieldNumber;
const int TestRequiredFieldsBitmap::kField104FieldNumber;
const int TestRequiredFieldsBitmap::kField105FieldNumber;
const int TestRequiredFieldsBitmap::kField106FieldNumber;
const int TestRequiredFieldsBitmap::kField107FieldNumber;
const int TestRequiredFieldsBitmap::kField108FieldNumber;
const int TestRequiredFieldsBitmap::kField109FieldNumber;
const int TestRequiredFieldsBitmap::kField110FieldNumber;
const int TestRequiredFieldsBitmap::kField111FieldNumber;
const int TestRequiredFieldsBitmap::kField112FieldNumber;
const int TestRequiredFieldsBitmap::kField113FieldNumber;
const int TestRequiredFieldsBitmap::kField114FieldNumber;
const int TestRequiredFieldsBitmap::kField115FieldNumber;
const int TestRequiredFieldsBitmap::kField116FieldNumber;
const int TestRequiredFieldsBitmap::kField117FieldNumber;
const int TestRequiredFieldsBitmap::kField118FieldNumber;
const int TestRequiredFieldsBitmap::kField119FieldNumber;
const int TestRequiredFieldsBitmap::kField120FieldNumber;
const int TestRequiredFieldsBitmap::kField121FieldNumber;
const int TestRequiredFieldsBitmap::kField122FieldNumber;
const int TestRequiredFieldsBitmap::kField123FieldNumber;
const int TestRequiredFieldsBitmap::kField124FieldNumber;
const int TestRequiredFieldsBitmap::kField125FieldNumber;
const int TestRequiredFieldsBitmap::kField126FieldNumber;
const int TestRequiredFieldsBitmap::kField127FieldNumber;
const int TestRequiredFieldsBitmap::kField128FieldNumber;
const int TestRequiredFieldsBitmap::kField129FieldNumber;
#endif  // !_MSC_VER

TestRequiredFieldsBitmap::TestRequiredFieldsBitmap()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestRequiredFieldsBitmap)
}

void TestRequiredFieldsBitmap::InitAsDefaultInstance() {
}

TestRequiredFieldsBitmap::TestRequiredFieldsBitmap(const TestRequiredFieldsBitmap& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestRequiredFieldsBitmap)
}

void TestRequiredFieldsBitmap::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field3_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field4_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field6_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field7_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field8_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field9_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field10_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field11_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field12_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field13_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field14_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field15_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field16_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field17_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field18_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field19_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field20_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field21_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field22_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field23_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field24_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field25_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field26_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field27_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field28_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field29_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field30_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field31_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field32_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field33_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field34_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field35_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field36_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field37_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field38_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field39_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field40_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field41_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field42_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field43_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field44_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field45_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field46_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field47_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field48_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field49_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field50_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field51_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field52_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field53_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field54_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field55_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field56_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field57_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field58_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field59_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field60_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field61_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field62_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field63_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field64_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field65_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field66_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field67_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field68_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field69_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field70_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field71_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field72_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field73_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field74_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field75_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field76_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field77_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field78_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field79_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field80_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field81_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field82_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field83_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field84_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field85_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field86_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field87_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field88_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field89_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field90_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field91_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field92_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field93_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field94_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field95_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field96_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field97_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field98_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field99_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field100_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field101_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field102_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field103_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field104_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field105_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field106_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field107_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field108_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field109_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field110_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field111_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field112_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field113_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field114_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field115_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field116_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field117_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field118_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field119_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field120_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field121_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field122_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field123_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field124_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field125_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field126_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field127_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field128_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field129_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestRequiredFieldsBitmap::~TestRequiredFieldsBitmap() {
  // @@protoc_insertion_point(destructor:foo.TestRequiredFieldsBitmap)
  SharedDtor();
}

void TestRequiredFieldsBitmap::SharedDtor() {
  if (field1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field1_;
  }
  if (field2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field2_;
  }
  if (field3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field3_;
  }
  if (field4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field4_;
  }
  if (field5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field5_;
  }
  if (field6_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field6_;
  }
  if (field7_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field7_;
  }
  if (field8_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field8_;
  }
  if (field9_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field9_;
  }
  if (field10_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field10_;
  }
  if (field11_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field11_;
  }
  if (field12_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field12_;
  }
  if (field13_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field13_;
  }
  if (field14_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field14_;
  }
  if (field15_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field15_;
  }
  if (field16_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field16_;
  }
  if (field17_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field17_;
  }
  if (field18_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field18_;
  }
  if (field19_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field19_;
  }
  if (field20_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field20_;
  }
  if (field21_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field21_;
  }
  if (field22_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field22_;
  }
  if (field23_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field23_;
  }
  if (field24_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field24_;
  }
  if (field25_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field25_;
  }
  if (field26_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field26_;
  }
  if (field27_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field27_;
  }
  if (field28_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field28_;
  }
  if (field29_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field29_;
  }
  if (field30_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field30_;
  }
  if (field31_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field31_;
  }
  if (field32_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field32_;
  }
  if (field33_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field33_;
  }
  if (field34_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field34_;
  }
  if (field35_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field35_;
  }
  if (field36_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field36_;
  }
  if (field37_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field37_;
  }
  if (field38_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field38_;
  }
  if (field39_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field39_;
  }
  if (field40_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field40_;
  }
  if (field41_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field41_;
  }
  if (field42_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field42_;
  }
  if (field43_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field43_;
  }
  if (field44_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field44_;
  }
  if (field45_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field45_;
  }
  if (field46_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field46_;
  }
  if (field47_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field47_;
  }
  if (field48_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field48_;
  }
  if (field49_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field49_;
  }
  if (field50_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field50_;
  }
  if (field51_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field51_;
  }
  if (field52_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field52_;
  }
  if (field53_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field53_;
  }
  if (field54_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field54_;
  }
  if (field55_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field55_;
  }
  if (field56_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field56_;
  }
  if (field57_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field57_;
  }
  if (field58_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field58_;
  }
  if (field59_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field59_;
  }
  if (field60_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field60_;
  }
  if (field61_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field61_;
  }
  if (field62_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field62_;
  }
  if (field63_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field63_;
  }
  if (field64_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field64_;
  }
  if (field65_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field65_;
  }
  if (field66_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field66_;
  }
  if (field67_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field67_;
  }
  if (field68_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field68_;
  }
  if (field69_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field69_;
  }
  if (field70_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field70_;
  }
  if (field71_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field71_;
  }
  if (field72_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field72_;
  }
  if (field73_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field73_;
  }
  if (field74_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field74_;
  }
  if (field75_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field75_;
  }
  if (field76_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field76_;
  }
  if (field77_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field77_;
  }
  if (field78_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field78_;
  }
  if (field79_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field79_;
  }
  if (field80_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field80_;
  }
  if (field81_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field81_;
  }
  if (field82_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field82_;
  }
  if (field83_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field83_;
  }
  if (field84_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field84_;
  }
  if (field85_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field85_;
  }
  if (field86_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field86_;
  }
  if (field87_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field87_;
  }
  if (field88_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field88_;
  }
  if (field89_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field89_;
  }
  if (field90_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field90_;
  }
  if (field91_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field91_;
  }
  if (field92_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field92_;
  }
  if (field93_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field93_;
  }
  if (field94_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field94_;
  }
  if (field95_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field95_;
  }
  if (field96_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field96_;
  }
  if (field97_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field97_;
  }
  if (field98_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field98_;
  }
  if (field99_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field99_;
  }
  if (field100_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field100_;
  }
  if (field101_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field101_;
  }
  if (field102_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field102_;
  }
  if (field103_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field103_;
  }
  if (field104_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field104_;
  }
  if (field105_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field105_;
  }
  if (field106_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field106_;
  }
  if (field107_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field107_;
  }
  if (field108_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field108_;
  }
  if (field109_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field109_;
  }
  if (field110_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field110_;
  }
  if (field111_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field111_;
  }
  if (field112_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field112_;
  }
  if (field113_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field113_;
  }
  if (field114_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field114_;
  }
  if (field115_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field115_;
  }
  if (field116_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field116_;
  }
  if (field117_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field117_;
  }
  if (field118_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field118_;
  }
  if (field119_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field119_;
  }
  if (field120_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field120_;
  }
  if (field121_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field121_;
  }
  if (field122_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field122_;
  }
  if (field123_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field123_;
  }
  if (field124_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field124_;
  }
  if (field125_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field125_;
  }
  if (field126_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field126_;
  }
  if (field127_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field127_;
  }
  if (field128_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field128_;
  }
  if (field129_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field129_;
  }
  if (this != default_instance_) {
  }
}

void TestRequiredFieldsBitmap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestRequiredFieldsBitmap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestRequiredFieldsBitmap_descriptor_;
}

const TestRequiredFieldsBitmap& TestRequiredFieldsBitmap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestRequiredFieldsBitmap* TestRequiredFieldsBitmap::default_instance_ = NULL;

TestRequiredFieldsBitmap* TestRequiredFieldsBitmap::New() const {
  return new TestRequiredFieldsBitmap;
}

void TestRequiredFieldsBitmap::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_field1()) {
      if (field1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field1_->clear();
      }
    }
    if (has_field2()) {
      if (field2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field2_->clear();
      }
    }
    if (has_field3()) {
      if (field3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field3_->clear();
      }
    }
    if (has_field4()) {
      if (field4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field4_->clear();
      }
    }
    if (has_field5()) {
      if (field5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field5_->clear();
      }
    }
    if (has_field6()) {
      if (field6_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field6_->clear();
      }
    }
    if (has_field7()) {
      if (field7_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field7_->clear();
      }
    }
    if (has_field8()) {
      if (field8_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field8_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_field9()) {
      if (field9_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field9_->clear();
      }
    }
    if (has_field10()) {
      if (field10_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field10_->clear();
      }
    }
    if (has_field11()) {
      if (field11_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field11_->clear();
      }
    }
    if (has_field12()) {
      if (field12_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field12_->clear();
      }
    }
    if (has_field13()) {
      if (field13_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field13_->clear();
      }
    }
    if (has_field14()) {
      if (field14_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field14_->clear();
      }
    }
    if (has_field15()) {
      if (field15_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field15_->clear();
      }
    }
    if (has_field16()) {
      if (field16_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field16_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 16711680) {
    if (has_field17()) {
      if (field17_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field17_->clear();
      }
    }
    if (has_field18()) {
      if (field18_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field18_->clear();
      }
    }
    if (has_field19()) {
      if (field19_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field19_->clear();
      }
    }
    if (has_field20()) {
      if (field20_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field20_->clear();
      }
    }
    if (has_field21()) {
      if (field21_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field21_->clear();
      }
    }
    if (has_field22()) {
      if (field22_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field22_->clear();
      }
    }
    if (has_field23()) {
      if (field23_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field23_->clear();
      }
    }
    if (has_field24()) {
      if (field24_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field24_->clear();
      }
    }
  }
  if (_has_bits_[24 / 32] & 4278190080) {
    if (has_field25()) {
      if (field25_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field25_->clear();
      }
    }
    if (has_field26()) {
      if (field26_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field26_->clear();
      }
    }
    if (has_field27()) {
      if (field27_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field27_->clear();
      }
    }
    if (has_field28()) {
      if (field28_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field28_->clear();
      }
    }
    if (has_field29()) {
      if (field29_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field29_->clear();
      }
    }
    if (has_field30()) {
      if (field30_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field30_->clear();
      }
    }
    if (has_field31()) {
      if (field31_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field31_->clear();
      }
    }
    if (has_field32()) {
      if (field32_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field32_->clear();
      }
    }
  }
  if (_has_bits_[32 / 32] & 255) {
    if (has_field33()) {
      if (field33_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field33_->clear();
      }
    }
    if (has_field34()) {
      if (field34_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field34_->clear();
      }
    }
    if (has_field35()) {
      if (field35_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field35_->clear();
      }
    }
    if (has_field36()) {
      if (field36_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field36_->clear();
      }
    }
    if (has_field37()) {
      if (field37_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field37_->clear();
      }
    }
    if (has_field38()) {
      if (field38_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field38_->clear();
      }
    }
    if (has_field39()) {
      if (field39_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field39_->clear();
      }
    }
    if (has_field40()) {
      if (field40_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field40_->clear();
      }
    }
  }
  if (_has_bits_[40 / 32] & 65280) {
    if (has_field41()) {
      if (field41_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field41_->clear();
      }
    }
    if (has_field42()) {
      if (field42_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field42_->clear();
      }
    }
    if (has_field43()) {
      if (field43_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field43_->clear();
      }
    }
    if (has_field44()) {
      if (field44_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field44_->clear();
      }
    }
    if (has_field45()) {
      if (field45_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field45_->clear();
      }
    }
    if (has_field46()) {
      if (field46_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field46_->clear();
      }
    }
    if (has_field47()) {
      if (field47_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field47_->clear();
      }
    }
    if (has_field48()) {
      if (field48_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field48_->clear();
      }
    }
  }
  if (_has_bits_[48 / 32] & 16711680) {
    if (has_field49()) {
      if (field49_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field49_->clear();
      }
    }
    if (has_field50()) {
      if (field50_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field50_->clear();
      }
    }
    if (has_field51()) {
      if (field51_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field51_->clear();
      }
    }
    if (has_field52()) {
      if (field52_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field52_->clear();
      }
    }
    if (has_field53()) {
      if (field53_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field53_->clear();
      }
    }
    if (has_field54()) {
      if (field54_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field54_->clear();
      }
    }
    if (has_field55()) {
      if (field55_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field55_->clear();
      }
    }
    if (has_field56()) {
      if (field56_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field56_->clear();
      }
    }
  }
  if (_has_bits_[56 / 32] & 4278190080) {
    if (has_field57()) {
      if (field57_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field57_->clear();
      }
    }
    if (has_field58()) {
      if (field58_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field58_->clear();
      }
    }
    if (has_field59()) {
      if (field59_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field59_->clear();
      }
    }
    if (has_field60()) {
      if (field60_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field60_->clear();
      }
    }
    if (has_field61()) {
      if (field61_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field61_->clear();
      }
    }
    if (has_field62()) {
      if (field62_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field62_->clear();
      }
    }
    if (has_field63()) {
      if (field63_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field63_->clear();
      }
    }
    if (has_field64()) {
      if (field64_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field64_->clear();
      }
    }
  }
  if (_has_bits_[64 / 32] & 255) {
    if (has_field65()) {
      if (field65_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field65_->clear();
      }
    }
    if (has_field66()) {
      if (field66_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field66_->clear();
      }
    }
    if (has_field67()) {
      if (field67_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field67_->clear();
      }
    }
    if (has_field68()) {
      if (field68_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field68_->clear();
      }
    }
    if (has_field69()) {
      if (field69_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field69_->clear();
      }
    }
    if (has_field70()) {
      if (field70_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field70_->clear();
      }
    }
    if (has_field71()) {
      if (field71_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field71_->clear();
      }
    }
    if (has_field72()) {
      if (field72_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field72_->clear();
      }
    }
  }
  if (_has_bits_[72 / 32] & 65280) {
    if (has_field73()) {
      if (field73_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field73_->clear();
      }
    }
    if (has_field74()) {
      if (field74_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field74_->clear();
      }
    }
    if (has_field75()) {
      if (field75_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field75_->clear();
      }
    }
    if (has_field76()) {
      if (field76_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field76_->clear();
      }
    }
    if (has_field77()) {
      if (field77_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field77_->clear();
      }
    }
    if (has_field78()) {
      if (field78_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field78_->clear();
      }
    }
    if (has_field79()) {
      if (field79_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field79_->clear();
      }
    }
    if (has_field80()) {
      if (field80_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field80_->clear();
      }
    }
  }
  if (_has_bits_[80 / 32] & 16711680) {
    if (has_field81()) {
      if (field81_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field81_->clear();
      }
    }
    if (has_field82()) {
      if (field82_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field82_->clear();
      }
    }
    if (has_field83()) {
      if (field83_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field83_->clear();
      }
    }
    if (has_field84()) {
      if (field84_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field84_->clear();
      }
    }
    if (has_field85()) {
      if (field85_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field85_->clear();
      }
    }
    if (has_field86()) {
      if (field86_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field86_->clear();
      }
    }
    if (has_field87()) {
      if (field87_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field87_->clear();
      }
    }
    if (has_field88()) {
      if (field88_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field88_->clear();
      }
    }
  }
  if (_has_bits_[88 / 32] & 4278190080) {
    if (has_field89()) {
      if (field89_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field89_->clear();
      }
    }
    if (has_field90()) {
      if (field90_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field90_->clear();
      }
    }
    if (has_field91()) {
      if (field91_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field91_->clear();
      }
    }
    if (has_field92()) {
      if (field92_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field92_->clear();
      }
    }
    if (has_field93()) {
      if (field93_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field93_->clear();
      }
    }
    if (has_field94()) {
      if (field94_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field94_->clear();
      }
    }
    if (has_field95()) {
      if (field95_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field95_->clear();
      }
    }
    if (has_field96()) {
      if (field96_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field96_->clear();
      }
    }
  }
  if (_has_bits_[96 / 32] & 255) {
    if (has_field97()) {
      if (field97_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field97_->clear();
      }
    }
    if (has_field98()) {
      if (field98_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field98_->clear();
      }
    }
    if (has_field99()) {
      if (field99_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field99_->clear();
      }
    }
    if (has_field100()) {
      if (field100_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field100_->clear();
      }
    }
    if (has_field101()) {
      if (field101_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field101_->clear();
      }
    }
    if (has_field102()) {
      if (field102_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field102_->clear();
      }
    }
    if (has_field103()) {
      if (field103_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field103_->clear();
      }
    }
    if (has_field104()) {
      if (field104_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field104_->clear();
      }
    }
  }
  if (_has_bits_[104 / 32] & 65280) {
    if (has_field105()) {
      if (field105_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field105_->clear();
      }
    }
    if (has_field106()) {
      if (field106_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field106_->clear();
      }
    }
    if (has_field107()) {
      if (field107_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field107_->clear();
      }
    }
    if (has_field108()) {
      if (field108_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field108_->clear();
      }
    }
    if (has_field109()) {
      if (field109_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field109_->clear();
      }
    }
    if (has_field110()) {
      if (field110_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field110_->clear();
      }
    }
    if (has_field111()) {
      if (field111_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field111_->clear();
      }
    }
    if (has_field112()) {
      if (field112_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field112_->clear();
      }
    }
  }
  if (_has_bits_[112 / 32] & 16711680) {
    if (has_field113()) {
      if (field113_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field113_->clear();
      }
    }
    if (has_field114()) {
      if (field114_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field114_->clear();
      }
    }
    if (has_field115()) {
      if (field115_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field115_->clear();
      }
    }
    if (has_field116()) {
      if (field116_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field116_->clear();
      }
    }
    if (has_field117()) {
      if (field117_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field117_->clear();
      }
    }
    if (has_field118()) {
      if (field118_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field118_->clear();
      }
    }
    if (has_field119()) {
      if (field119_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field119_->clear();
      }
    }
    if (has_field120()) {
      if (field120_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field120_->clear();
      }
    }
  }
  if (_has_bits_[120 / 32] & 4278190080) {
    if (has_field121()) {
      if (field121_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field121_->clear();
      }
    }
    if (has_field122()) {
      if (field122_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field122_->clear();
      }
    }
    if (has_field123()) {
      if (field123_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field123_->clear();
      }
    }
    if (has_field124()) {
      if (field124_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field124_->clear();
      }
    }
    if (has_field125()) {
      if (field125_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field125_->clear();
      }
    }
    if (has_field126()) {
      if (field126_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field126_->clear();
      }
    }
    if (has_field127()) {
      if (field127_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field127_->clear();
      }
    }
    if (has_field128()) {
      if (field128_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field128_->clear();
      }
    }
  }
  if (has_field129()) {
    if (field129_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      field129_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestRequiredFieldsBitmap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestRequiredFieldsBitmap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string field1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field1().data(), this->field1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field2;
        break;
      }

      // optional string field2 = 2;
      case 2: {
        if (tag == 18) {
         parse_field2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field2().data(), this->field2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_field3;
        break;
      }

      // optional string field3 = 3;
      case 3: {
        if (tag == 26) {
         parse_field3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field3().data(), this->field3().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field3");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_field4;
        break;
      }

      // optional string field4 = 4;
      case 4: {
        if (tag == 34) {
         parse_field4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field4().data(), this->field4().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field4");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_field5;
        break;
      }

      // optional string field5 = 5;
      case 5: {
        if (tag == 42) {
         parse_field5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field5().data(), this->field5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field5");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_field6;
        break;
      }

      // optional string field6 = 6;
      case 6: {
        if (tag == 50) {
         parse_field6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field6().data(), this->field6().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field6");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_field7;
        break;
      }

      // optional string field7 = 7;
      case 7: {
        if (tag == 58) {
         parse_field7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field7()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field7().data(), this->field7().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field7");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_field8;
        break;
      }

      // optional string field8 = 8;
      case 8: {
        if (tag == 66) {
         parse_field8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field8()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field8().data(), this->field8().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field8");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_field9;
        break;
      }

      // optional string field9 = 9;
      case 9: {
        if (tag == 74) {
         parse_field9:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field9()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field9().data(), this->field9().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field9");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_field10;
        break;
      }

      // optional string field10 = 10;
      case 10: {
        if (tag == 82) {
         parse_field10:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field10()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field10().data(), this->field10().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field10");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_field11;
        break;
      }

      // optional string field11 = 11;
      case 11: {
        if (tag == 90) {
         parse_field11:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field11()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field11().data(), this->field11().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field11");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_field12;
        break;
      }

      // optional string field12 = 12;
      case 12: {
        if (tag == 98) {
         parse_field12:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field12()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field12().data(), this->field12().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field12");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_field13;
        break;
      }

      // optional string field13 = 13;
      case 13: {
        if (tag == 106) {
         parse_field13:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field13()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field13().data(), this->field13().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field13");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_field14;
        break;
      }

      // optional string field14 = 14;
      case 14: {
        if (tag == 114) {
         parse_field14:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field14()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field14().data(), this->field14().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field14");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_field15;
        break;
      }

      // optional string field15 = 15;
      case 15: {
        if (tag == 122) {
         parse_field15:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field15()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field15().data(), this->field15().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field15");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_field16;
        break;
      }

      // optional string field16 = 16;
      case 16: {
        if (tag == 130) {
         parse_field16:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field16()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field16().data(), this->field16().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field16");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_field17;
        break;
      }

      // optional string field17 = 17;
      case 17: {
        if (tag == 138) {
         parse_field17:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field17()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field17().data(), this->field17().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field17");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_field18;
        break;
      }

      // optional string field18 = 18;
      case 18: {
        if (tag == 146) {
         parse_field18:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field18()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field18().data(), this->field18().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field18");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_field19;
        break;
      }

      // optional string field19 = 19;
      case 19: {
        if (tag == 154) {
         parse_field19:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field19()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field19().data(), this->field19().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field19");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_field20;
        break;
      }

      // optional string field20 = 20;
      case 20: {
        if (tag == 162) {
         parse_field20:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field20()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field20().data(), this->field20().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field20");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_field21;
        break;
      }

      // optional string field21 = 21;
      case 21: {
        if (tag == 170) {
         parse_field21:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field21()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field21().data(), this->field21().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field21");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_field22;
        break;
      }

      // optional string field22 = 22;
      case 22: {
        if (tag == 178) {
         parse_field22:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field22()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field22().data(), this->field22().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field22");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_field23;
        break;
      }

      // optional string field23 = 23;
      case 23: {
        if (tag == 186) {
         parse_field23:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field23()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field23().data(), this->field23().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field23");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_field24;
        break;
      }

      // optional string field24 = 24;
      case 24: {
        if (tag == 194) {
         parse_field24:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field24()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field24().data(), this->field24().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field24");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_field25;
        break;
      }

      // optional string field25 = 25;
      case 25: {
        if (tag == 202) {
         parse_field25:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field25()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field25().data(), this->field25().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field25");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_field26;
        break;
      }

      // optional string field26 = 26;
      case 26: {
        if (tag == 210) {
         parse_field26:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field26()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field26().data(), this->field26().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field26");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_field27;
        break;
      }

      // optional string field27 = 27;
      case 27: {
        if (tag == 218) {
         parse_field27:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field27()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field27().data(), this->field27().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field27");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_field28;
        break;
      }

      // optional string field28 = 28;
      case 28: {
        if (tag == 226) {
         parse_field28:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field28()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field28().data(), this->field28().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field28");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_field29;
        break;
      }

      // optional string field29 = 29;
      case 29: {
        if (tag == 234) {
         parse_field29:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field29()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field29().data(), this->field29().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field29");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_field30;
        break;
      }

      // optional string field30 = 30;
      case 30: {
        if (tag == 242) {
         parse_field30:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field30()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field30().data(), this->field30().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field30");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_field31;
        break;
      }

      // optional string field31 = 31;
      case 31: {
        if (tag == 250) {
         parse_field31:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field31()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field31().data(), this->field31().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field31");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_field32;
        break;
      }

      // optional string field32 = 32;
      case 32: {
        if (tag == 258) {
         parse_field32:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field32()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field32().data(), this->field32().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field32");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_field33;
        break;
      }

      // optional string field33 = 33;
      case 33: {
        if (tag == 266) {
         parse_field33:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field33()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field33().data(), this->field33().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field33");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_field34;
        break;
      }

      // optional string field34 = 34;
      case 34: {
        if (tag == 274) {
         parse_field34:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field34()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field34().data(), this->field34().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field34");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_field35;
        break;
      }

      // optional string field35 = 35;
      case 35: {
        if (tag == 282) {
         parse_field35:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field35()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field35().data(), this->field35().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field35");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(290)) goto parse_field36;
        break;
      }

      // optional string field36 = 36;
      case 36: {
        if (tag == 290) {
         parse_field36:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field36()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field36().data(), this->field36().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field36");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(298)) goto parse_field37;
        break;
      }

      // optional string field37 = 37;
      case 37: {
        if (tag == 298) {
         parse_field37:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field37()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field37().data(), this->field37().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field37");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(306)) goto parse_field38;
        break;
      }

      // optional string field38 = 38;
      case 38: {
        if (tag == 306) {
         parse_field38:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field38()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field38().data(), this->field38().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field38");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_field39;
        break;
      }

      // optional string field39 = 39;
      case 39: {
        if (tag == 314) {
         parse_field39:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field39()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field39().data(), this->field39().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field39");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(322)) goto parse_field40;
        break;
      }

      // optional string field40 = 40;
      case 40: {
        if (tag == 322) {
         parse_field40:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field40()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field40().data(), this->field40().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field40");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_field41;
        break;
      }

      // optional string field41 = 41;
      case 41: {
        if (tag == 330) {
         parse_field41:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field41()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field41().data(), this->field41().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field41");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_field42;
        break;
      }

      // optional string field42 = 42;
      case 42: {
        if (tag == 338) {
         parse_field42:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field42()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field42().data(), this->field42().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field42");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(346)) goto parse_field43;
        break;
      }

      // optional string field43 = 43;
      case 43: {
        if (tag == 346) {
         parse_field43:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field43()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field43().data(), this->field43().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field43");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_field44;
        break;
      }

      // optional string field44 = 44;
      case 44: {
        if (tag == 354) {
         parse_field44:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field44()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field44().data(), this->field44().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field44");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_field45;
        break;
      }

      // optional string field45 = 45;
      case 45: {
        if (tag == 362) {
         parse_field45:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field45()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field45().data(), this->field45().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field45");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(370)) goto parse_field46;
        break;
      }

      // optional string field46 = 46;
      case 46: {
        if (tag == 370) {
         parse_field46:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field46()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field46().data(), this->field46().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field46");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(378)) goto parse_field47;
        break;
      }

      // optional string field47 = 47;
      case 47: {
        if (tag == 378) {
         parse_field47:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field47()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field47().data(), this->field47().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field47");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_field48;
        break;
      }

      // optional string field48 = 48;
      case 48: {
        if (tag == 386) {
         parse_field48:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field48()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field48().data(), this->field48().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field48");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(394)) goto parse_field49;
        break;
      }

      // optional string field49 = 49;
      case 49: {
        if (tag == 394) {
         parse_field49:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field49()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field49().data(), this->field49().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field49");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_field50;
        break;
      }

      // optional string field50 = 50;
      case 50: {
        if (tag == 402) {
         parse_field50:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field50()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field50().data(), this->field50().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field50");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_field51;
        break;
      }

      // optional string field51 = 51;
      case 51: {
        if (tag == 410) {
         parse_field51:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field51()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field51().data(), this->field51().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field51");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_field52;
        break;
      }

      // optional string field52 = 52;
      case 52: {
        if (tag == 418) {
         parse_field52:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field52()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field52().data(), this->field52().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field52");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(426)) goto parse_field53;
        break;
      }

      // optional string field53 = 53;
      case 53: {
        if (tag == 426) {
         parse_field53:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field53()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field53().data(), this->field53().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field53");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_field54;
        break;
      }

      // optional string field54 = 54;
      case 54: {
        if (tag == 434) {
         parse_field54:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field54()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field54().data(), this->field54().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field54");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_field55;
        break;
      }

      // optional string field55 = 55;
      case 55: {
        if (tag == 442) {
         parse_field55:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field55()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field55().data(), this->field55().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field55");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(450)) goto parse_field56;
        break;
      }

      // optional string field56 = 56;
      case 56: {
        if (tag == 450) {
         parse_field56:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field56()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field56().data(), this->field56().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field56");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(458)) goto parse_field57;
        break;
      }

      // optional string field57 = 57;
      case 57: {
        if (tag == 458) {
         parse_field57:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field57()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field57().data(), this->field57().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field57");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(466)) goto parse_field58;
        break;
      }

      // optional string field58 = 58;
      case 58: {
        if (tag == 466) {
         parse_field58:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field58()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field58().data(), this->field58().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field58");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(474)) goto parse_field59;
        break;
      }

      // optional string field59 = 59;
      case 59: {
        if (tag == 474) {
         parse_field59:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field59()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field59().data(), this->field59().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field59");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(482)) goto parse_field60;
        break;
      }

      // optional string field60 = 60;
      case 60: {
        if (tag == 482) {
         parse_field60:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field60()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field60().data(), this->field60().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field60");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(490)) goto parse_field61;
        break;
      }

      // optional string field61 = 61;
      case 61: {
        if (tag == 490) {
         parse_field61:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field61()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field61().data(), this->field61().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field61");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(498)) goto parse_field62;
        break;
      }

      // optional string field62 = 62;
      case 62: {
        if (tag == 498) {
         parse_field62:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field62()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field62().data(), this->field62().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field62");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(506)) goto parse_field63;
        break;
      }

      // optional string field63 = 63;
      case 63: {
        if (tag == 506) {
         parse_field63:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field63()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field63().data(), this->field63().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field63");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(514)) goto parse_field64;
        break;
      }

      // optional string field64 = 64;
      case 64: {
        if (tag == 514) {
         parse_field64:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field64()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field64().data(), this->field64().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field64");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(522)) goto parse_field65;
        break;
      }

      // optional string field65 = 65;
      case 65: {
        if (tag == 522) {
         parse_field65:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field65()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field65().data(), this->field65().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field65");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(530)) goto parse_field66;
        break;
      }

      // optional string field66 = 66;
      case 66: {
        if (tag == 530) {
         parse_field66:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field66()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field66().data(), this->field66().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field66");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(538)) goto parse_field67;
        break;
      }

      // optional string field67 = 67;
      case 67: {
        if (tag == 538) {
         parse_field67:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field67()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field67().data(), this->field67().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field67");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(546)) goto parse_field68;
        break;
      }

      // optional string field68 = 68;
      case 68: {
        if (tag == 546) {
         parse_field68:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field68()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field68().data(), this->field68().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field68");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(554)) goto parse_field69;
        break;
      }

      // optional string field69 = 69;
      case 69: {
        if (tag == 554) {
         parse_field69:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field69()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field69().data(), this->field69().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field69");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(562)) goto parse_field70;
        break;
      }

      // optional string field70 = 70;
      case 70: {
        if (tag == 562) {
         parse_field70:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field70()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field70().data(), this->field70().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field70");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(570)) goto parse_field71;
        break;
      }

      // optional string field71 = 71;
      case 71: {
        if (tag == 570) {
         parse_field71:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field71()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field71().data(), this->field71().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field71");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(578)) goto parse_field72;
        break;
      }

      // optional string field72 = 72;
      case 72: {
        if (tag == 578) {
         parse_field72:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field72()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field72().data(), this->field72().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field72");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(586)) goto parse_field73;
        break;
      }

      // optional string field73 = 73;
      case 73: {
        if (tag == 586) {
         parse_field73:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field73()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field73().data(), this->field73().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field73");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(594)) goto parse_field74;
        break;
      }

      // optional string field74 = 74;
      case 74: {
        if (tag == 594) {
         parse_field74:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field74()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field74().data(), this->field74().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field74");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(602)) goto parse_field75;
        break;
      }

      // optional string field75 = 75;
      case 75: {
        if (tag == 602) {
         parse_field75:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field75()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field75().data(), this->field75().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field75");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(610)) goto parse_field76;
        break;
      }

      // optional string field76 = 76;
      case 76: {
        if (tag == 610) {
         parse_field76:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field76()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field76().data(), this->field76().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field76");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(618)) goto parse_field77;
        break;
      }

      // optional string field77 = 77;
      case 77: {
        if (tag == 618) {
         parse_field77:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field77()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field77().data(), this->field77().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field77");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(626)) goto parse_field78;
        break;
      }

      // optional string field78 = 78;
      case 78: {
        if (tag == 626) {
         parse_field78:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field78()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field78().data(), this->field78().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field78");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(634)) goto parse_field79;
        break;
      }

      // optional string field79 = 79;
      case 79: {
        if (tag == 634) {
         parse_field79:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field79()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field79().data(), this->field79().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field79");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(642)) goto parse_field80;
        break;
      }

      // optional string field80 = 80;
      case 80: {
        if (tag == 642) {
         parse_field80:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field80()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field80().data(), this->field80().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field80");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(650)) goto parse_field81;
        break;
      }

      // optional string field81 = 81;
      case 81: {
        if (tag == 650) {
         parse_field81:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field81()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field81().data(), this->field81().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field81");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(658)) goto parse_field82;
        break;
      }

      // optional string field82 = 82;
      case 82: {
        if (tag == 658) {
         parse_field82:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field82()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field82().data(), this->field82().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field82");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(666)) goto parse_field83;
        break;
      }

      // optional string field83 = 83;
      case 83: {
        if (tag == 666) {
         parse_field83:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field83()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field83().data(), this->field83().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field83");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(674)) goto parse_field84;
        break;
      }

      // optional string field84 = 84;
      case 84: {
        if (tag == 674) {
         parse_field84:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field84()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field84().data(), this->field84().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field84");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(682)) goto parse_field85;
        break;
      }

      // optional string field85 = 85;
      case 85: {
        if (tag == 682) {
         parse_field85:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field85()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field85().data(), this->field85().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field85");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(690)) goto parse_field86;
        break;
      }

      // optional string field86 = 86;
      case 86: {
        if (tag == 690) {
         parse_field86:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field86()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field86().data(), this->field86().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field86");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(698)) goto parse_field87;
        break;
      }

      // optional string field87 = 87;
      case 87: {
        if (tag == 698) {
         parse_field87:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field87()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field87().data(), this->field87().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field87");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(706)) goto parse_field88;
        break;
      }

      // optional string field88 = 88;
      case 88: {
        if (tag == 706) {
         parse_field88:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field88()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field88().data(), this->field88().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field88");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(714)) goto parse_field89;
        break;
      }

      // optional string field89 = 89;
      case 89: {
        if (tag == 714) {
         parse_field89:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field89()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field89().data(), this->field89().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field89");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(722)) goto parse_field90;
        break;
      }

      // optional string field90 = 90;
      case 90: {
        if (tag == 722) {
         parse_field90:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field90()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field90().data(), this->field90().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field90");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(730)) goto parse_field91;
        break;
      }

      // optional string field91 = 91;
      case 91: {
        if (tag == 730) {
         parse_field91:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field91()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field91().data(), this->field91().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field91");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(738)) goto parse_field92;
        break;
      }

      // optional string field92 = 92;
      case 92: {
        if (tag == 738) {
         parse_field92:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field92()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field92().data(), this->field92().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field92");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(746)) goto parse_field93;
        break;
      }

      // optional string field93 = 93;
      case 93: {
        if (tag == 746) {
         parse_field93:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field93()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field93().data(), this->field93().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field93");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(754)) goto parse_field94;
        break;
      }

      // optional string field94 = 94;
      case 94: {
        if (tag == 754) {
         parse_field94:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field94()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field94().data(), this->field94().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field94");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(762)) goto parse_field95;
        break;
      }

      // optional string field95 = 95;
      case 95: {
        if (tag == 762) {
         parse_field95:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field95()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field95().data(), this->field95().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field95");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(770)) goto parse_field96;
        break;
      }

      // optional string field96 = 96;
      case 96: {
        if (tag == 770) {
         parse_field96:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field96()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field96().data(), this->field96().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field96");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(778)) goto parse_field97;
        break;
      }

      // optional string field97 = 97;
      case 97: {
        if (tag == 778) {
         parse_field97:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field97()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field97().data(), this->field97().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field97");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(786)) goto parse_field98;
        break;
      }

      // optional string field98 = 98;
      case 98: {
        if (tag == 786) {
         parse_field98:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field98()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field98().data(), this->field98().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field98");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(794)) goto parse_field99;
        break;
      }

      // optional string field99 = 99;
      case 99: {
        if (tag == 794) {
         parse_field99:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field99()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field99().data(), this->field99().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field99");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_field100;
        break;
      }

      // optional string field100 = 100;
      case 100: {
        if (tag == 802) {
         parse_field100:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field100()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field100().data(), this->field100().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field100");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_field101;
        break;
      }

      // optional string field101 = 101;
      case 101: {
        if (tag == 810) {
         parse_field101:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field101()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field101().data(), this->field101().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field101");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_field102;
        break;
      }

      // optional string field102 = 102;
      case 102: {
        if (tag == 818) {
         parse_field102:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field102()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field102().data(), this->field102().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field102");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_field103;
        break;
      }

      // optional string field103 = 103;
      case 103: {
        if (tag == 826) {
         parse_field103:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field103()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field103().data(), this->field103().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field103");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(834)) goto parse_field104;
        break;
      }

      // optional string field104 = 104;
      case 104: {
        if (tag == 834) {
         parse_field104:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field104()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field104().data(), this->field104().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field104");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(842)) goto parse_field105;
        break;
      }

      // optional string field105 = 105;
      case 105: {
        if (tag == 842) {
         parse_field105:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field105()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field105().data(), this->field105().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field105");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(850)) goto parse_field106;
        break;
      }

      // optional string field106 = 106;
      case 106: {
        if (tag == 850) {
         parse_field106:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field106()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field106().data(), this->field106().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field106");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(858)) goto parse_field107;
        break;
      }

      // optional string field107 = 107;
      case 107: {
        if (tag == 858) {
         parse_field107:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field107()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field107().data(), this->field107().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field107");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(866)) goto parse_field108;
        break;
      }

      // optional string field108 = 108;
      case 108: {
        if (tag == 866) {
         parse_field108:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field108()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field108().data(), this->field108().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field108");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(874)) goto parse_field109;
        break;
      }

      // optional string field109 = 109;
      case 109: {
        if (tag == 874) {
         parse_field109:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field109()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field109().data(), this->field109().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field109");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(882)) goto parse_field110;
        break;
      }

      // optional string field110 = 110;
      case 110: {
        if (tag == 882) {
         parse_field110:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field110()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field110().data(), this->field110().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field110");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(890)) goto parse_field111;
        break;
      }

      // optional string field111 = 111;
      case 111: {
        if (tag == 890) {
         parse_field111:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field111()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field111().data(), this->field111().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field111");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(898)) goto parse_field112;
        break;
      }

      // optional string field112 = 112;
      case 112: {
        if (tag == 898) {
         parse_field112:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field112()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field112().data(), this->field112().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field112");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(906)) goto parse_field113;
        break;
      }

      // optional string field113 = 113;
      case 113: {
        if (tag == 906) {
         parse_field113:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field113()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field113().data(), this->field113().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field113");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(914)) goto parse_field114;
        break;
      }

      // optional string field114 = 114;
      case 114: {
        if (tag == 914) {
         parse_field114:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field114()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field114().data(), this->field114().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field114");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(922)) goto parse_field115;
        break;
      }

      // optional string field115 = 115;
      case 115: {
        if (tag == 922) {
         parse_field115:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field115()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field115().data(), this->field115().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field115");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(930)) goto parse_field116;
        break;
      }

      // optional string field116 = 116;
      case 116: {
        if (tag == 930) {
         parse_field116:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field116()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field116().data(), this->field116().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field116");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(938)) goto parse_field117;
        break;
      }

      // optional string field117 = 117;
      case 117: {
        if (tag == 938) {
         parse_field117:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field117()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field117().data(), this->field117().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field117");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(946)) goto parse_field118;
        break;
      }

      // optional string field118 = 118;
      case 118: {
        if (tag == 946) {
         parse_field118:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field118()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field118().data(), this->field118().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field118");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(954)) goto parse_field119;
        break;
      }

      // optional string field119 = 119;
      case 119: {
        if (tag == 954) {
         parse_field119:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field119()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field119().data(), this->field119().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field119");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(962)) goto parse_field120;
        break;
      }

      // optional string field120 = 120;
      case 120: {
        if (tag == 962) {
         parse_field120:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field120()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field120().data(), this->field120().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field120");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(970)) goto parse_field121;
        break;
      }

      // optional string field121 = 121;
      case 121: {
        if (tag == 970) {
         parse_field121:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field121()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field121().data(), this->field121().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field121");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(978)) goto parse_field122;
        break;
      }

      // optional string field122 = 122;
      case 122: {
        if (tag == 978) {
         parse_field122:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field122()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field122().data(), this->field122().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field122");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(986)) goto parse_field123;
        break;
      }

      // optional string field123 = 123;
      case 123: {
        if (tag == 986) {
         parse_field123:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field123()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field123().data(), this->field123().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field123");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(994)) goto parse_field124;
        break;
      }

      // optional string field124 = 124;
      case 124: {
        if (tag == 994) {
         parse_field124:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field124()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field124().data(), this->field124().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field124");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1002)) goto parse_field125;
        break;
      }

      // optional string field125 = 125;
      case 125: {
        if (tag == 1002) {
         parse_field125:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field125()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field125().data(), this->field125().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field125");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1010)) goto parse_field126;
        break;
      }

      // optional string field126 = 126;
      case 126: {
        if (tag == 1010) {
         parse_field126:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field126()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field126().data(), this->field126().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field126");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1018)) goto parse_field127;
        break;
      }

      // optional string field127 = 127;
      case 127: {
        if (tag == 1018) {
         parse_field127:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field127()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field127().data(), this->field127().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field127");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1026)) goto parse_field128;
        break;
      }

      // optional string field128 = 128;
      case 128: {
        if (tag == 1026) {
         parse_field128:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field128()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field128().data(), this->field128().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field128");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1034)) goto parse_field129;
        break;
      }

      // required string field129 = 129;
      case 129: {
        if (tag == 1034) {
         parse_field129:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field129()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field129().data(), this->field129().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field129");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestRequiredFieldsBitmap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestRequiredFieldsBitmap)
  return false;
#undef DO_
}

void TestRequiredFieldsBitmap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestRequiredFieldsBitmap)
  // required string field1 = 1;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field1().data(), this->field1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field1(), output);
  }

  // optional string field2 = 2;
  if (has_field2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field2().data(), this->field2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->field2(), output);
  }

  // optional string field3 = 3;
  if (has_field3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field3().data(), this->field3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->field3(), output);
  }

  // optional string field4 = 4;
  if (has_field4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field4().data(), this->field4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->field4(), output);
  }

  // optional string field5 = 5;
  if (has_field5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field5().data(), this->field5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->field5(), output);
  }

  // optional string field6 = 6;
  if (has_field6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field6().data(), this->field6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field6");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->field6(), output);
  }

  // optional string field7 = 7;
  if (has_field7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field7().data(), this->field7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field7");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->field7(), output);
  }

  // optional string field8 = 8;
  if (has_field8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field8().data(), this->field8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field8");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->field8(), output);
  }

  // optional string field9 = 9;
  if (has_field9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field9().data(), this->field9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field9");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->field9(), output);
  }

  // optional string field10 = 10;
  if (has_field10()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field10().data(), this->field10().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field10");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->field10(), output);
  }

  // optional string field11 = 11;
  if (has_field11()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field11().data(), this->field11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field11");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->field11(), output);
  }

  // optional string field12 = 12;
  if (has_field12()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field12().data(), this->field12().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field12");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->field12(), output);
  }

  // optional string field13 = 13;
  if (has_field13()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field13().data(), this->field13().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field13");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->field13(), output);
  }

  // optional string field14 = 14;
  if (has_field14()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field14().data(), this->field14().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field14");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->field14(), output);
  }

  // optional string field15 = 15;
  if (has_field15()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field15().data(), this->field15().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field15");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->field15(), output);
  }

  // optional string field16 = 16;
  if (has_field16()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field16().data(), this->field16().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field16");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->field16(), output);
  }

  // optional string field17 = 17;
  if (has_field17()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field17().data(), this->field17().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field17");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->field17(), output);
  }

  // optional string field18 = 18;
  if (has_field18()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field18().data(), this->field18().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field18");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->field18(), output);
  }

  // optional string field19 = 19;
  if (has_field19()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field19().data(), this->field19().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field19");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->field19(), output);
  }

  // optional string field20 = 20;
  if (has_field20()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field20().data(), this->field20().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field20");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->field20(), output);
  }

  // optional string field21 = 21;
  if (has_field21()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field21().data(), this->field21().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field21");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->field21(), output);
  }

  // optional string field22 = 22;
  if (has_field22()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field22().data(), this->field22().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field22");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->field22(), output);
  }

  // optional string field23 = 23;
  if (has_field23()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field23().data(), this->field23().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field23");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->field23(), output);
  }

  // optional string field24 = 24;
  if (has_field24()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field24().data(), this->field24().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field24");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->field24(), output);
  }

  // optional string field25 = 25;
  if (has_field25()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field25().data(), this->field25().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field25");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->field25(), output);
  }

  // optional string field26 = 26;
  if (has_field26()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field26().data(), this->field26().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field26");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->field26(), output);
  }

  // optional string field27 = 27;
  if (has_field27()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field27().data(), this->field27().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field27");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->field27(), output);
  }

  // optional string field28 = 28;
  if (has_field28()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field28().data(), this->field28().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field28");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->field28(), output);
  }

  // optional string field29 = 29;
  if (has_field29()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field29().data(), this->field29().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field29");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->field29(), output);
  }

  // optional string field30 = 30;
  if (has_field30()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field30().data(), this->field30().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field30");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->field30(), output);
  }

  // optional string field31 = 31;
  if (has_field31()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field31().data(), this->field31().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field31");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      31, this->field31(), output);
  }

  // optional string field32 = 32;
  if (has_field32()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field32().data(), this->field32().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field32");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->field32(), output);
  }

  // optional string field33 = 33;
  if (has_field33()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field33().data(), this->field33().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field33");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->field33(), output);
  }

  // optional string field34 = 34;
  if (has_field34()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field34().data(), this->field34().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field34");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->field34(), output);
  }

  // optional string field35 = 35;
  if (has_field35()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field35().data(), this->field35().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field35");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      35, this->field35(), output);
  }

  // optional string field36 = 36;
  if (has_field36()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field36().data(), this->field36().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field36");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      36, this->field36(), output);
  }

  // optional string field37 = 37;
  if (has_field37()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field37().data(), this->field37().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field37");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      37, this->field37(), output);
  }

  // optional string field38 = 38;
  if (has_field38()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field38().data(), this->field38().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field38");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      38, this->field38(), output);
  }

  // optional string field39 = 39;
  if (has_field39()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field39().data(), this->field39().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field39");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      39, this->field39(), output);
  }

  // optional string field40 = 40;
  if (has_field40()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field40().data(), this->field40().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field40");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      40, this->field40(), output);
  }

  // optional string field41 = 41;
  if (has_field41()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field41().data(), this->field41().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field41");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->field41(), output);
  }

  // optional string field42 = 42;
  if (has_field42()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field42().data(), this->field42().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field42");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      42, this->field42(), output);
  }

  // optional string field43 = 43;
  if (has_field43()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field43().data(), this->field43().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field43");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      43, this->field43(), output);
  }

  // optional string field44 = 44;
  if (has_field44()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field44().data(), this->field44().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field44");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      44, this->field44(), output);
  }

  // optional string field45 = 45;
  if (has_field45()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field45().data(), this->field45().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field45");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      45, this->field45(), output);
  }

  // optional string field46 = 46;
  if (has_field46()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field46().data(), this->field46().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field46");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      46, this->field46(), output);
  }

  // optional string field47 = 47;
  if (has_field47()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field47().data(), this->field47().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field47");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      47, this->field47(), output);
  }

  // optional string field48 = 48;
  if (has_field48()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field48().data(), this->field48().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field48");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      48, this->field48(), output);
  }

  // optional string field49 = 49;
  if (has_field49()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field49().data(), this->field49().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field49");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      49, this->field49(), output);
  }

  // optional string field50 = 50;
  if (has_field50()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field50().data(), this->field50().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field50");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->field50(), output);
  }

  // optional string field51 = 51;
  if (has_field51()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field51().data(), this->field51().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field51");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      51, this->field51(), output);
  }

  // optional string field52 = 52;
  if (has_field52()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field52().data(), this->field52().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field52");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      52, this->field52(), output);
  }

  // optional string field53 = 53;
  if (has_field53()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field53().data(), this->field53().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field53");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      53, this->field53(), output);
  }

  // optional string field54 = 54;
  if (has_field54()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field54().data(), this->field54().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field54");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      54, this->field54(), output);
  }

  // optional string field55 = 55;
  if (has_field55()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field55().data(), this->field55().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field55");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      55, this->field55(), output);
  }

  // optional string field56 = 56;
  if (has_field56()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field56().data(), this->field56().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field56");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      56, this->field56(), output);
  }

  // optional string field57 = 57;
  if (has_field57()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field57().data(), this->field57().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field57");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      57, this->field57(), output);
  }

  // optional string field58 = 58;
  if (has_field58()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field58().data(), this->field58().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field58");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      58, this->field58(), output);
  }

  // optional string field59 = 59;
  if (has_field59()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field59().data(), this->field59().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field59");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      59, this->field59(), output);
  }

  // optional string field60 = 60;
  if (has_field60()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field60().data(), this->field60().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field60");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      60, this->field60(), output);
  }

  // optional string field61 = 61;
  if (has_field61()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field61().data(), this->field61().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field61");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      61, this->field61(), output);
  }

  // optional string field62 = 62;
  if (has_field62()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field62().data(), this->field62().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field62");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      62, this->field62(), output);
  }

  // optional string field63 = 63;
  if (has_field63()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field63().data(), this->field63().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field63");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      63, this->field63(), output);
  }

  // optional string field64 = 64;
  if (has_field64()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field64().data(), this->field64().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field64");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      64, this->field64(), output);
  }

  // optional string field65 = 65;
  if (has_field65()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field65().data(), this->field65().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field65");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      65, this->field65(), output);
  }

  // optional string field66 = 66;
  if (has_field66()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field66().data(), this->field66().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field66");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      66, this->field66(), output);
  }

  // optional string field67 = 67;
  if (has_field67()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field67().data(), this->field67().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field67");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      67, this->field67(), output);
  }

  // optional string field68 = 68;
  if (has_field68()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field68().data(), this->field68().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field68");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      68, this->field68(), output);
  }

  // optional string field69 = 69;
  if (has_field69()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field69().data(), this->field69().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field69");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      69, this->field69(), output);
  }

  // optional string field70 = 70;
  if (has_field70()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field70().data(), this->field70().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field70");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      70, this->field70(), output);
  }

  // optional string field71 = 71;
  if (has_field71()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field71().data(), this->field71().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field71");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      71, this->field71(), output);
  }

  // optional string field72 = 72;
  if (has_field72()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field72().data(), this->field72().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field72");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      72, this->field72(), output);
  }

  // optional string field73 = 73;
  if (has_field73()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field73().data(), this->field73().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field73");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      73, this->field73(), output);
  }

  // optional string field74 = 74;
  if (has_field74()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field74().data(), this->field74().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field74");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      74, this->field74(), output);
  }

  // optional string field75 = 75;
  if (has_field75()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field75().data(), this->field75().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field75");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      75, this->field75(), output);
  }

  // optional string field76 = 76;
  if (has_field76()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field76().data(), this->field76().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field76");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      76, this->field76(), output);
  }

  // optional string field77 = 77;
  if (has_field77()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field77().data(), this->field77().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field77");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      77, this->field77(), output);
  }

  // optional string field78 = 78;
  if (has_field78()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field78().data(), this->field78().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field78");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      78, this->field78(), output);
  }

  // optional string field79 = 79;
  if (has_field79()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field79().data(), this->field79().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field79");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      79, this->field79(), output);
  }

  // optional string field80 = 80;
  if (has_field80()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field80().data(), this->field80().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field80");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      80, this->field80(), output);
  }

  // optional string field81 = 81;
  if (has_field81()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field81().data(), this->field81().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field81");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      81, this->field81(), output);
  }

  // optional string field82 = 82;
  if (has_field82()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field82().data(), this->field82().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field82");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      82, this->field82(), output);
  }

  // optional string field83 = 83;
  if (has_field83()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field83().data(), this->field83().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field83");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      83, this->field83(), output);
  }

  // optional string field84 = 84;
  if (has_field84()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field84().data(), this->field84().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field84");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      84, this->field84(), output);
  }

  // optional string field85 = 85;
  if (has_field85()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field85().data(), this->field85().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field85");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      85, this->field85(), output);
  }

  // optional string field86 = 86;
  if (has_field86()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field86().data(), this->field86().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field86");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      86, this->field86(), output);
  }

  // optional string field87 = 87;
  if (has_field87()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field87().data(), this->field87().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field87");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      87, this->field87(), output);
  }

  // optional string field88 = 88;
  if (has_field88()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field88().data(), this->field88().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field88");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      88, this->field88(), output);
  }

  // optional string field89 = 89;
  if (has_field89()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field89().data(), this->field89().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field89");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      89, this->field89(), output);
  }

  // optional string field90 = 90;
  if (has_field90()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field90().data(), this->field90().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field90");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      90, this->field90(), output);
  }

  // optional string field91 = 91;
  if (has_field91()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field91().data(), this->field91().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field91");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      91, this->field91(), output);
  }

  // optional string field92 = 92;
  if (has_field92()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field92().data(), this->field92().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field92");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      92, this->field92(), output);
  }

  // optional string field93 = 93;
  if (has_field93()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field93().data(), this->field93().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field93");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      93, this->field93(), output);
  }

  // optional string field94 = 94;
  if (has_field94()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field94().data(), this->field94().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field94");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      94, this->field94(), output);
  }

  // optional string field95 = 95;
  if (has_field95()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field95().data(), this->field95().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field95");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      95, this->field95(), output);
  }

  // optional string field96 = 96;
  if (has_field96()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field96().data(), this->field96().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field96");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      96, this->field96(), output);
  }

  // optional string field97 = 97;
  if (has_field97()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field97().data(), this->field97().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field97");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      97, this->field97(), output);
  }

  // optional string field98 = 98;
  if (has_field98()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field98().data(), this->field98().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field98");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      98, this->field98(), output);
  }

  // optional string field99 = 99;
  if (has_field99()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field99().data(), this->field99().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field99");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      99, this->field99(), output);
  }

  // optional string field100 = 100;
  if (has_field100()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field100().data(), this->field100().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field100");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->field100(), output);
  }

  // optional string field101 = 101;
  if (has_field101()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field101().data(), this->field101().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field101");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->field101(), output);
  }

  // optional string field102 = 102;
  if (has_field102()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field102().data(), this->field102().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field102");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->field102(), output);
  }

  // optional string field103 = 103;
  if (has_field103()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field103().data(), this->field103().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field103");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->field103(), output);
  }

  // optional string field104 = 104;
  if (has_field104()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field104().data(), this->field104().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field104");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->field104(), output);
  }

  // optional string field105 = 105;
  if (has_field105()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field105().data(), this->field105().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field105");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      105, this->field105(), output);
  }

  // optional string field106 = 106;
  if (has_field106()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field106().data(), this->field106().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field106");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      106, this->field106(), output);
  }

  // optional string field107 = 107;
  if (has_field107()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field107().data(), this->field107().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field107");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      107, this->field107(), output);
  }

  // optional string field108 = 108;
  if (has_field108()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field108().data(), this->field108().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field108");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      108, this->field108(), output);
  }

  // optional string field109 = 109;
  if (has_field109()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field109().data(), this->field109().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field109");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      109, this->field109(), output);
  }

  // optional string field110 = 110;
  if (has_field110()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field110().data(), this->field110().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field110");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      110, this->field110(), output);
  }

  // optional string field111 = 111;
  if (has_field111()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field111().data(), this->field111().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field111");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      111, this->field111(), output);
  }

  // optional string field112 = 112;
  if (has_field112()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field112().data(), this->field112().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field112");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      112, this->field112(), output);
  }

  // optional string field113 = 113;
  if (has_field113()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field113().data(), this->field113().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field113");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      113, this->field113(), output);
  }

  // optional string field114 = 114;
  if (has_field114()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field114().data(), this->field114().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field114");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      114, this->field114(), output);
  }

  // optional string field115 = 115;
  if (has_field115()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field115().data(), this->field115().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field115");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      115, this->field115(), output);
  }

  // optional string field116 = 116;
  if (has_field116()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field116().data(), this->field116().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field116");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      116, this->field116(), output);
  }

  // optional string field117 = 117;
  if (has_field117()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field117().data(), this->field117().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field117");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      117, this->field117(), output);
  }

  // optional string field118 = 118;
  if (has_field118()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field118().data(), this->field118().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field118");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      118, this->field118(), output);
  }

  // optional string field119 = 119;
  if (has_field119()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field119().data(), this->field119().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field119");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      119, this->field119(), output);
  }

  // optional string field120 = 120;
  if (has_field120()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field120().data(), this->field120().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field120");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      120, this->field120(), output);
  }

  // optional string field121 = 121;
  if (has_field121()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field121().data(), this->field121().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field121");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      121, this->field121(), output);
  }

  // optional string field122 = 122;
  if (has_field122()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field122().data(), this->field122().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field122");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      122, this->field122(), output);
  }

  // optional string field123 = 123;
  if (has_field123()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field123().data(), this->field123().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field123");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      123, this->field123(), output);
  }

  // optional string field124 = 124;
  if (has_field124()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field124().data(), this->field124().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field124");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      124, this->field124(), output);
  }

  // optional string field125 = 125;
  if (has_field125()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field125().data(), this->field125().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field125");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      125, this->field125(), output);
  }

  // optional string field126 = 126;
  if (has_field126()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field126().data(), this->field126().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field126");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      126, this->field126(), output);
  }

  // optional string field127 = 127;
  if (has_field127()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field127().data(), this->field127().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field127");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      127, this->field127(), output);
  }

  // optional string field128 = 128;
  if (has_field128()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field128().data(), this->field128().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field128");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      128, this->field128(), output);
  }

  // required string field129 = 129;
  if (has_field129()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field129().data(), this->field129().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field129");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      129, this->field129(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestRequiredFieldsBitmap)
}

::google::protobuf::uint8* TestRequiredFieldsBitmap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestRequiredFieldsBitmap)
  // required string field1 = 1;
  if (has_field1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field1().data(), this->field1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field1(), target);
  }

  // optional string field2 = 2;
  if (has_field2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field2().data(), this->field2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->field2(), target);
  }

  // optional string field3 = 3;
  if (has_field3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field3().data(), this->field3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->field3(), target);
  }

  // optional string field4 = 4;
  if (has_field4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field4().data(), this->field4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->field4(), target);
  }

  // optional string field5 = 5;
  if (has_field5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field5().data(), this->field5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->field5(), target);
  }

  // optional string field6 = 6;
  if (has_field6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field6().data(), this->field6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field6");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->field6(), target);
  }

  // optional string field7 = 7;
  if (has_field7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field7().data(), this->field7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field7");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->field7(), target);
  }

  // optional string field8 = 8;
  if (has_field8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field8().data(), this->field8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field8");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->field8(), target);
  }

  // optional string field9 = 9;
  if (has_field9()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field9().data(), this->field9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field9");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->field9(), target);
  }

  // optional string field10 = 10;
  if (has_field10()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field10().data(), this->field10().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field10");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->field10(), target);
  }

  // optional string field11 = 11;
  if (has_field11()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field11().data(), this->field11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field11");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->field11(), target);
  }

  // optional string field12 = 12;
  if (has_field12()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field12().data(), this->field12().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field12");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->field12(), target);
  }

  // optional string field13 = 13;
  if (has_field13()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field13().data(), this->field13().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field13");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->field13(), target);
  }

  // optional string field14 = 14;
  if (has_field14()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field14().data(), this->field14().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field14");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->field14(), target);
  }

  // optional string field15 = 15;
  if (has_field15()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field15().data(), this->field15().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field15");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->field15(), target);
  }

  // optional string field16 = 16;
  if (has_field16()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field16().data(), this->field16().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field16");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->field16(), target);
  }

  // optional string field17 = 17;
  if (has_field17()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field17().data(), this->field17().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field17");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->field17(), target);
  }

  // optional string field18 = 18;
  if (has_field18()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field18().data(), this->field18().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field18");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->field18(), target);
  }

  // optional string field19 = 19;
  if (has_field19()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field19().data(), this->field19().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field19");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->field19(), target);
  }

  // optional string field20 = 20;
  if (has_field20()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field20().data(), this->field20().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field20");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->field20(), target);
  }

  // optional string field21 = 21;
  if (has_field21()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field21().data(), this->field21().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field21");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->field21(), target);
  }

  // optional string field22 = 22;
  if (has_field22()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field22().data(), this->field22().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field22");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->field22(), target);
  }

  // optional string field23 = 23;
  if (has_field23()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field23().data(), this->field23().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field23");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->field23(), target);
  }

  // optional string field24 = 24;
  if (has_field24()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field24().data(), this->field24().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field24");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->field24(), target);
  }

  // optional string field25 = 25;
  if (has_field25()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field25().data(), this->field25().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field25");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->field25(), target);
  }

  // optional string field26 = 26;
  if (has_field26()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field26().data(), this->field26().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field26");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->field26(), target);
  }

  // optional string field27 = 27;
  if (has_field27()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field27().data(), this->field27().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field27");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->field27(), target);
  }

  // optional string field28 = 28;
  if (has_field28()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field28().data(), this->field28().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field28");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->field28(), target);
  }

  // optional string field29 = 29;
  if (has_field29()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field29().data(), this->field29().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field29");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->field29(), target);
  }

  // optional string field30 = 30;
  if (has_field30()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field30().data(), this->field30().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field30");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->field30(), target);
  }

  // optional string field31 = 31;
  if (has_field31()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field31().data(), this->field31().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field31");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->field31(), target);
  }

  // optional string field32 = 32;
  if (has_field32()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field32().data(), this->field32().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field32");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->field32(), target);
  }

  // optional string field33 = 33;
  if (has_field33()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field33().data(), this->field33().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field33");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->field33(), target);
  }

  // optional string field34 = 34;
  if (has_field34()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field34().data(), this->field34().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field34");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->field34(), target);
  }

  // optional string field35 = 35;
  if (has_field35()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field35().data(), this->field35().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field35");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->field35(), target);
  }

  // optional string field36 = 36;
  if (has_field36()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field36().data(), this->field36().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field36");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->field36(), target);
  }

  // optional string field37 = 37;
  if (has_field37()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field37().data(), this->field37().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field37");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->field37(), target);
  }

  // optional string field38 = 38;
  if (has_field38()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field38().data(), this->field38().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field38");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        38, this->field38(), target);
  }

  // optional string field39 = 39;
  if (has_field39()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field39().data(), this->field39().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field39");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        39, this->field39(), target);
  }

  // optional string field40 = 40;
  if (has_field40()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field40().data(), this->field40().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field40");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->field40(), target);
  }

  // optional string field41 = 41;
  if (has_field41()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field41().data(), this->field41().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field41");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->field41(), target);
  }

  // optional string field42 = 42;
  if (has_field42()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field42().data(), this->field42().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field42");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->field42(), target);
  }

  // optional string field43 = 43;
  if (has_field43()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field43().data(), this->field43().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field43");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        43, this->field43(), target);
  }

  // optional string field44 = 44;
  if (has_field44()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field44().data(), this->field44().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field44");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        44, this->field44(), target);
  }

  // optional string field45 = 45;
  if (has_field45()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field45().data(), this->field45().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field45");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        45, this->field45(), target);
  }

  // optional string field46 = 46;
  if (has_field46()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field46().data(), this->field46().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field46");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        46, this->field46(), target);
  }

  // optional string field47 = 47;
  if (has_field47()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field47().data(), this->field47().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field47");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        47, this->field47(), target);
  }

  // optional string field48 = 48;
  if (has_field48()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field48().data(), this->field48().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field48");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        48, this->field48(), target);
  }

  // optional string field49 = 49;
  if (has_field49()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field49().data(), this->field49().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field49");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        49, this->field49(), target);
  }

  // optional string field50 = 50;
  if (has_field50()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field50().data(), this->field50().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field50");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->field50(), target);
  }

  // optional string field51 = 51;
  if (has_field51()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field51().data(), this->field51().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field51");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        51, this->field51(), target);
  }

  // optional string field52 = 52;
  if (has_field52()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field52().data(), this->field52().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field52");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        52, this->field52(), target);
  }

  // optional string field53 = 53;
  if (has_field53()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field53().data(), this->field53().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field53");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        53, this->field53(), target);
  }

  // optional string field54 = 54;
  if (has_field54()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field54().data(), this->field54().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field54");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        54, this->field54(), target);
  }

  // optional string field55 = 55;
  if (has_field55()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field55().data(), this->field55().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field55");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        55, this->field55(), target);
  }

  // optional string field56 = 56;
  if (has_field56()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field56().data(), this->field56().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field56");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        56, this->field56(), target);
  }

  // optional string field57 = 57;
  if (has_field57()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field57().data(), this->field57().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field57");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        57, this->field57(), target);
  }

  // optional string field58 = 58;
  if (has_field58()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field58().data(), this->field58().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field58");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        58, this->field58(), target);
  }

  // optional string field59 = 59;
  if (has_field59()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field59().data(), this->field59().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field59");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        59, this->field59(), target);
  }

  // optional string field60 = 60;
  if (has_field60()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field60().data(), this->field60().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field60");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        60, this->field60(), target);
  }

  // optional string field61 = 61;
  if (has_field61()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field61().data(), this->field61().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field61");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        61, this->field61(), target);
  }

  // optional string field62 = 62;
  if (has_field62()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field62().data(), this->field62().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field62");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        62, this->field62(), target);
  }

  // optional string field63 = 63;
  if (has_field63()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field63().data(), this->field63().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field63");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        63, this->field63(), target);
  }

  // optional string field64 = 64;
  if (has_field64()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field64().data(), this->field64().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field64");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        64, this->field64(), target);
  }

  // optional string field65 = 65;
  if (has_field65()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field65().data(), this->field65().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field65");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        65, this->field65(), target);
  }

  // optional string field66 = 66;
  if (has_field66()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field66().data(), this->field66().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field66");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        66, this->field66(), target);
  }

  // optional string field67 = 67;
  if (has_field67()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field67().data(), this->field67().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field67");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        67, this->field67(), target);
  }

  // optional string field68 = 68;
  if (has_field68()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field68().data(), this->field68().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field68");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        68, this->field68(), target);
  }

  // optional string field69 = 69;
  if (has_field69()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field69().data(), this->field69().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field69");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        69, this->field69(), target);
  }

  // optional string field70 = 70;
  if (has_field70()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field70().data(), this->field70().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field70");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        70, this->field70(), target);
  }

  // optional string field71 = 71;
  if (has_field71()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field71().data(), this->field71().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field71");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        71, this->field71(), target);
  }

  // optional string field72 = 72;
  if (has_field72()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field72().data(), this->field72().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field72");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        72, this->field72(), target);
  }

  // optional string field73 = 73;
  if (has_field73()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field73().data(), this->field73().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field73");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        73, this->field73(), target);
  }

  // optional string field74 = 74;
  if (has_field74()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field74().data(), this->field74().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field74");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        74, this->field74(), target);
  }

  // optional string field75 = 75;
  if (has_field75()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field75().data(), this->field75().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field75");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        75, this->field75(), target);
  }

  // optional string field76 = 76;
  if (has_field76()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field76().data(), this->field76().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field76");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        76, this->field76(), target);
  }

  // optional string field77 = 77;
  if (has_field77()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field77().data(), this->field77().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field77");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        77, this->field77(), target);
  }

  // optional string field78 = 78;
  if (has_field78()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field78().data(), this->field78().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field78");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        78, this->field78(), target);
  }

  // optional string field79 = 79;
  if (has_field79()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field79().data(), this->field79().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field79");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        79, this->field79(), target);
  }

  // optional string field80 = 80;
  if (has_field80()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field80().data(), this->field80().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field80");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        80, this->field80(), target);
  }

  // optional string field81 = 81;
  if (has_field81()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field81().data(), this->field81().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field81");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        81, this->field81(), target);
  }

  // optional string field82 = 82;
  if (has_field82()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field82().data(), this->field82().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field82");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        82, this->field82(), target);
  }

  // optional string field83 = 83;
  if (has_field83()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field83().data(), this->field83().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field83");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        83, this->field83(), target);
  }

  // optional string field84 = 84;
  if (has_field84()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field84().data(), this->field84().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field84");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        84, this->field84(), target);
  }

  // optional string field85 = 85;
  if (has_field85()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field85().data(), this->field85().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field85");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        85, this->field85(), target);
  }

  // optional string field86 = 86;
  if (has_field86()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field86().data(), this->field86().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field86");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        86, this->field86(), target);
  }

  // optional string field87 = 87;
  if (has_field87()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field87().data(), this->field87().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field87");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        87, this->field87(), target);
  }

  // optional string field88 = 88;
  if (has_field88()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field88().data(), this->field88().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field88");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        88, this->field88(), target);
  }

  // optional string field89 = 89;
  if (has_field89()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field89().data(), this->field89().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field89");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        89, this->field89(), target);
  }

  // optional string field90 = 90;
  if (has_field90()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field90().data(), this->field90().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field90");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        90, this->field90(), target);
  }

  // optional string field91 = 91;
  if (has_field91()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field91().data(), this->field91().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field91");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        91, this->field91(), target);
  }

  // optional string field92 = 92;
  if (has_field92()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field92().data(), this->field92().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field92");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        92, this->field92(), target);
  }

  // optional string field93 = 93;
  if (has_field93()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field93().data(), this->field93().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field93");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        93, this->field93(), target);
  }

  // optional string field94 = 94;
  if (has_field94()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field94().data(), this->field94().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field94");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        94, this->field94(), target);
  }

  // optional string field95 = 95;
  if (has_field95()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field95().data(), this->field95().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field95");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        95, this->field95(), target);
  }

  // optional string field96 = 96;
  if (has_field96()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field96().data(), this->field96().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field96");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        96, this->field96(), target);
  }

  // optional string field97 = 97;
  if (has_field97()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field97().data(), this->field97().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field97");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        97, this->field97(), target);
  }

  // optional string field98 = 98;
  if (has_field98()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field98().data(), this->field98().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field98");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        98, this->field98(), target);
  }

  // optional string field99 = 99;
  if (has_field99()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field99().data(), this->field99().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field99");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        99, this->field99(), target);
  }

  // optional string field100 = 100;
  if (has_field100()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field100().data(), this->field100().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field100");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->field100(), target);
  }

  // optional string field101 = 101;
  if (has_field101()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field101().data(), this->field101().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field101");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->field101(), target);
  }

  // optional string field102 = 102;
  if (has_field102()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field102().data(), this->field102().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field102");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->field102(), target);
  }

  // optional string field103 = 103;
  if (has_field103()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field103().data(), this->field103().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field103");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->field103(), target);
  }

  // optional string field104 = 104;
  if (has_field104()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field104().data(), this->field104().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field104");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->field104(), target);
  }

  // optional string field105 = 105;
  if (has_field105()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field105().data(), this->field105().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field105");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        105, this->field105(), target);
  }

  // optional string field106 = 106;
  if (has_field106()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field106().data(), this->field106().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field106");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        106, this->field106(), target);
  }

  // optional string field107 = 107;
  if (has_field107()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field107().data(), this->field107().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field107");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        107, this->field107(), target);
  }

  // optional string field108 = 108;
  if (has_field108()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field108().data(), this->field108().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field108");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        108, this->field108(), target);
  }

  // optional string field109 = 109;
  if (has_field109()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field109().data(), this->field109().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field109");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        109, this->field109(), target);
  }

  // optional string field110 = 110;
  if (has_field110()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field110().data(), this->field110().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field110");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        110, this->field110(), target);
  }

  // optional string field111 = 111;
  if (has_field111()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field111().data(), this->field111().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field111");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        111, this->field111(), target);
  }

  // optional string field112 = 112;
  if (has_field112()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field112().data(), this->field112().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field112");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        112, this->field112(), target);
  }

  // optional string field113 = 113;
  if (has_field113()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field113().data(), this->field113().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field113");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        113, this->field113(), target);
  }

  // optional string field114 = 114;
  if (has_field114()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field114().data(), this->field114().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field114");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        114, this->field114(), target);
  }

  // optional string field115 = 115;
  if (has_field115()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field115().data(), this->field115().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field115");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        115, this->field115(), target);
  }

  // optional string field116 = 116;
  if (has_field116()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field116().data(), this->field116().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field116");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        116, this->field116(), target);
  }

  // optional string field117 = 117;
  if (has_field117()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field117().data(), this->field117().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field117");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        117, this->field117(), target);
  }

  // optional string field118 = 118;
  if (has_field118()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field118().data(), this->field118().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field118");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        118, this->field118(), target);
  }

  // optional string field119 = 119;
  if (has_field119()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field119().data(), this->field119().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field119");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        119, this->field119(), target);
  }

  // optional string field120 = 120;
  if (has_field120()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field120().data(), this->field120().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field120");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        120, this->field120(), target);
  }

  // optional string field121 = 121;
  if (has_field121()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field121().data(), this->field121().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field121");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        121, this->field121(), target);
  }

  // optional string field122 = 122;
  if (has_field122()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field122().data(), this->field122().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field122");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        122, this->field122(), target);
  }

  // optional string field123 = 123;
  if (has_field123()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field123().data(), this->field123().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field123");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        123, this->field123(), target);
  }

  // optional string field124 = 124;
  if (has_field124()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field124().data(), this->field124().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field124");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        124, this->field124(), target);
  }

  // optional string field125 = 125;
  if (has_field125()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field125().data(), this->field125().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field125");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        125, this->field125(), target);
  }

  // optional string field126 = 126;
  if (has_field126()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field126().data(), this->field126().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field126");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        126, this->field126(), target);
  }

  // optional string field127 = 127;
  if (has_field127()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field127().data(), this->field127().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field127");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        127, this->field127(), target);
  }

  // optional string field128 = 128;
  if (has_field128()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field128().data(), this->field128().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field128");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        128, this->field128(), target);
  }

  // required string field129 = 129;
  if (has_field129()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field129().data(), this->field129().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field129");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        129, this->field129(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestRequiredFieldsBitmap)
  return target;
}

int TestRequiredFieldsBitmap::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string field1 = 1;
    if (has_field1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field1());
    }

    // optional string field2 = 2;
    if (has_field2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field2());
    }

    // optional string field3 = 3;
    if (has_field3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field3());
    }

    // optional string field4 = 4;
    if (has_field4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field4());
    }

    // optional string field5 = 5;
    if (has_field5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field5());
    }

    // optional string field6 = 6;
    if (has_field6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field6());
    }

    // optional string field7 = 7;
    if (has_field7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field7());
    }

    // optional string field8 = 8;
    if (has_field8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field8());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string field9 = 9;
    if (has_field9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field9());
    }

    // optional string field10 = 10;
    if (has_field10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field10());
    }

    // optional string field11 = 11;
    if (has_field11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field11());
    }

    // optional string field12 = 12;
    if (has_field12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field12());
    }

    // optional string field13 = 13;
    if (has_field13()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field13());
    }

    // optional string field14 = 14;
    if (has_field14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field14());
    }

    // optional string field15 = 15;
    if (has_field15()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field15());
    }

    // optional string field16 = 16;
    if (has_field16()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field16());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string field17 = 17;
    if (has_field17()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field17());
    }

    // optional string field18 = 18;
    if (has_field18()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field18());
    }

    // optional string field19 = 19;
    if (has_field19()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field19());
    }

    // optional string field20 = 20;
    if (has_field20()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field20());
    }

    // optional string field21 = 21;
    if (has_field21()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field21());
    }

    // optional string field22 = 22;
    if (has_field22()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field22());
    }

    // optional string field23 = 23;
    if (has_field23()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field23());
    }

    // optional string field24 = 24;
    if (has_field24()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field24());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string field25 = 25;
    if (has_field25()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field25());
    }

    // optional string field26 = 26;
    if (has_field26()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field26());
    }

    // optional string field27 = 27;
    if (has_field27()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field27());
    }

    // optional string field28 = 28;
    if (has_field28()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field28());
    }

    // optional string field29 = 29;
    if (has_field29()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field29());
    }

    // optional string field30 = 30;
    if (has_field30()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field30());
    }

    // optional string field31 = 31;
    if (has_field31()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field31());
    }

    // optional string field32 = 32;
    if (has_field32()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field32());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional string field33 = 33;
    if (has_field33()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field33());
    }

    // optional string field34 = 34;
    if (has_field34()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field34());
    }

    // optional string field35 = 35;
    if (has_field35()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field35());
    }

    // optional string field36 = 36;
    if (has_field36()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field36());
    }

    // optional string field37 = 37;
    if (has_field37()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field37());
    }

    // optional string field38 = 38;
    if (has_field38()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field38());
    }

    // optional string field39 = 39;
    if (has_field39()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field39());
    }

    // optional string field40 = 40;
    if (has_field40()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field40());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional string field41 = 41;
    if (has_field41()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field41());
    }

    // optional string field42 = 42;
    if (has_field42()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field42());
    }

    // optional string field43 = 43;
    if (has_field43()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field43());
    }

    // optional string field44 = 44;
    if (has_field44()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field44());
    }

    // optional string field45 = 45;
    if (has_field45()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field45());
    }

    // optional string field46 = 46;
    if (has_field46()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field46());
    }

    // optional string field47 = 47;
    if (has_field47()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field47());
    }

    // optional string field48 = 48;
    if (has_field48()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field48());
    }

  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // optional string field49 = 49;
    if (has_field49()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field49());
    }

    // optional string field50 = 50;
    if (has_field50()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field50());
    }

    // optional string field51 = 51;
    if (has_field51()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field51());
    }

    // optional string field52 = 52;
    if (has_field52()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field52());
    }

    // optional string field53 = 53;
    if (has_field53()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field53());
    }

    // optional string field54 = 54;
    if (has_field54()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field54());
    }

    // optional string field55 = 55;
    if (has_field55()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field55());
    }

    // optional string field56 = 56;
    if (has_field56()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field56());
    }

  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    // optional string field57 = 57;
    if (has_field57()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field57());
    }

    // optional string field58 = 58;
    if (has_field58()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field58());
    }

    // optional string field59 = 59;
    if (has_field59()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field59());
    }

    // optional string field60 = 60;
    if (has_field60()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field60());
    }

    // optional string field61 = 61;
    if (has_field61()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field61());
    }

    // optional string field62 = 62;
    if (has_field62()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field62());
    }

    // optional string field63 = 63;
    if (has_field63()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field63());
    }

    // optional string field64 = 64;
    if (has_field64()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field64());
    }

  }
  if (_has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    // optional string field65 = 65;
    if (has_field65()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field65());
    }

    // optional string field66 = 66;
    if (has_field66()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field66());
    }

    // optional string field67 = 67;
    if (has_field67()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field67());
    }

    // optional string field68 = 68;
    if (has_field68()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field68());
    }

    // optional string field69 = 69;
    if (has_field69()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field69());
    }

    // optional string field70 = 70;
    if (has_field70()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field70());
    }

    // optional string field71 = 71;
    if (has_field71()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field71());
    }

    // optional string field72 = 72;
    if (has_field72()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field72());
    }

  }
  if (_has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    // optional string field73 = 73;
    if (has_field73()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field73());
    }

    // optional string field74 = 74;
    if (has_field74()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field74());
    }

    // optional string field75 = 75;
    if (has_field75()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field75());
    }

    // optional string field76 = 76;
    if (has_field76()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field76());
    }

    // optional string field77 = 77;
    if (has_field77()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field77());
    }

    // optional string field78 = 78;
    if (has_field78()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field78());
    }

    // optional string field79 = 79;
    if (has_field79()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field79());
    }

    // optional string field80 = 80;
    if (has_field80()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field80());
    }

  }
  if (_has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    // optional string field81 = 81;
    if (has_field81()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field81());
    }

    // optional string field82 = 82;
    if (has_field82()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field82());
    }

    // optional string field83 = 83;
    if (has_field83()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field83());
    }

    // optional string field84 = 84;
    if (has_field84()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field84());
    }

    // optional string field85 = 85;
    if (has_field85()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field85());
    }

    // optional string field86 = 86;
    if (has_field86()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field86());
    }

    // optional string field87 = 87;
    if (has_field87()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field87());
    }

    // optional string field88 = 88;
    if (has_field88()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field88());
    }

  }
  if (_has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    // optional string field89 = 89;
    if (has_field89()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field89());
    }

    // optional string field90 = 90;
    if (has_field90()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field90());
    }

    // optional string field91 = 91;
    if (has_field91()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field91());
    }

    // optional string field92 = 92;
    if (has_field92()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field92());
    }

    // optional string field93 = 93;
    if (has_field93()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field93());
    }

    // optional string field94 = 94;
    if (has_field94()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field94());
    }

    // optional string field95 = 95;
    if (has_field95()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field95());
    }

    // optional string field96 = 96;
    if (has_field96()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field96());
    }

  }
  if (_has_bits_[96 / 32] & (0xffu << (96 % 32))) {
    // optional string field97 = 97;
    if (has_field97()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field97());
    }

    // optional string field98 = 98;
    if (has_field98()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field98());
    }

    // optional string field99 = 99;
    if (has_field99()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field99());
    }

    // optional string field100 = 100;
    if (has_field100()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field100());
    }

    // optional string field101 = 101;
    if (has_field101()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field101());
    }

    // optional string field102 = 102;
    if (has_field102()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field102());
    }

    // optional string field103 = 103;
    if (has_field103()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field103());
    }

    // optional string field104 = 104;
    if (has_field104()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field104());
    }

  }
  if (_has_bits_[104 / 32] & (0xffu << (104 % 32))) {
    // optional string field105 = 105;
    if (has_field105()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field105());
    }

    // optional string field106 = 106;
    if (has_field106()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field106());
    }

    // optional string field107 = 107;
    if (has_field107()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field107());
    }

    // optional string field108 = 108;
    if (has_field108()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field108());
    }

    // optional string field109 = 109;
    if (has_field109()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field109());
    }

    // optional string field110 = 110;
    if (has_field110()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field110());
    }

    // optional string field111 = 111;
    if (has_field111()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field111());
    }

    // optional string field112 = 112;
    if (has_field112()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field112());
    }

  }
  if (_has_bits_[112 / 32] & (0xffu << (112 % 32))) {
    // optional string field113 = 113;
    if (has_field113()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field113());
    }

    // optional string field114 = 114;
    if (has_field114()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field114());
    }

    // optional string field115 = 115;
    if (has_field115()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field115());
    }

    // optional string field116 = 116;
    if (has_field116()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field116());
    }

    // optional string field117 = 117;
    if (has_field117()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field117());
    }

    // optional string field118 = 118;
    if (has_field118()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field118());
    }

    // optional string field119 = 119;
    if (has_field119()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field119());
    }

    // optional string field120 = 120;
    if (has_field120()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field120());
    }

  }
  if (_has_bits_[120 / 32] & (0xffu << (120 % 32))) {
    // optional string field121 = 121;
    if (has_field121()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field121());
    }

    // optional string field122 = 122;
    if (has_field122()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field122());
    }

    // optional string field123 = 123;
    if (has_field123()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field123());
    }

    // optional string field124 = 124;
    if (has_field124()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field124());
    }

    // optional string field125 = 125;
    if (has_field125()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field125());
    }

    // optional string field126 = 126;
    if (has_field126()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field126());
    }

    // optional string field127 = 127;
    if (has_field127()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field127());
    }

    // optional string field128 = 128;
    if (has_field128()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field128());
    }

  }
  if (_has_bits_[128 / 32] & (0xffu << (128 % 32))) {
    // required string field129 = 129;
    if (has_field129()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field129());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestRequiredFieldsBitmap::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestRequiredFieldsBitmap* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestRequiredFieldsBitmap*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestRequiredFieldsBitmap::MergeFrom(const TestRequiredFieldsBitmap& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1()) {
      set_field1(from.field1());
    }
    if (from.has_field2()) {
      set_field2(from.field2());
    }
    if (from.has_field3()) {
      set_field3(from.field3());
    }
    if (from.has_field4()) {
      set_field4(from.field4());
    }
    if (from.has_field5()) {
      set_field5(from.field5());
    }
    if (from.has_field6()) {
      set_field6(from.field6());
    }
    if (from.has_field7()) {
      set_field7(from.field7());
    }
    if (from.has_field8()) {
      set_field8(from.field8());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_field9()) {
      set_field9(from.field9());
    }
    if (from.has_field10()) {
      set_field10(from.field10());
    }
    if (from.has_field11()) {
      set_field11(from.field11());
    }
    if (from.has_field12()) {
      set_field12(from.field12());
    }
    if (from.has_field13()) {
      set_field13(from.field13());
    }
    if (from.has_field14()) {
      set_field14(from.field14());
    }
    if (from.has_field15()) {
      set_field15(from.field15());
    }
    if (from.has_field16()) {
      set_field16(from.field16());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_field17()) {
      set_field17(from.field17());
    }
    if (from.has_field18()) {
      set_field18(from.field18());
    }
    if (from.has_field19()) {
      set_field19(from.field19());
    }
    if (from.has_field20()) {
      set_field20(from.field20());
    }
    if (from.has_field21()) {
      set_field21(from.field21());
    }
    if (from.has_field22()) {
      set_field22(from.field22());
    }
    if (from.has_field23()) {
      set_field23(from.field23());
    }
    if (from.has_field24()) {
      set_field24(from.field24());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_field25()) {
      set_field25(from.field25());
    }
    if (from.has_field26()) {
      set_field26(from.field26());
    }
    if (from.has_field27()) {
      set_field27(from.field27());
    }
    if (from.has_field28()) {
      set_field28(from.field28());
    }
    if (from.has_field29()) {
      set_field29(from.field29());
    }
    if (from.has_field30()) {
      set_field30(from.field30());
    }
    if (from.has_field31()) {
      set_field31(from.field31());
    }
    if (from.has_field32()) {
      set_field32(from.field32());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_field33()) {
      set_field33(from.field33());
    }
    if (from.has_field34()) {
      set_field34(from.field34());
    }
    if (from.has_field35()) {
      set_field35(from.field35());
    }
    if (from.has_field36()) {
      set_field36(from.field36());
    }
    if (from.has_field37()) {
      set_field37(from.field37());
    }
    if (from.has_field38()) {
      set_field38(from.field38());
    }
    if (from.has_field39()) {
      set_field39(from.field39());
    }
    if (from.has_field40()) {
      set_field40(from.field40());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_field41()) {
      set_field41(from.field41());
    }
    if (from.has_field42()) {
      set_field42(from.field42());
    }
    if (from.has_field43()) {
      set_field43(from.field43());
    }
    if (from.has_field44()) {
      set_field44(from.field44());
    }
    if (from.has_field45()) {
      set_field45(from.field45());
    }
    if (from.has_field46()) {
      set_field46(from.field46());
    }
    if (from.has_field47()) {
      set_field47(from.field47());
    }
    if (from.has_field48()) {
      set_field48(from.field48());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from.has_field49()) {
      set_field49(from.field49());
    }
    if (from.has_field50()) {
      set_field50(from.field50());
    }
    if (from.has_field51()) {
      set_field51(from.field51());
    }
    if (from.has_field52()) {
      set_field52(from.field52());
    }
    if (from.has_field53()) {
      set_field53(from.field53());
    }
    if (from.has_field54()) {
      set_field54(from.field54());
    }
    if (from.has_field55()) {
      set_field55(from.field55());
    }
    if (from.has_field56()) {
      set_field56(from.field56());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from.has_field57()) {
      set_field57(from.field57());
    }
    if (from.has_field58()) {
      set_field58(from.field58());
    }
    if (from.has_field59()) {
      set_field59(from.field59());
    }
    if (from.has_field60()) {
      set_field60(from.field60());
    }
    if (from.has_field61()) {
      set_field61(from.field61());
    }
    if (from.has_field62()) {
      set_field62(from.field62());
    }
    if (from.has_field63()) {
      set_field63(from.field63());
    }
    if (from.has_field64()) {
      set_field64(from.field64());
    }
  }
  if (from._has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    if (from.has_field65()) {
      set_field65(from.field65());
    }
    if (from.has_field66()) {
      set_field66(from.field66());
    }
    if (from.has_field67()) {
      set_field67(from.field67());
    }
    if (from.has_field68()) {
      set_field68(from.field68());
    }
    if (from.has_field69()) {
      set_field69(from.field69());
    }
    if (from.has_field70()) {
      set_field70(from.field70());
    }
    if (from.has_field71()) {
      set_field71(from.field71());
    }
    if (from.has_field72()) {
      set_field72(from.field72());
    }
  }
  if (from._has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    if (from.has_field73()) {
      set_field73(from.field73());
    }
    if (from.has_field74()) {
      set_field74(from.field74());
    }
    if (from.has_field75()) {
      set_field75(from.field75());
    }
    if (from.has_field76()) {
      set_field76(from.field76());
    }
    if (from.has_field77()) {
      set_field77(from.field77());
    }
    if (from.has_field78()) {
      set_field78(from.field78());
    }
    if (from.has_field79()) {
      set_field79(from.field79());
    }
    if (from.has_field80()) {
      set_field80(from.field80());
    }
  }
  if (from._has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    if (from.has_field81()) {
      set_field81(from.field81());
    }
    if (from.has_field82()) {
      set_field82(from.field82());
    }
    if (from.has_field83()) {
      set_field83(from.field83());
    }
    if (from.has_field84()) {
      set_field84(from.field84());
    }
    if (from.has_field85()) {
      set_field85(from.field85());
    }
    if (from.has_field86()) {
      set_field86(from.field86());
    }
    if (from.has_field87()) {
      set_field87(from.field87());
    }
    if (from.has_field88()) {
      set_field88(from.field88());
    }
  }
  if (from._has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    if (from.has_field89()) {
      set_field89(from.field89());
    }
    if (from.has_field90()) {
      set_field90(from.field90());
    }
    if (from.has_field91()) {
      set_field91(from.field91());
    }
    if (from.has_field92()) {
      set_field92(from.field92());
    }
    if (from.has_field93()) {
      set_field93(from.field93());
    }
    if (from.has_field94()) {
      set_field94(from.field94());
    }
    if (from.has_field95()) {
      set_field95(from.field95());
    }
    if (from.has_field96()) {
      set_field96(from.field96());
    }
  }
  if (from._has_bits_[96 / 32] & (0xffu << (96 % 32))) {
    if (from.has_field97()) {
      set_field97(from.field97());
    }
    if (from.has_field98()) {
      set_field98(from.field98());
    }
    if (from.has_field99()) {
      set_field99(from.field99());
    }
    if (from.has_field100()) {
      set_field100(from.field100());
    }
    if (from.has_field101()) {
      set_field101(from.field101());
    }
    if (from.has_field102()) {
      set_field102(from.field102());
    }
    if (from.has_field103()) {
      set_field103(from.field103());
    }
    if (from.has_field104()) {
      set_field104(from.field104());
    }
  }
  if (from._has_bits_[104 / 32] & (0xffu << (104 % 32))) {
    if (from.has_field105()) {
      set_field105(from.field105());
    }
    if (from.has_field106()) {
      set_field106(from.field106());
    }
    if (from.has_field107()) {
      set_field107(from.field107());
    }
    if (from.has_field108()) {
      set_field108(from.field108());
    }
    if (from.has_field109()) {
      set_field109(from.field109());
    }
    if (from.has_field110()) {
      set_field110(from.field110());
    }
    if (from.has_field111()) {
      set_field111(from.field111());
    }
    if (from.has_field112()) {
      set_field112(from.field112());
    }
  }
  if (from._has_bits_[112 / 32] & (0xffu << (112 % 32))) {
    if (from.has_field113()) {
      set_field113(from.field113());
    }
    if (from.has_field114()) {
      set_field114(from.field114());
    }
    if (from.has_field115()) {
      set_field115(from.field115());
    }
    if (from.has_field116()) {
      set_field116(from.field116());
    }
    if (from.has_field117()) {
      set_field117(from.field117());
    }
    if (from.has_field118()) {
      set_field118(from.field118());
    }
    if (from.has_field119()) {
      set_field119(from.field119());
    }
    if (from.has_field120()) {
      set_field120(from.field120());
    }
  }
  if (from._has_bits_[120 / 32] & (0xffu << (120 % 32))) {
    if (from.has_field121()) {
      set_field121(from.field121());
    }
    if (from.has_field122()) {
      set_field122(from.field122());
    }
    if (from.has_field123()) {
      set_field123(from.field123());
    }
    if (from.has_field124()) {
      set_field124(from.field124());
    }
    if (from.has_field125()) {
      set_field125(from.field125());
    }
    if (from.has_field126()) {
      set_field126(from.field126());
    }
    if (from.has_field127()) {
      set_field127(from.field127());
    }
    if (from.has_field128()) {
      set_field128(from.field128());
    }
  }
  if (from._has_bits_[128 / 32] & (0xffu << (128 % 32))) {
    if (from.has_field129()) {
      set_field129(from.field129());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestRequiredFieldsBitmap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequiredFieldsBitmap::CopyFrom(const TestRequiredFieldsBitmap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRequiredFieldsBitmap::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if ((_has_bits_[4] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestRequiredFieldsBitmap::Swap(TestRequiredFieldsBitmap* other) {
  if (other != this) {
    std::swap(field1_, other->field1_);
    std::swap(field2_, other->field2_);
    std::swap(field3_, other->field3_);
    std::swap(field4_, other->field4_);
    std::swap(field5_, other->field5_);
    std::swap(field6_, other->field6_);
    std::swap(field7_, other->field7_);
    std::swap(field8_, other->field8_);
    std::swap(field9_, other->field9_);
    std::swap(field10_, other->field10_);
    std::swap(field11_, other->field11_);
    std::swap(field12_, other->field12_);
    std::swap(field13_, other->field13_);
    std::swap(field14_, other->field14_);
    std::swap(field15_, other->field15_);
    std::swap(field16_, other->field16_);
    std::swap(field17_, other->field17_);
    std::swap(field18_, other->field18_);
    std::swap(field19_, other->field19_);
    std::swap(field20_, other->field20_);
    std::swap(field21_, other->field21_);
    std::swap(field22_, other->field22_);
    std::swap(field23_, other->field23_);
    std::swap(field24_, other->field24_);
    std::swap(field25_, other->field25_);
    std::swap(field26_, other->field26_);
    std::swap(field27_, other->field27_);
    std::swap(field28_, other->field28_);
    std::swap(field29_, other->field29_);
    std::swap(field30_, other->field30_);
    std::swap(field31_, other->field31_);
    std::swap(field32_, other->field32_);
    std::swap(field33_, other->field33_);
    std::swap(field34_, other->field34_);
    std::swap(field35_, other->field35_);
    std::swap(field36_, other->field36_);
    std::swap(field37_, other->field37_);
    std::swap(field38_, other->field38_);
    std::swap(field39_, other->field39_);
    std::swap(field40_, other->field40_);
    std::swap(field41_, other->field41_);
    std::swap(field42_, other->field42_);
    std::swap(field43_, other->field43_);
    std::swap(field44_, other->field44_);
    std::swap(field45_, other->field45_);
    std::swap(field46_, other->field46_);
    std::swap(field47_, other->field47_);
    std::swap(field48_, other->field48_);
    std::swap(field49_, other->field49_);
    std::swap(field50_, other->field50_);
    std::swap(field51_, other->field51_);
    std::swap(field52_, other->field52_);
    std::swap(field53_, other->field53_);
    std::swap(field54_, other->field54_);
    std::swap(field55_, other->field55_);
    std::swap(field56_, other->field56_);
    std::swap(field57_, other->field57_);
    std::swap(field58_, other->field58_);
    std::swap(field59_, other->field59_);
    std::swap(field60_, other->field60_);
    std::swap(field61_, other->field61_);
    std::swap(field62_, other->field62_);
    std::swap(field63_, other->field63_);
    std::swap(field64_, other->field64_);
    std::swap(field65_, other->field65_);
    std::swap(field66_, other->field66_);
    std::swap(field67_, other->field67_);
    std::swap(field68_, other->field68_);
    std::swap(field69_, other->field69_);
    std::swap(field70_, other->field70_);
    std::swap(field71_, other->field71_);
    std::swap(field72_, other->field72_);
    std::swap(field73_, other->field73_);
    std::swap(field74_, other->field74_);
    std::swap(field75_, other->field75_);
    std::swap(field76_, other->field76_);
    std::swap(field77_, other->field77_);
    std::swap(field78_, other->field78_);
    std::swap(field79_, other->field79_);
    std::swap(field80_, other->field80_);
    std::swap(field81_, other->field81_);
    std::swap(field82_, other->field82_);
    std::swap(field83_, other->field83_);
    std::swap(field84_, other->field84_);
    std::swap(field85_, other->field85_);
    std::swap(field86_, other->field86_);
    std::swap(field87_, other->field87_);
    std::swap(field88_, other->field88_);
    std::swap(field89_, other->field89_);
    std::swap(field90_, other->field90_);
    std::swap(field91_, other->field91_);
    std::swap(field92_, other->field92_);
    std::swap(field93_, other->field93_);
    std::swap(field94_, other->field94_);
    std::swap(field95_, other->field95_);
    std::swap(field96_, other->field96_);
    std::swap(field97_, other->field97_);
    std::swap(field98_, other->field98_);
    std::swap(field99_, other->field99_);
    std::swap(field100_, other->field100_);
    std::swap(field101_, other->field101_);
    std::swap(field102_, other->field102_);
    std::swap(field103_, other->field103_);
    std::swap(field104_, other->field104_);
    std::swap(field105_, other->field105_);
    std::swap(field106_, other->field106_);
    std::swap(field107_, other->field107_);
    std::swap(field108_, other->field108_);
    std::swap(field109_, other->field109_);
    std::swap(field110_, other->field110_);
    std::swap(field111_, other->field111_);
    std::swap(field112_, other->field112_);
    std::swap(field113_, other->field113_);
    std::swap(field114_, other->field114_);
    std::swap(field115_, other->field115_);
    std::swap(field116_, other->field116_);
    std::swap(field117_, other->field117_);
    std::swap(field118_, other->field118_);
    std::swap(field119_, other->field119_);
    std::swap(field120_, other->field120_);
    std::swap(field121_, other->field121_);
    std::swap(field122_, other->field122_);
    std::swap(field123_, other->field123_);
    std::swap(field124_, other->field124_);
    std::swap(field125_, other->field125_);
    std::swap(field126_, other->field126_);
    std::swap(field127_, other->field127_);
    std::swap(field128_, other->field128_);
    std::swap(field129_, other->field129_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    std::swap(_has_bits_[2], other->_has_bits_[2]);
    std::swap(_has_bits_[3], other->_has_bits_[3]);
    std::swap(_has_bits_[4], other->_has_bits_[4]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestRequiredFieldsBitmap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestRequiredFieldsBitmap_descriptor_;
  metadata.reflection = TestRequiredFieldsBitmap_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestFieldFlags::kNoFlags1FieldNumber;
const int TestFieldFlags::kNoFlags2FieldNumber;
const int TestFieldFlags::kNoFlags3FieldNumber;
const int TestFieldFlags::kPackedFieldNumber;
const int TestFieldFlags::kPackedDeprecatedFieldNumber;
const int TestFieldFlags::kDeprecatedFieldNumber;
#endif  // !_MSC_VER

TestFieldFlags::TestFieldFlags()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestFieldFlags)
}

void TestFieldFlags::InitAsDefaultInstance() {
}

TestFieldFlags::TestFieldFlags(const TestFieldFlags& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestFieldFlags)
}

void TestFieldFlags::SharedCtor() {
  _cached_size_ = 0;
  no_flags1_ = 0;
  no_flags2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestFieldFlags::~TestFieldFlags() {
  // @@protoc_insertion_point(destructor:foo.TestFieldFlags)
  SharedDtor();
}

void TestFieldFlags::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TestFieldFlags::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestFieldFlags::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestFieldFlags_descriptor_;
}

const TestFieldFlags& TestFieldFlags::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestFieldFlags* TestFieldFlags::default_instance_ = NULL;

TestFieldFlags* TestFieldFlags::New() const {
  return new TestFieldFlags;
}

void TestFieldFlags::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TestFieldFlags*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(no_flags1_, no_flags2_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  no_flags3_.Clear();
  packed_.Clear();
  packed_deprecated_.Clear();
  deprecated_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestFieldFlags::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestFieldFlags)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 no_flags1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_flags1_)));
          set_has_no_flags1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_no_flags2;
        break;
      }

      // required int32 no_flags2 = 2;
      case 2: {
        if (tag == 16) {
         parse_no_flags2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_flags2_)));
          set_has_no_flags2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_no_flags3;
        break;
      }

      // repeated int32 no_flags3 = 3;
      case 3: {
        if (tag == 24) {
         parse_no_flags3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_no_flags3())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_no_flags3())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_no_flags3;
        if (input->ExpectTag(34)) goto parse_packed;
        break;
      }

      // repeated int32 packed = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_packed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_packed())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34, input, this->mutable_packed())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_packed_deprecated;
        break;
      }

      // repeated int32 packed_deprecated = 5 [packed = true, deprecated = true];
      case 5: {
        if (tag == 42) {
         parse_packed_deprecated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_packed_deprecated())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42, input, this->mutable_packed_deprecated())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_deprecated;
        break;
      }

      // repeated int32 deprecated = 6 [deprecated = true];
      case 6: {
        if (tag == 48) {
         parse_deprecated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_deprecated())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_deprecated())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_deprecated;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestFieldFlags)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestFieldFlags)
  return false;
#undef DO_
}

void TestFieldFlags::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestFieldFlags)
  // optional int32 no_flags1 = 1;
  if (has_no_flags1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->no_flags1(), output);
  }

  // required int32 no_flags2 = 2;
  if (has_no_flags2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->no_flags2(), output);
  }

  // repeated int32 no_flags3 = 3;
  for (int i = 0; i < this->no_flags3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->no_flags3(i), output);
  }

  // repeated int32 packed = 4 [packed = true];
  if (this->packed_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->packed(i), output);
  }

  // repeated int32 packed_deprecated = 5 [packed = true, deprecated = true];
  if (this->packed_deprecated_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_deprecated_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_deprecated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->packed_deprecated(i), output);
  }

  // repeated int32 deprecated = 6 [deprecated = true];
  for (int i = 0; i < this->deprecated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->deprecated(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestFieldFlags)
}

::google::protobuf::uint8* TestFieldFlags::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestFieldFlags)
  // optional int32 no_flags1 = 1;
  if (has_no_flags1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->no_flags1(), target);
  }

  // required int32 no_flags2 = 2;
  if (has_no_flags2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->no_flags2(), target);
  }

  // repeated int32 no_flags3 = 3;
  for (int i = 0; i < this->no_flags3_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->no_flags3(i), target);
  }

  // repeated int32 packed = 4 [packed = true];
  if (this->packed_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->packed(i), target);
  }

  // repeated int32 packed_deprecated = 5 [packed = true, deprecated = true];
  if (this->packed_deprecated_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_deprecated_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_deprecated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->packed_deprecated(i), target);
  }

  // repeated int32 deprecated = 6 [deprecated = true];
  for (int i = 0; i < this->deprecated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->deprecated(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestFieldFlags)
  return target;
}

int TestFieldFlags::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 no_flags1 = 1;
    if (has_no_flags1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_flags1());
    }

    // required int32 no_flags2 = 2;
    if (has_no_flags2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_flags2());
    }

  }
  // repeated int32 no_flags3 = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->no_flags3_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->no_flags3(i));
    }
    total_size += 1 * this->no_flags3_size() + data_size;
  }

  // repeated int32 packed = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->packed(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 packed_deprecated = 5 [packed = true, deprecated = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_deprecated_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->packed_deprecated(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_deprecated_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 deprecated = 6 [deprecated = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->deprecated_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->deprecated(i));
    }
    total_size += 1 * this->deprecated_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestFieldFlags::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestFieldFlags* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestFieldFlags*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestFieldFlags::MergeFrom(const TestFieldFlags& from) {
  GOOGLE_CHECK_NE(&from, this);
  no_flags3_.MergeFrom(from.no_flags3_);
  packed_.MergeFrom(from.packed_);
  packed_deprecated_.MergeFrom(from.packed_deprecated_);
  deprecated_.MergeFrom(from.deprecated_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_no_flags1()) {
      set_no_flags1(from.no_flags1());
    }
    if (from.has_no_flags2()) {
      set_no_flags2(from.no_flags2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestFieldFlags::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFieldFlags::CopyFrom(const TestFieldFlags& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFieldFlags::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void TestFieldFlags::Swap(TestFieldFlags* other) {
  if (other != this) {
    std::swap(no_flags1_, other->no_flags1_);
    std::swap(no_flags2_, other->no_flags2_);
    no_flags3_.Swap(&other->no_flags3_);
    packed_.Swap(&other->packed_);
    packed_deprecated_.Swap(&other->packed_deprecated_);
    deprecated_.Swap(&other->deprecated_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestFieldFlags::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestFieldFlags_descriptor_;
  metadata.reflection = TestFieldFlags_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessageCheck_SubMessage::kStrFieldNumber;
#endif  // !_MSC_VER

TestMessageCheck_SubMessage::TestMessageCheck_SubMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessageCheck.SubMessage)
}

void TestMessageCheck_SubMessage::InitAsDefaultInstance() {
}

TestMessageCheck_SubMessage::TestMessageCheck_SubMessage(const TestMessageCheck_SubMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessageCheck.SubMessage)
}

void TestMessageCheck_SubMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessageCheck_SubMessage::~TestMessageCheck_SubMessage() {
  // @@protoc_insertion_point(destructor:foo.TestMessageCheck.SubMessage)
  SharedDtor();
}

void TestMessageCheck_SubMessage::SharedDtor() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void TestMessageCheck_SubMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessageCheck_SubMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessageCheck_SubMessage_descriptor_;
}

const TestMessageCheck_SubMessage& TestMessageCheck_SubMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessageCheck_SubMessage* TestMessageCheck_SubMessage::default_instance_ = NULL;

TestMessageCheck_SubMessage* TestMessageCheck_SubMessage::New() const {
  return new TestMessageCheck_SubMessage;
}

void TestMessageCheck_SubMessage::Clear() {
  if (has_str()) {
    if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      str_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageCheck_SubMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessageCheck.SubMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string str = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "str");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessageCheck.SubMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessageCheck.SubMessage)
  return false;
#undef DO_
}

void TestMessageCheck_SubMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessageCheck.SubMessage)
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessageCheck.SubMessage)
}

::google::protobuf::uint8* TestMessageCheck_SubMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessageCheck.SubMessage)
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessageCheck.SubMessage)
  return target;
}

int TestMessageCheck_SubMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string str = 1;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessageCheck_SubMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageCheck_SubMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageCheck_SubMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageCheck_SubMessage::MergeFrom(const TestMessageCheck_SubMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_str()) {
      set_str(from.str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageCheck_SubMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageCheck_SubMessage::CopyFrom(const TestMessageCheck_SubMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageCheck_SubMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TestMessageCheck_SubMessage::Swap(TestMessageCheck_SubMessage* other) {
  if (other != this) {
    std::swap(str_, other->str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessageCheck_SubMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessageCheck_SubMessage_descriptor_;
  metadata.reflection = TestMessageCheck_SubMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TestMessageCheck::kRequiredMsgFieldNumber;
const int TestMessageCheck::kRepeatedMsgFieldNumber;
const int TestMessageCheck::kOptionalMsgFieldNumber;
const int TestMessageCheck::kRequiredStringFieldNumber;
const int TestMessageCheck::kRepeatedStringFieldNumber;
const int TestMessageCheck::kOptionalStringFieldNumber;
const int TestMessageCheck::kRequiredBytesFieldNumber;
const int TestMessageCheck::kRepeatedBytesFieldNumber;
const int TestMessageCheck::kOptionalBytesFieldNumber;
#endif  // !_MSC_VER

TestMessageCheck::TestMessageCheck()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessageCheck)
}

void TestMessageCheck::InitAsDefaultInstance() {
  required_msg_ = const_cast< ::foo::TestMessageCheck_SubMessage*>(&::foo::TestMessageCheck_SubMessage::default_instance());
  optional_msg_ = const_cast< ::foo::TestMessageCheck_SubMessage*>(&::foo::TestMessageCheck_SubMessage::default_instance());
}

TestMessageCheck::TestMessageCheck(const TestMessageCheck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessageCheck)
}

void TestMessageCheck::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  required_msg_ = NULL;
  optional_msg_ = NULL;
  required_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  required_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessageCheck::~TestMessageCheck() {
  // @@protoc_insertion_point(destructor:foo.TestMessageCheck)
  SharedDtor();
}

void TestMessageCheck::SharedDtor() {
  if (required_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete required_string_;
  }
  if (optional_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete optional_string_;
  }
  if (required_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete required_bytes_;
  }
  if (optional_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete optional_bytes_;
  }
  if (this != default_instance_) {
    delete required_msg_;
    delete optional_msg_;
  }
}

void TestMessageCheck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessageCheck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessageCheck_descriptor_;
}

const TestMessageCheck& TestMessageCheck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessageCheck* TestMessageCheck::default_instance_ = NULL;

TestMessageCheck* TestMessageCheck::New() const {
  return new TestMessageCheck;
}

void TestMessageCheck::Clear() {
  if (_has_bits_[0 / 32] & 109) {
    if (has_required_msg()) {
      if (required_msg_ != NULL) required_msg_->::foo::TestMessageCheck_SubMessage::Clear();
    }
    if (has_optional_msg()) {
      if (optional_msg_ != NULL) optional_msg_->::foo::TestMessageCheck_SubMessage::Clear();
    }
    if (has_required_string()) {
      if (required_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        required_string_->clear();
      }
    }
    if (has_optional_string()) {
      if (optional_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        optional_string_->clear();
      }
    }
    if (has_required_bytes()) {
      if (required_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        required_bytes_->clear();
      }
    }
  }
  if (has_optional_bytes()) {
    if (optional_bytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      optional_bytes_->clear();
    }
  }
  repeated_msg_.Clear();
  repeated_string_.Clear();
  repeated_bytes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessageCheck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .foo.TestMessageCheck.SubMessage required_msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_required_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_repeated_msg;
        break;
      }

      // repeated .foo.TestMessageCheck.SubMessage repeated_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_repeated_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_repeated_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_repeated_msg;
        if (input->ExpectTag(26)) goto parse_optional_msg;
        break;
      }

      // optional .foo.TestMessageCheck.SubMessage optional_msg = 3;
      case 3: {
        if (tag == 26) {
         parse_optional_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_optional_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_required_string;
        break;
      }

      // required string required_string = 4;
      case 4: {
        if (tag == 34) {
         parse_required_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_required_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_string().data(), this->required_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "required_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_repeated_string;
        break;
      }

      // repeated string repeated_string = 5;
      case 5: {
        if (tag == 42) {
         parse_repeated_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeated_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->repeated_string(this->repeated_string_size() - 1).data(),
            this->repeated_string(this->repeated_string_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "repeated_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_repeated_string;
        if (input->ExpectTag(50)) goto parse_optional_string;
        break;
      }

      // optional string optional_string = 6;
      case 6: {
        if (tag == 50) {
         parse_optional_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_string().data(), this->optional_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "optional_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_required_bytes;
        break;
      }

      // required bytes required_bytes = 7;
      case 7: {
        if (tag == 58) {
         parse_required_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_required_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_repeated_bytes;
        break;
      }

      // repeated bytes repeated_bytes = 8;
      case 8: {
        if (tag == 66) {
         parse_repeated_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_repeated_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_repeated_bytes;
        if (input->ExpectTag(74)) goto parse_optional_bytes;
        break;
      }

      // optional bytes optional_bytes = 9;
      case 9: {
        if (tag == 74) {
         parse_optional_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_optional_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessageCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessageCheck)
  return false;
#undef DO_
}

void TestMessageCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessageCheck)
  // required .foo.TestMessageCheck.SubMessage required_msg = 1;
  if (has_required_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->required_msg(), output);
  }

  // repeated .foo.TestMessageCheck.SubMessage repeated_msg = 2;
  for (int i = 0; i < this->repeated_msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->repeated_msg(i), output);
  }

  // optional .foo.TestMessageCheck.SubMessage optional_msg = 3;
  if (has_optional_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->optional_msg(), output);
  }

  // required string required_string = 4;
  if (has_required_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_string().data(), this->required_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "required_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->required_string(), output);
  }

  // repeated string repeated_string = 5;
  for (int i = 0; i < this->repeated_string_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->repeated_string(i).data(), this->repeated_string(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "repeated_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->repeated_string(i), output);
  }

  // optional string optional_string = 6;
  if (has_optional_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string().data(), this->optional_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "optional_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->optional_string(), output);
  }

  // required bytes required_bytes = 7;
  if (has_required_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->required_bytes(), output);
  }

  // repeated bytes repeated_bytes = 8;
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->repeated_bytes(i), output);
  }

  // optional bytes optional_bytes = 9;
  if (has_optional_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->optional_bytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessageCheck)
}

::google::protobuf::uint8* TestMessageCheck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessageCheck)
  // required .foo.TestMessageCheck.SubMessage required_msg = 1;
  if (has_required_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->required_msg(), target);
  }

  // repeated .foo.TestMessageCheck.SubMessage repeated_msg = 2;
  for (int i = 0; i < this->repeated_msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->repeated_msg(i), target);
  }

  // optional .foo.TestMessageCheck.SubMessage optional_msg = 3;
  if (has_optional_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->optional_msg(), target);
  }

  // required string required_string = 4;
  if (has_required_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_string().data(), this->required_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "required_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->required_string(), target);
  }

  // repeated string repeated_string = 5;
  for (int i = 0; i < this->repeated_string_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->repeated_string(i).data(), this->repeated_string(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "repeated_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->repeated_string(i), target);
  }

  // optional string optional_string = 6;
  if (has_optional_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_string().data(), this->optional_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "optional_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->optional_string(), target);
  }

  // required bytes required_bytes = 7;
  if (has_required_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->required_bytes(), target);
  }

  // repeated bytes repeated_bytes = 8;
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->repeated_bytes(i), target);
  }

  // optional bytes optional_bytes = 9;
  if (has_optional_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->optional_bytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessageCheck)
  return target;
}

int TestMessageCheck::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .foo.TestMessageCheck.SubMessage required_msg = 1;
    if (has_required_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->required_msg());
    }

    // optional .foo.TestMessageCheck.SubMessage optional_msg = 3;
    if (has_optional_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optional_msg());
    }

    // required string required_string = 4;
    if (has_required_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->required_string());
    }

    // optional string optional_string = 6;
    if (has_optional_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optional_string());
    }

    // required bytes required_bytes = 7;
    if (has_required_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->required_bytes());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bytes optional_bytes = 9;
    if (has_optional_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->optional_bytes());
    }

  }
  // repeated .foo.TestMessageCheck.SubMessage repeated_msg = 2;
  total_size += 1 * this->repeated_msg_size();
  for (int i = 0; i < this->repeated_msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->repeated_msg(i));
  }

  // repeated string repeated_string = 5;
  total_size += 1 * this->repeated_string_size();
  for (int i = 0; i < this->repeated_string_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeated_string(i));
  }

  // repeated bytes repeated_bytes = 8;
  total_size += 1 * this->repeated_bytes_size();
  for (int i = 0; i < this->repeated_bytes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->repeated_bytes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessageCheck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageCheck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageCheck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageCheck::MergeFrom(const TestMessageCheck& from) {
  GOOGLE_CHECK_NE(&from, this);
  repeated_msg_.MergeFrom(from.repeated_msg_);
  repeated_string_.MergeFrom(from.repeated_string_);
  repeated_bytes_.MergeFrom(from.repeated_bytes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_required_msg()) {
      mutable_required_msg()->::foo::TestMessageCheck_SubMessage::MergeFrom(from.required_msg());
    }
    if (from.has_optional_msg()) {
      mutable_optional_msg()->::foo::TestMessageCheck_SubMessage::MergeFrom(from.optional_msg());
    }
    if (from.has_required_string()) {
      set_required_string(from.required_string());
    }
    if (from.has_optional_string()) {
      set_optional_string(from.optional_string());
    }
    if (from.has_required_bytes()) {
      set_required_bytes(from.required_bytes());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_optional_bytes()) {
      set_optional_bytes(from.optional_bytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageCheck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageCheck::CopyFrom(const TestMessageCheck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageCheck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000049) != 0x00000049) return false;

  if (has_required_msg()) {
    if (!this->required_msg().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->repeated_msg())) return false;
  if (has_optional_msg()) {
    if (!this->optional_msg().IsInitialized()) return false;
  }
  return true;
}

void TestMessageCheck::Swap(TestMessageCheck* other) {
  if (other != this) {
    std::swap(required_msg_, other->required_msg_);
    repeated_msg_.Swap(&other->repeated_msg_);
    std::swap(optional_msg_, other->optional_msg_);
    std::swap(required_string_, other->required_string_);
    repeated_string_.Swap(&other->repeated_string_);
    std::swap(optional_string_, other->optional_string_);
    std::swap(required_bytes_, other->required_bytes_);
    repeated_bytes_.Swap(&other->repeated_bytes_);
    std::swap(optional_bytes_, other->optional_bytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessageCheck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessageCheck_descriptor_;
  metadata.reflection = TestMessageCheck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TestMessSubMess::kRepMessFieldNumber;
const int TestMessSubMess::kOptMessFieldNumber;
const int TestMessSubMess::kOneofMessFieldNumber;
const int TestMessSubMess::kReqMessFieldNumber;
const int TestMessSubMess::kDefMessFieldNumber;
#endif  // !_MSC_VER

TestMessSubMess::TestMessSubMess()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:foo.TestMessSubMess)
}

void TestMessSubMess::InitAsDefaultInstance() {
  rep_mess_ = const_cast< ::foo::TestMess*>(&::foo::TestMess::default_instance());
  opt_mess_ = const_cast< ::foo::TestMessOptional*>(&::foo::TestMessOptional::default_instance());
  oneof_mess_ = const_cast< ::foo::TestMessOneof*>(&::foo::TestMessOneof::default_instance());
  req_mess_ = const_cast< ::foo::SubMess*>(&::foo::SubMess::default_instance());
  def_mess_ = const_cast< ::foo::DefaultOptionalValues*>(&::foo::DefaultOptionalValues::default_instance());
}

TestMessSubMess::TestMessSubMess(const TestMessSubMess& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:foo.TestMessSubMess)
}

void TestMessSubMess::SharedCtor() {
  _cached_size_ = 0;
  rep_mess_ = NULL;
  opt_mess_ = NULL;
  oneof_mess_ = NULL;
  req_mess_ = NULL;
  def_mess_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TestMessSubMess::~TestMessSubMess() {
  // @@protoc_insertion_point(destructor:foo.TestMessSubMess)
  SharedDtor();
}

void TestMessSubMess::SharedDtor() {
  if (this != default_instance_) {
    delete rep_mess_;
    delete opt_mess_;
    delete oneof_mess_;
    delete req_mess_;
    delete def_mess_;
  }
}

void TestMessSubMess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessSubMess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestMessSubMess_descriptor_;
}

const TestMessSubMess& TestMessSubMess::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_t_2ftest_2dfull_2eproto();
  return *default_instance_;
}

TestMessSubMess* TestMessSubMess::default_instance_ = NULL;

TestMessSubMess* TestMessSubMess::New() const {
  return new TestMessSubMess;
}

void TestMessSubMess::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_rep_mess()) {
      if (rep_mess_ != NULL) rep_mess_->::foo::TestMess::Clear();
    }
    if (has_opt_mess()) {
      if (opt_mess_ != NULL) opt_mess_->::foo::TestMessOptional::Clear();
    }
    if (has_oneof_mess()) {
      if (oneof_mess_ != NULL) oneof_mess_->::foo::TestMessOneof::Clear();
    }
    if (has_req_mess()) {
      if (req_mess_ != NULL) req_mess_->::foo::SubMess::Clear();
    }
    if (has_def_mess()) {
      if (def_mess_ != NULL) def_mess_->::foo::DefaultOptionalValues::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessSubMess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foo.TestMessSubMess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .foo.TestMess rep_mess = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rep_mess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_opt_mess;
        break;
      }

      // required .foo.TestMessOptional opt_mess = 2;
      case 2: {
        if (tag == 18) {
         parse_opt_mess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_opt_mess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_oneof_mess;
        break;
      }

      // required .foo.TestMessOneof oneof_mess = 3;
      case 3: {
        if (tag == 26) {
         parse_oneof_mess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oneof_mess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_req_mess;
        break;
      }

      // required .foo.SubMess req_mess = 4;
      case 4: {
        if (tag == 34) {
         parse_req_mess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req_mess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_def_mess;
        break;
      }

      // required .foo.DefaultOptionalValues def_mess = 5;
      case 5: {
        if (tag == 42) {
         parse_def_mess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_def_mess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foo.TestMessSubMess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foo.TestMessSubMess)
  return false;
#undef DO_
}

void TestMessSubMess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foo.TestMessSubMess)
  // required .foo.TestMess rep_mess = 1;
  if (has_rep_mess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rep_mess(), output);
  }

  // required .foo.TestMessOptional opt_mess = 2;
  if (has_opt_mess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->opt_mess(), output);
  }

  // required .foo.TestMessOneof oneof_mess = 3;
  if (has_oneof_mess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->oneof_mess(), output);
  }

  // required .foo.SubMess req_mess = 4;
  if (has_req_mess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->req_mess(), output);
  }

  // required .foo.DefaultOptionalValues def_mess = 5;
  if (has_def_mess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->def_mess(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:foo.TestMessSubMess)
}

::google::protobuf::uint8* TestMessSubMess::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:foo.TestMessSubMess)
  // required .foo.TestMess rep_mess = 1;
  if (has_rep_mess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rep_mess(), target);
  }

  // required .foo.TestMessOptional opt_mess = 2;
  if (has_opt_mess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->opt_mess(), target);
  }

  // required .foo.TestMessOneof oneof_mess = 3;
  if (has_oneof_mess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->oneof_mess(), target);
  }

  // required .foo.SubMess req_mess = 4;
  if (has_req_mess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->req_mess(), target);
  }

  // required .foo.DefaultOptionalValues def_mess = 5;
  if (has_def_mess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->def_mess(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foo.TestMessSubMess)
  return target;
}

int TestMessSubMess::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .foo.TestMess rep_mess = 1;
    if (has_rep_mess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rep_mess());
    }

    // required .foo.TestMessOptional opt_mess = 2;
    if (has_opt_mess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->opt_mess());
    }

    // required .foo.TestMessOneof oneof_mess = 3;
    if (has_oneof_mess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oneof_mess());
    }

    // required .foo.SubMess req_mess = 4;
    if (has_req_mess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->req_mess());
    }

    // required .foo.DefaultOptionalValues def_mess = 5;
    if (has_def_mess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->def_mess());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessSubMess::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessSubMess* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessSubMess*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessSubMess::MergeFrom(const TestMessSubMess& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rep_mess()) {
      mutable_rep_mess()->::foo::TestMess::MergeFrom(from.rep_mess());
    }
    if (from.has_opt_mess()) {
      mutable_opt_mess()->::foo::TestMessOptional::MergeFrom(from.opt_mess());
    }
    if (from.has_oneof_mess()) {
      mutable_oneof_mess()->::foo::TestMessOneof::MergeFrom(from.oneof_mess());
    }
    if (from.has_req_mess()) {
      mutable_req_mess()->::foo::SubMess::MergeFrom(from.req_mess());
    }
    if (from.has_def_mess()) {
      mutable_def_mess()->::foo::DefaultOptionalValues::MergeFrom(from.def_mess());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessSubMess::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessSubMess::CopyFrom(const TestMessSubMess& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessSubMess::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_rep_mess()) {
    if (!this->rep_mess().IsInitialized()) return false;
  }
  if (has_opt_mess()) {
    if (!this->opt_mess().IsInitialized()) return false;
  }
  if (has_oneof_mess()) {
    if (!this->oneof_mess().IsInitialized()) return false;
  }
  if (has_req_mess()) {
    if (!this->req_mess().IsInitialized()) return false;
  }
  return true;
}

void TestMessSubMess::Swap(TestMessSubMess* other) {
  if (other != this) {
    std::swap(rep_mess_, other->rep_mess_);
    std::swap(opt_mess_, other->opt_mess_);
    std::swap(oneof_mess_, other->oneof_mess_);
    std::swap(req_mess_, other->req_mess_);
    std::swap(def_mess_, other->def_mess_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TestMessSubMess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestMessSubMess_descriptor_;
  metadata.reflection = TestMessSubMess_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace foo

// @@protoc_insertion_point(global_scope)
